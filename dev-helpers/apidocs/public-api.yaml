openapi: 3.0.0
info:
  title: 'Ready2.gg Public API Documentation'
  description: 'All Ready2.gg Public API endpoints are presented here.'
  contact:
    email: admin@ready2.gg
  version: 1.1.0
servers:
  -
    url: 'http://127.0.0.1:8000'
    description: 'Public API Development URL'
  -
    url: 'https://dev.ready2.gg/next-api'
    description: 'Public API Dev Server URL'
  -
    url: 'https://testing-public-api.ready2.gg'
    description: 'Public API Test Suite URL'
  -
    url: 'https://stage-api.ready2.gg'
    description: 'Public API Stage URL'
  -
    url: 'https://ready2.gg/next-api'
    description: 'Public API Production URL'
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      description: 'Authenticates the registered user'
      operationId: authUser
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - password
              type: object
              properties:
                email:
                  type: string
                  example: 'admin@ready2.gg or admin'
                password:
                  type: string
                  example: Password123
        required: true
      responses:
        '200':
          description: 'Login successful'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        allOf:
                          -
                            type: object
                            properties:
                              access_token:
                                type: string
                                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9
                              refresh_token:
                                type: string
                                example: jduVz1uY9EHVB9Gd9m2316
                              token_type:
                                type: string
                                example: bearer
                              wallet_uuid:
                                type: string
                                format: uuid
                                example: uuid
                              r2c_account_balance:
                                type: integer
                                example: 0
                              expires_in:
                                type: integer
                                example: 60
                          -
                            type: object
                            properties:
                              uuid:
                                type: string
                              email:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                              status:
                                enum:
                                  - Pending
                                  - Approved
                                  - Rejected
                                type: string
                              timezone:
                                type: string
                                example: UTC
                              language:
                                type: string
                                example: tr
                              isOnboarded:
                                type: boolean
                                example: true
                              roles:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    role_permissions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                              permissions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
        '404':
          description: 'Login failed'
  /auth/token:
    post:
      tags:
        - Authentication
      description: 'Generates new token via supplied refresh token'
      operationId: newToken
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - refresh_token
              type: object
              properties:
                refresh_token:
                  type: string
                  example: jduVz1uY9EHVB9Gd9m2316
        required: true
      responses:
        '200':
          description: 'Login successful'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        allOf:
                          -
                            type: object
                            properties:
                              access_token:
                                type: string
                                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9
                              refresh_token:
                                type: string
                                example: jduVz1uY9EHVB9Gd9m2316
                              token_type:
                                type: string
                                example: bearer
                              wallet_uuid:
                                type: string
                                format: uuid
                                example: uuid
                              r2c_account_balance:
                                type: integer
                                example: 0
                              expires_in:
                                type: integer
                                example: 60
                          -
                            type: object
                            properties:
                              uuid:
                                type: string
                              email:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                              status:
                                enum:
                                  - Pending
                                  - Approved
                                  - Rejected
                                type: string
                              timezone:
                                type: string
                                example: UTC
                              language:
                                type: string
                                example: tr
                              isOnboarded:
                                type: boolean
                                example: true
                              roles:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    role_permissions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                              permissions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
        '422':
          description: 'Unprocessable Content'
  /auth/terminate:
    post:
      tags:
        - Authentication
      description: 'Terminates the active session'
      operationId: terminateSession
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - refresh_token
              type: object
              properties:
                refresh_token:
                  type: string
                  example: jduVz1uY9EHVB9Gd9m2316
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items: {  }
                        default: []
        '401':
          description: Unauthenticated
      security:
        -
          bearerAuth: []
  /auth/logout:
    post:
      tags:
        - Authentication
      description: 'Logout user'
      operationId: logoutUser
      responses:
        '204':
          description: 'Successful operation'
        '401':
          description: Unauthenticated
      security:
        -
          bearerAuth: []
  /definition/countries:
    get:
      tags:
        - Definition
      description: 'Returns list of Countries'
      operationId: definitionCountries
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              type: string
                            name:
                              type: string
                            code:
                              type: string
  /definition/nationalities:
    get:
      tags:
        - Definition
      description: 'Returns list of Nationalities'
      operationId: definitionNationalities
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              type: string
                            name:
                              type: string
                            code:
                              type: string
  /definition/languages:
    get:
      tags:
        - Definition
      description: 'Returns list of languages'
      operationId: definitionLanguages
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: active
          in: query
          description: 'Active Status (1 or 0)'
          schema:
            type: number
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              type: string
                            name:
                              type: string
                            code:
                              type: string
                            status:
                              enum:
                                - Passive
                                - Active
                              type: string
  /definition/timezones:
    get:
      tags:
        - Definition
      description: 'Returns list of timezones'
      operationId: definitionTimezones
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              type: string
                            code:
                              type: string
                            status:
                              enum:
                                - Passive
                                - Active
                              type: string
                            country_code:
                              type: string
  /upload:
    post:
      tags:
        - Upload
      description: 'Upload File/Image'
      operationId: fileUpload
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          url:
                            type: string
                          uuid:
                            type: string
                          filename:
                            type: string
                          file_type:
                            type: string
                          file_size:
                            type: integer
                          created_at:
                            type: string
                            format: date-time
                          created_by:
                            type: object
                            properties:
                              uuid:
                                type: string
                              email:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                              status:
                                enum:
                                  - Pending
                                  - Approved
                                  - Rejected
                                type: string
                              timezone:
                                type: string
                                example: UTC
                              language:
                                type: string
                                example: tr
                              isOnboarded:
                                type: boolean
                                example: true
                              roles:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    role_permissions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                              permissions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
        '422':
          description: 'Unprocessable Content'
      security:
        -
          bearerAuth: []
  /upload/game:
    post:
      tags:
        - Upload
      description: 'Upload File/Image for tournament'
      operationId: fileUploadGame
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          url:
                            type: string
                          uuid:
                            type: string
                          filename:
                            type: string
                          created_at:
                            type: string
                            format: date-time
                          created_by:
                            type: object
                            properties:
                              uuid:
                                type: string
                              email:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                              status:
                                enum:
                                  - Pending
                                  - Approved
                                  - Rejected
                                type: string
                              timezone:
                                type: string
                                example: UTC
                              language:
                                type: string
                                example: tr
                              isOnboarded:
                                type: boolean
                                example: true
                              roles:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    role_permissions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                              permissions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
        '422':
          description: 'Unprocessable Content'
      security:
        -
          bearerAuth: []
  /agreements:
    get:
      tags:
        - Platform
      description: 'Returns list of agreements'
      operationId: PlatformListAgreements
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: agreementType
          in: query
          description: 'Agreement type'
          required: false
          allowEmptyValue: true
          schema:
            enum:
              - gdpr
              - user_agreement
              - privacy_policy
              - cookie_policy
              - beta_agreement
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            agreementType:
                              enum:
                                - gdpr
                                - user_agreement
                                - privacy_policy
                                - cookie_policy
                                - beta_agreement
                              type: string
                            version:
                              type: integer
                              example: 1
                            content:
                              type: string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
        '404':
          description: 'Not Found'
          content:
            application/json:
              example:
                success: false
                code: 404
                message: 'Agreement not found'
                data: []
  /events/contact-form:
    post:
      tags:
        - Platform/Events
      description: 'Send Contact Form'
      operationId: PlatformContactForm
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - subject
                    - firstname
                    - lastname
                    - email
                    - message
                  type: object
                  properties:
                    subject:
                      type: string
                    firstname:
                      type: string
                    lastname:
                      type: string
                    email:
                      type: string
                    message:
                      type: string
                    company:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/create-conversation:
    post:
      tags:
        - Platform/Events
      description: 'Create Conversation and Add Participants'
      operationId: CreateConversation
      parameters:
        -
          name: type
          in: query
          description: ''
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - nickname
                    - nickname_hash
                    - type
                  type: object
                  properties:
                    nickname:
                      type: string
                    nickname_hash:
                      type: string
                    type:
                      enum:
                        - directmessage
                        - teammessage
                        - encounter
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/conversation-delete-participant:
    delete:
      tags:
        - Platform/Events
      description: 'Delete Conversation Participant'
      operationId: DeleteConversationParticipant
      parameters:
        -
          name: conversation_uuid
          in: query
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - message
                    - conversation_uuid
                  type: object
                  properties:
                    conversation_uuid:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/send-conversation-message:
    post:
      tags:
        - Platform/Events
      description: 'Send Conversation Message'
      operationId: SendConversationMessage
      parameters:
        -
          name: message
          in: query
          description: ''
          schema:
            type: string
        -
          name: conversation_uuid
          in: query
          description: ''
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - message
                    - receiver_user_uuid
                  type: object
                  properties:
                    message:
                      type: string
                    conversation_uuid:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/create-newsletter:
    post:
      tags:
        - Platform/Events
      description: 'Send NewsLetter Form'
      operationId: PlatformNewsLetterForm
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - email
                  type: object
                  properties:
                    email:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
  '/events/{gameslug}/{teamslug}-{teamhash}/settings/team/photo':
    put:
      tags:
        - Platform/Events
      description: 'Team Change Photo'
      operationId: PlatformTeamChangePhoto
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required: []
                  type: object
                  properties:
                    logo_uuid:
                      type: string
                    banner_uuid:
                      type: string
                  schema: TeamSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/team/create:
    post:
      tags:
        - Platform/Events
      description: 'Create Team'
      operationId: PlatformTeamCreate
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - game
                - name
                - team_hash
                - triCode
                - serverLocation
              type: object
              properties:
                game:
                  type: string
                name:
                  type: string
                team_hash:
                  type: number
                triCode:
                  type: string
                serverLocation:
                  type: string
        required: true
      responses:
        '201':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: 84ced0bf-ed95-4217-b886-77ea7007355f
                      name:
                        type: string
                        example: 'Team Name'
                      slug:
                        type: string
                        example: team-name
                      hash:
                        type: number
                        example: 123
                      game:
                        type: string
                        example: valorant
                      href:
                        type: string
                        example: /valorant/example-team-2
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{teamslug}-{teamhash}/kick-user':
    post:
      tags:
        - Platform/Events
      description: 'Send Make Kick User'
      operationId: PlatformTeamMakeKickUser
      parameters:
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    nickname:
                      type: string
                    nickname_hash:
                      type: number
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{teamslug}-{teamhash}/make-captain':
    post:
      tags:
        - Platform/Events
      description: 'Send Make Captain'
      operationId: PlatformTeamMakeCaptain
      parameters:
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    nickname:
                      type: string
                    nickname_hash:
                      type: number
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{teamslug}-{teamhash}/make-coach':
    post:
      tags:
        - Platform/Events
      description: 'Send Make Coach'
      operationId: PlatformTeamMakeCoach
      parameters:
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    nickname:
                      type: string
                    nickname_hash:
                      type: number
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{teamslug}-{teamhash}/make-contact':
    post:
      tags:
        - Platform/Events
      description: 'Send Make Contact User'
      operationId: PlatformTeamMakeContactUser
      parameters:
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    nickname:
                      type: string
                    nickname_hash:
                      type: number
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{teamslug}-{teamhash}/make-substitute':
    post:
      tags:
        - Platform/Events
      description: 'Send Make Substitute'
      operationId: PlatformTeamMakeSubstitute
      parameters:
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    nickname:
                      type: string
                    nickname_hash:
                      type: number
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/team/member/application:
    post:
      tags:
        - Platform/Events
      description: 'Team Member Application'
      operationId: PlatformMemberApplication
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - teamSlug
                    - team_hash
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    teamSlug:
                      type: string
                    team_hash:
                      type: number
                    nickname:
                      type: string
                    nickname_hash:
                      type: string
                    status:
                      enum:
                        - Pending
                        - Agree
                        - Reject
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/team/member/invite/send:
    post:
      tags:
        - Platform/Events
      description: 'Create Member Invite'
      operationId: PlatformMemberInvite
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - team
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    team_name:
                      type: string
                    team_hash:
                      type: number
                    members:
                      type: array
                      items:
                        type: object
                        properties:
                          nickname:
                            type: string
                          nickname_hash:
                            type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/team/member/join-application:
    post:
      tags:
        - Platform/Events
      description: 'Apply Team Member Request'
      operationId: TeamMemberJoinApplication
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - team
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    team_name:
                      type: string
                    team_hash:
                      type: number
                    nickname:
                      type: string
                    nickname_hash:
                      type: number
                    status:
                      enum:
                        - Pending
                        - Approved
                        - Rejected
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/teams/{teamSlug}/{teamHash}/leave-team':
    patch:
      tags:
        - Platform/Events
      description: 'User can leave from team'
      operationId: leaveTeam
      parameters:
        -
          name: teamSlug
          in: path
          description: "Team's slug"
          required: true
          schema:
            type: string
          example: esa-valorant-team
        -
          name: teamHash
          in: path
          description: "Team's hash"
          required: true
          schema:
            type: integer
          example: 10
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  /events/team/member/join:
    post:
      tags:
        - Platform/Events
      description: 'Apply Team Member'
      operationId: TeamMemberJoin
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - team
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    team_name:
                      type: string
                    team_hash:
                      type: number
                    nickname:
                      type: string
                    nickname_hash:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{teamslug}-{teamhash}/members':
    get:
      tags:
        - Platform/Events
      description: 'Team basic member list'
      operationId: PlatformTeamMemberlist
      parameters:
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: search
          in: query
          description: 'user nickname'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page number '
          schema:
            type: number
          example: 0
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{gameslug}/{teamslug}-{teamhash}/settings/general':
    put:
      tags:
        - Platform/Events
      description: 'Get Team Setting General'
      operationId: PlatformEventSettingGeneralTeam
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - name
                    - hash
                    - tricode
                  type: object
                  properties:
                    name:
                      type: string
                    hash:
                      type: number
                    tricode:
                      type: string
                    color:
                      type: string
                    description:
                      type: string
                      example: ''
                    location:
                      type: string
                      example: 'Countries uuid'
                    contact_member:
                      type: string
                      example: 'user uuid'
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
                  -
                    properties:
                      data:
                        type: object
                        properties:
                          teamSlug:
                            type: string
                          teamHash:
                            type: integer
                          teamName:
                            type: string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{gameslug}/{teamslug}-{teamhash}/settings/notifications':
    put:
      tags:
        - Platform/Events
      description: 'Get Team Setting Notifications'
      operationId: PlatformEventSettingNotificationsTeam
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - upcoming_tournaments
                    - team_chat
                    - featured_tournaments
                  type: object
                  properties:
                    upcoming_tournaments:
                      type: string
                    team_chat:
                      type: string
                    featured_tournaments:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{gameslug}/{teamslug}-{teamhash}/settings/preferences':
    put:
      tags:
        - Platform/Events
      description: 'Get Team Setting Preferences'
      operationId: PlatformEventSettingPreferencesTeam
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - application
                    - team_chat
                    - statistics
                    - social_media_links
                    - contact
                  type: object
                  properties:
                    application:
                      type: string
                    team_chat:
                      type: string
                    statistics:
                      type: string
                    social_media_links:
                      type: string
                    contact:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{gameslug}/{teamslug}-{teamhash}/settings/social-accounts':
    put:
      tags:
        - Platform/Events
      description: 'Get Team Setting SocialAccount'
      operationId: PlatformEventSettingSocialAccountTeam
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required: []
                  type: object
                  properties:
                    instagram:
                      type: string
                    facebook:
                      type: string
                    twitter:
                      type: string
                    discord:
                      type: string
                    youtube:
                      type: string
                    linkedin:
                      type: string
                    pinterest:
                      type: string
                    twitch:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/{teamslug}-{teamhash}/transfer-ownership':
    post:
      tags:
        - Platform/Events
      description: 'Send Transfer Owner Ship'
      operationId: PlatformTransferOwnerShip
      parameters:
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - nickname
                    - nickname_hash
                  type: object
                  properties:
                    nickname:
                      type: string
                    nickname_hash:
                      type: number
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /teams/members/kick:
    post:
      tags:
        - Platform/Events
      description: 'Team Member Kick user'
      operationId: PlatformTeamMemberKick
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - nickname
                    - nickname_hash
                    - team_slug
                    - team_hash
                  type: object
                  properties:
                    nickname:
                      type: string
                      example: nickname
                    nickname_hash:
                      type: number
                      example: 1
                    team_slug:
                      type: string
                      example: team_slug
                    team_hash:
                      type: number
                      example: 1
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/ticket-add-comment:
    post:
      tags:
        - Platform/Events
      description: 'Add comment to ticket.'
      operationId: addPlatformComment
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - ticket_uuid
                    - comment
                  type: object
                  properties:
                    ticket_uuid:
                      type: string
                    comment:
                      type: string
                    files_uuid:
                      type: array
                      items:
                        type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            uuid:
                              type: string
                            title:
                              type: string
                            status:
                              enum:
                                - Respond
                                - Waiting
                                - Resolved
                              type: string
                            reason:
                              enum:
                                - tournament
                                - other
                              type: string
                            comments:
                              enum:
                                - tournament
                                - other
                              type: string
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                            name:
                              type: string
                            nickname:
                              type: string
                            assigned_name:
                              type: string
                            assigned_nickname:
                              type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/ticket-create:
    post:
      tags:
        - Platform/Events
      description: 'Create Ticket'
      operationId: PlatformCreateTicket
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  type: object
                  properties:
                    title:
                      type: string
                    comment:
                      type: string
                    reason:
                      enum:
                        - tournament
                        - other
                      type: string
                    files_uuid:
                      type: array
                      items:
                        type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/tournaments/check-in:
    post:
      tags:
        - Tournament
      summary: 'Check In Tournament'
      description: 'Check In Tournament'
      operationId: TournamentCheckInController
      parameters:
        -
          name: tournament_uuid
          in: query
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/tournaments/leave:
    post:
      tags:
        - Tournament
      summary: 'Leave Tournament'
      description: 'Leave Tournament'
      operationId: TournamentLeaveController
      parameters:
        -
          name: tournament_uuid
          in: query
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/events/tournaments/{gameslug}/{tournamentslug}/join':
    post:
      tags:
        - Tournament
      summary: 'Join Tournament'
      description: 'Join Tournament'
      operationId: PlatformJoinTournament
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentslug
          in: path
          description: 'Tournament Slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/block:
    post:
      tags:
        - Platform/Events
      description: 'Block user'
      operationId: PlatformEventBlockUser
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  type: object
                  properties:
                    nickname:
                      type: string
                      example: nickname
                    nickname_hash:
                      type: number
                      example: 1
                    userId:
                      type: string
                      format: uuid
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/phonenumber/change:
    post:
      tags:
        - Platform/Events
      description: 'Change User Change Phone Number'
      operationId: PlatformEventUserPhoneNumberChange
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - current_password
                    - new_phonenumber
                  type: object
                  properties:
                    current_password:
                      type: string
                    new_phonenumber:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/settings/profile/photo:
    put:
      tags:
        - Platform/Events
      description: 'Change User Photo'
      operationId: PlatformEventSettingProfilePhoto
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - logo_uuid
                  type: object
                  properties:
                    logo_uuid:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/chat-notifications:
    post:
      tags:
        - Platform/Events
      description: 'User Chat Notification'
      operationId: PlatformUserChatNotifications
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/delete:
    delete:
      tags:
        - Platform/Events
      description: 'User Delete'
      operationId: PlatformEventUserDelete
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - current_password
                  type: object
                  properties:
                    current_password:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/friend:
    post:
      tags:
        - Platform/Events
      description: 'Send Friend Request user'
      operationId: PlatformEventRequestFriend
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  type: object
                  properties:
                    nickname:
                      type: string
                      example: nickname
                    nickname_hash:
                      type: number
                      example: 1
                    userId:
                      type: string
                      format: uuid
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
    delete:
      tags:
        - Platform/Events
      description: 'Send Friend Delete Request user'
      operationId: PlatformEventDeleteRequestFriend
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  type: object
                  properties:
                    nickname:
                      type: string
                      example: nickname
                    nickname_hash:
                      type: number
                      example: 1
                    userId:
                      type: string
                      format: uuid
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/email/change:
    post:
      tags:
        - Platform/Events
      description: 'Change User Change Email'
      operationId: PlatformEventUserEmaiChange
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - current_password
                    - new_email
                  type: object
                  properties:
                    current_password:
                      type: string
                    new_email:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '400':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/accepted:
    post:
      tags:
        - Platform/Events
      description: 'Send Friend Accepted Request user'
      operationId: PlatformEventAcceptedRequestFriend
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  type: object
                  properties:
                    nickname:
                      type: string
                      example: nickname
                    nickname_hash:
                      type: number
                      example: 1
                    userId:
                      type: string
                      format: uuid
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/reject:
    post:
      tags:
        - Platform/Events
      description: 'Send Friend Reject Request user'
      operationId: PlatformEventRejectRequestFriend
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  type: object
                  properties:
                    nickname:
                      type: string
                      example: nickname
                    nickname_hash:
                      type: number
                      example: 1
                    userId:
                      type: string
                      format: uuid
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/new-email/verify:
    post:
      tags:
        - Platform/Events
      description: 'Change User Verift  New Email'
      operationId: PlatformEventUserNewEmailVerify
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - verify_code
                  type: object
                  properties:
                    verify_code:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
                  -
                    properties:
                      email:
                        type: string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/notifications:
    delete:
      tags:
        - Platform/Events
      description: 'Change User Notification delete'
      operationId: PlatformEventUserNotificationDelete
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required: []
                  type: object
                  properties:
                    notification_ids:
                      type: array
                      items:
                        oneOf:
                          -
                            type: string
                            example: id
                            property: type
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/notification-read:
    post:
      tags:
        - Platform/Events
      description: 'Change User Notification read'
      operationId: PlatformEventUserNotificationRead
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/password/change:
    post:
      tags:
        - Platform/Events
      description: 'Change User Password Change'
      operationId: PlatformEventUserPasswordChange
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - current_password
                    - new_password
                    - new_password_confirmation
                  type: object
                  properties:
                    current_password:
                      type: string
                    new_password:
                      type: string
                    new_password_confirmation:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/settings/preferences:
    put:
      tags:
        - Platform/Events
      description: 'User Change Settings Preferences Account'
      operationId: PlatformUserSettingspreferencesPut
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required: []
                  type: object
                  properties:
                    messaging:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                    team_invitation:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                    friend_invitation:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                    statistics:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                    social_media:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                    fullname:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                    nationality:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                    phonenumber:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                    birthday:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                    status:
                      enum:
                        - everyone
                        - friends
                        - invisible
                        - nobody
                        - value
                        - standard
                        - busy
                      type: string
                  schema: UserPreferencesSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/settings/profile:
    patch:
      tags:
        - Platform/Events
      description: 'Change User Setting'
      operationId: PlatformEventSettingProfile
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  type: object
                  properties:
                    firstname:
                      type: string
                    lastname:
                      type: string
                    birthday:
                      type: string
                    username:
                      type: string
                    nickname:
                      type: string
                      example: nickname
                    nickname_hash:
                      type: number
                      example: 1
                    languages:
                      type: string
                      example: 'language uuid'
                    nationality:
                      type: string
                      example: 'nationality uuid'
                    location:
                      type: string
                      example: 'country uuid'
                    about:
                      type: string
                    phone:
                      required:
                        - number
                        - countryCode
                      type: object
                      properties:
                        number:
                          type: string
                        countryCode:
                          type: integer
                    logoId:
                      type: string
                      format: uuid
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/settings/accounts:
    put:
      tags:
        - Platform/Events
      description: 'User Change Settings Account'
      operationId: PlatformUserSettingsAccount
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required: []
                  type: object
                  properties:
                    instagram:
                      type: string
                    facebook:
                      type: string
                    twitter:
                      type: string
                    discord:
                      type: string
                    youtube:
                      type: string
                    linkedin:
                      type: string
                    pinterest:
                      type: string
                    twitch:
                      type: string
                    trackergg:
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/settings/notifications:
    put:
      tags:
        - Platform/Events
      description: 'User Change Settings Account'
      operationId: PlatformUserSettingsNotificationsPut
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required: []
                  type: object
                  properties:
                    news:
                      enum:
                        - email
                        - web
                        - never
                      type: string
                    ads:
                      enum:
                        - email
                        - web
                        - never
                      type: string
                    personal_messages:
                      enum:
                        - email
                        - web
                        - never
                      type: string
                    team_messages:
                      enum:
                        - email
                        - web
                        - never
                      type: string
                    encounter_messages:
                      enum:
                        - email
                        - web
                        - never
                      type: string
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /events/user/unblock:
    post:
      tags:
        - Platform/Events
      description: 'Unblock user'
      operationId: PlatformEventUnblockUser
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  type: object
                  properties:
                    nickname:
                      type: string
                      example: nickname
                    nickname_hash:
                      type: number
                      example: 1
                    userId:
                      type: string
                      format: uuid
                  schema: UserBlockSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/faq/{faqtype}':
    get:
      tags:
        - Platform
      description: 'Returns list of faq'
      operationId: PlatformListFaq
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: faqtype
          in: path
          description: 'Faq Type'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            description:
                              type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
  /game/connect:
    post:
      tags:
        - 'Game Connect'
      description: 'Game url'
      operationId: PlatformConnectGame
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                -
                  required:
                    - code
                  type: object
                  properties:
                    code:
                      type: string
                  schema: UserGameConnectSchema
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                              example: ''
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /game/disconnect:
    post:
      tags:
        - 'Game Connect'
      description: 'Disconnect game account'
      operationId: platformDisconnectGame
      parameters:
        -
          name: gameSlug
          in: query
          description: 'Game slug for disconnect user game account'
          schema:
            type: string
      responses:
        '204':
          description: 'Successful operation'
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /game/update:
    post:
      tags:
        - 'Game Connect'
      description: 'Update game account'
      operationId: platformUpdateGame
      parameters:
        -
          name: gameSlug
          in: query
          description: 'Game slug for update user game account'
          schema:
            type: string
      responses:
        '204':
          description: 'Successful operation'
        '400':
          description: 'Bad request'
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/check-steam-connection/{gameSlug}':
    get:
      tags:
        - 'Game Connect'
      description: 'Check Steam game connection'
      operationId: checkSteamGameConnection
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug for check steam connection'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          status:
                            enum:
                              - waiting
                              - success
                              - error
                            type: string
                          message:
                            type: string
                          details:
                            type: object
                            properties:
                              userId:
                                type: string
                                nullable: true
                              gameId:
                                type: string
                                nullable: true
        '404':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /games:
    get:
      tags:
        - Platform
      description: 'Returns list of games'
      operationId: PlatformGames
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                oneOf:
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: games_hero
                                      title:
                                        type: string
                                        example: title
                                      description:
                                        type: string
                                        example: description
                                    schema: GamesHero
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: games
                                      title:
                                        type: string
                                        example: Games
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All Games'
                                            href:
                                              type: string
                                              example: /games
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            slug:
                                              type: string
                                            active_tournaments:
                                              type: number
                                            image_url:
                                              type: string
                                            prize:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  text:
                                                    type: string
                                                  currency:
                                                    type: string
                                            users_enrolled:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  slug:
                                                    type: string
                                                  items:
                                                    type: object
                                                    properties:
                                                      name:
                                                        type: string
                                                      nickname:
                                                        type: string
                                                      nickname_hash:
                                                        type: number
                                                      href:
                                                        type: string
                                                      image_url:
                                                        type: string
                                                      status:
                                                        type: string
                                            view_more:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  title:
                                                    type: string
                                                  href:
                                                    type: string
                                    schema: FeaturedGames
                                  -
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                      type:
                                        type: string
                                        example: banner
                                      title:
                                        type: string
                                      media:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            click_url:
                                              type: string
                                            script:
                                              type: string
                                    schema: Banners
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: news
                                      title:
                                        type: string
                                        example: News
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All News'
                                            href:
                                              type: string
                                              example: /news
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            published_at:
                                              type: number
                                            title:
                                              type: string
                                            href:
                                              type: string
                                            spot:
                                              type: string
                                            summary:
                                              type: string
                                            image_url:
                                              type: string
                                            tags:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  name:
                                                    type: string
                                                  url:
                                                    type: string
                                    schema: news
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: testimonials
                                      title:
                                        type: string
                                        example: 'EXPLORING THE WORLD OF GAME PLATFORMS'
                                      spot:
                                        type: string
                                        example: 'Ready2 is a software or hardware system used to play video games. This includes consoles, such as the PlayStation, Xbox, and Nintendo Switch, as well as computers and mobile devices. Each platform offers a unique gaming experience, with varying levels of graphics, processing power, and user interface.'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'More About Ready2'
                                            slug:
                                              type: string
                                              example: /about
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            full_name:
                                              type: string
                                            job_title:
                                              type: string
                                            testimonial:
                                              type: string
                                            image_url:
                                              type: string
                                    schema: Testimonials
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: upcoming_games
                                      title:
                                        type: string
                                        example: 'Upcoming Games'
                                      spot:
                                        type: string
                                        example: spot
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            spot:
                                              type: string
                                            image_url:
                                              type: string
                                    schema: UpcomingGame
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
  /game-list:
    get:
      tags:
        - Platform
      description: 'Returns list of games'
      operationId: PlatformGameList
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            href:
                              type: string
                              example: /game
                            image_url:
                              type: string
                              example: 'https://test.cdn.ready2.gg/game-logo-image/valorant.webp?v1'
                            isConnected:
                              type: boolean
                              description: 'Check if user connected to game. If token not exist, return false'
                              example: true
                            playingAs:
                              type: string
                              description: 'If user connected to game, return user nickname otherwise null'
                              nullable: true
                              example: ready2warrior
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        - {  }
        -
          bearerAuth: []
  '/games/{gameslug}':
    get:
      tags:
        - Platform
      description: 'Returns list of game detail'
      operationId: PlatformListGameDetail
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                oneOf:
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: game_heor
                                      banner_url:
                                        type: string
                                        example: ''
                                      connectedAccount:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            nickname:
                                              type: string
                                            rank:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  name:
                                                    type: string
                                                  image_url:
                                                    type: string
                                      description:
                                        type: string
                                        example: ''
                                      tags:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            value:
                                              type: string
                                            text:
                                              type: string
                                      user_enrolled:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            total:
                                              type: number
                                            slug:
                                              type: string
                                            tags:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  name:
                                                    type: string
                                                  nickname:
                                                    type: string
                                                  nickname_hash:
                                                    type: number
                                                  href:
                                                    type: string
                                                  image_url:
                                                    type: string
                                                  status:
                                                    type: string
                                    schema: featuredTournaments
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: featured_tournaments
                                      title:
                                        type: string
                                        example: 'Featured Tournaments'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All Tournaments'
                                            href:
                                              type: string
                                              example: /tournaments
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            starts_at:
                                              type: number
                                            tournament_status:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  status:
                                                    type: string
                                                  text:
                                                    type: string
                                            team_member_size:
                                              type: string
                                            team_size:
                                              type: string
                                            image_url:
                                              type: string
                                            prize:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  text:
                                                    type: string
                                                  currency:
                                                    type: string
                                            game:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  id:
                                                    type: string
                                                  name:
                                                    type: string
                                                  slug:
                                                    type: string
                                                  image_url:
                                                    type: string
                                            users_enrolled:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  slug:
                                                    type: string
                                                  items:
                                                    type: object
                                                    properties:
                                                      name:
                                                        type: string
                                                      nickname:
                                                        type: string
                                                      nickname_hash:
                                                        type: number
                                                      href:
                                                        type: string
                                                      image_url:
                                                        type: string
                                                      status:
                                                        type: string
                                            view_more:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  title:
                                                    type: string
                                                  href:
                                                    type: string
                                    schema: featuredTournaments
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: featured_teams
                                      title:
                                        type: string
                                        example: 'Featured Teams'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All Team'
                                            href:
                                              type: string
                                              example: /teams
                                      items:
                                        type: object
                                        properties:
                                          id:
                                            type: string
                                          name:
                                            type: string
                                          triCode:
                                            type: string
                                          team_hash:
                                            type: number
                                          href:
                                            type: string
                                          users:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                type:
                                                  type: string
                                                username:
                                                  type: string
                                                url:
                                                  type: string
                                                image_url:
                                                  type: string
                                          image_url:
                                            type: string
                                          social_accounts:
                                            type: object
                                            properties:
                                              name:
                                                type: string
                                              nickname:
                                                type: string
                                              nickname_hash:
                                                type: number
                                              href:
                                                type: string
                                              image_url:
                                                type: string
                                              status:
                                                type: string
                                    schema: featuredTeams
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: news
                                      title:
                                        type: string
                                        example: News
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All News'
                                            href:
                                              type: string
                                              example: /news
                                      items:
                                        type: object
                                        properties:
                                          id:
                                            type: string
                                          published_at:
                                            type: number
                                          title:
                                            type: string
                                          href:
                                            type: string
                                          spot:
                                            type: string
                                          summary:
                                            type: string
                                          image_url:
                                            type: string
                                          tags:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                name:
                                                  type: string
                                                url:
                                                  type: string
                                    schema: news
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /pages/home:
    get:
      tags:
        - Platform
      description: 'Returns list of home '
      operationId: PlatformListHome
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                oneOf:
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: slider
                                      title:
                                        type: string
                                        example: Slider
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'Explore Now'
                                            slug:
                                              type: string
                                              example: /slug
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: number
                                              example: '1'
                                            title:
                                              type: string
                                              example: 'ARE YOU READY2 CHALLENGE'
                                            spot:
                                              type: string
                                              example: 'Attention all gamers! Are you Ready2 show off your gaming prowess and compete with the best of the best?'
                                            slug:
                                              type: string
                                              example: /slug
                                            image_url:
                                              type: string
                                              example: /images/slider-1-image.png
                                            learn_more:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  title:
                                                    type: string
                                                    example: 'WHO IS TAMAGOTCHI ?'
                                                  slug:
                                                    type: string
                                                    example: /slug
                                    schema: Slider
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: featured_games
                                      title:
                                        type: string
                                        example: 'Featured Games'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All Games'
                                            href:
                                              type: string
                                              example: /games
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            slug:
                                              type: string
                                            active_tournaments:
                                              type: number
                                            image_url:
                                              type: string
                                            prize:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  text:
                                                    type: string
                                                  currency:
                                                    type: string
                                            users_enrolled:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  slug:
                                                    type: string
                                                  items:
                                                    type: object
                                                    properties:
                                                      name:
                                                        type: string
                                                      nickname:
                                                        type: string
                                                      nickname_hash:
                                                        type: number
                                                      href:
                                                        type: string
                                                      image_url:
                                                        type: string
                                                      status:
                                                        type: string
                                            view_more:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  title:
                                                    type: string
                                                  href:
                                                    type: string
                                    schema: FeaturedGames
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: featured_tournaments
                                      title:
                                        type: string
                                        example: 'Featured Tournaments'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All Tournaments'
                                            href:
                                              type: string
                                              example: /tournaments
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            starts_at:
                                              type: number
                                            tournament_status:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  status:
                                                    type: string
                                                  text:
                                                    type: string
                                            team_member_size:
                                              type: string
                                            team_size:
                                              type: string
                                            image_url:
                                              type: string
                                            prize:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  text:
                                                    type: string
                                                  currency:
                                                    type: string
                                            game:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  id:
                                                    type: string
                                                  name:
                                                    type: string
                                                  slug:
                                                    type: string
                                                  image_url:
                                                    type: string
                                            users_enrolled:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  slug:
                                                    type: string
                                                  items:
                                                    type: object
                                                    properties:
                                                      name:
                                                        type: string
                                                      nickname:
                                                        type: string
                                                      nickname_hash:
                                                        type: number
                                                      href:
                                                        type: string
                                                      image_url:
                                                        type: string
                                                      status:
                                                        type: string
                                            view_more:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  title:
                                                    type: string
                                                  href:
                                                    type: string
                                    schema: featuredTournaments
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: community_tournaments
                                      title:
                                        type: string
                                        example: 'Community Tournaments'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All Tournaments'
                                            href:
                                              type: string
                                              example: '/tournaments?type=community'
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            starts_at:
                                              type: number
                                            tournament_status:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  status:
                                                    type: string
                                                  text:
                                                    type: string
                                            team_member_size:
                                              type: string
                                            team_size:
                                              type: string
                                            image_url:
                                              type: string
                                            prize:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  text:
                                                    type: string
                                                  currency:
                                                    type: string
                                            game:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  id:
                                                    type: string
                                                  name:
                                                    type: string
                                                  slug:
                                                    type: string
                                                  image_url:
                                                    type: string
                                            users_enrolled:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  total:
                                                    type: number
                                                  slug:
                                                    type: string
                                                  items:
                                                    type: object
                                                    properties:
                                                      name:
                                                        type: string
                                                      nickname:
                                                        type: string
                                                      nickname_hash:
                                                        type: number
                                                      href:
                                                        type: string
                                                      image_url:
                                                        type: string
                                                      status:
                                                        type: string
                                            view_more:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  title:
                                                    type: string
                                                  href:
                                                    type: string
                                    schema: communityTournaments
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: testimonials
                                      title:
                                        type: string
                                        example: 'EXPLORING THE WORLD OF GAME PLATFORMS'
                                      spot:
                                        type: string
                                        example: 'Ready2 is a software or hardware system used to play video games. This includes consoles, such as the PlayStation, Xbox, and Nintendo Switch, as well as computers and mobile devices. Each platform offers a unique gaming experience, with varying levels of graphics, processing power, and user interface.'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'More About Ready2'
                                            href:
                                              type: string
                                              example: /about
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            full_name:
                                              type: string
                                            job_title:
                                              type: string
                                            testimonial:
                                              type: string
                                            image_url:
                                              type: string
                                    schema: Testimonials
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: gamers_you_may_know
                                      title:
                                        type: string
                                        example: 'Gamers You May Know'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'Find Friends'
                                            href:
                                              type: string
                                              example: /find-friends
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                            nickname:
                                              type: string
                                            nickname_hash:
                                              type: number
                                            href:
                                              type: string
                                            image_url:
                                              type: string
                                            games:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  id:
                                                    type: string
                                                  name:
                                                    type: string
                                                  slug:
                                                    type: string
                                                  image_url:
                                                    type: string
                                            status:
                                              type: string
                                    schema: gamersYouMayKnow
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: news
                                      title:
                                        type: string
                                        example: News
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All News'
                                            href:
                                              type: string
                                              example: /news
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            published_at:
                                              type: number
                                            title:
                                              type: string
                                            href:
                                              type: string
                                            spot:
                                              type: string
                                            summary:
                                              type: string
                                            image_url:
                                              type: string
                                            tags:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  name:
                                                    type: string
                                                  url:
                                                    type: string
                                    schema: news
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /news:
    get:
      tags:
        - Platform
      description: 'Returns list of news '
      operationId: PlatformListNews
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: search
          in: query
          description: 'Search Title'
          schema:
            type: string
        -
          name: tag
          in: query
          description: Tag
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          description: 'page number '
          schema:
            type: number
          example: 0
        -
          name: pageSize
          in: query
          description: 'page size '
          schema:
            type: number
          example: 10
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                oneOf:
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: news
                                      title:
                                        type: string
                                        example: News
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All News'
                                            href:
                                              type: string
                                              example: /news
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            published_at:
                                              type: number
                                            title:
                                              type: string
                                            href:
                                              type: string
                                            spot:
                                              type: string
                                            summary:
                                              type: string
                                            image_url:
                                              type: string
                                            tags:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  name:
                                                    type: string
                                                  url:
                                                    type: string
                                    schema: news
                            filter:
                              type: object
                              properties:
                                page:
                                  type: number
                                  example: 1
                                pageSize:
                                  type: number
                                  description: '20 items per page maximum'
                                  example: 10
                                totalPages:
                                  type: number
                                  example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
  '/news/{newsslug}':
    get:
      tags:
        - Platform
      description: 'Returns list of news detail'
      operationId: PlatformListNewsDetail
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: newsslug
          in: path
          description: 'News Slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                oneOf:
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: news
                                      title:
                                        type: string
                                        example: News
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All News'
                                            href:
                                              type: string
                                              example: /news
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            published_at:
                                              type: number
                                            title:
                                              type: string
                                            href:
                                              type: string
                                            spot:
                                              type: string
                                            summary:
                                              type: string
                                            image_url:
                                              type: string
                                            tags:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  name:
                                                    type: string
                                                  url:
                                                    type: string
                                    schema: news
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
  '/search/{searchtype}':
    get:
      tags:
        - Platform
      description: 'Returns list of search'
      operationId: PlatformListSearch
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: searchtype
          in: path
          description: 'Search Type'
          schema:
            type: string
        -
          name: query
          in: query
          description: ''
          schema:
            type: string
        -
          name: type
          in: query
          description: 'Type of search.'
          required: false
          schema:
            enum:
              - tournaments
              - teams
              - players
              - games
              - news
              - hubs
            type: string
        -
          name: page
          in: query
          description: 'Page number.'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'Page size, default is 10, minimum is 1, maximum is 100.'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      tabs:
                        type: array
                        items:
                          properties:
                            label:
                              type: string
                              example: News
                            value:
                              type: string
                              example: news
                            href:
                              type: string
                              example: /en/search/..
                            count:
                              type: integer
                              description: 'In tab count of items'
                              example: 10
                            total:
                              type: integer
                              description: 'Total results of search type'
                              example: 100
                      items:
                        type: array
                        items:
                          properties:
                            type:
                              type: string
                              example: news
                            title:
                              type: string
                              example: News
                            items:
                              oneOf:
                                -
                                  title: Tournament
                                  type: object
                                  properties:
                                    tournamentName:
                                      type: string
                                    tournamentDate:
                                      type: integer
                                    gameLogo:
                                      type: string
                                    href:
                                      type: string
                                    status:
                                      type: string
                                  schema: 'Tournament Item'
                                -
                                  title: Team
                                  type: object
                                  properties:
                                    teamId:
                                      type: string
                                    teamLogo:
                                      type: string
                                    teamName:
                                      type: string
                                    teamHash:
                                      type: number
                                    teamTricode:
                                      type: string
                                    gameLogo:
                                      type: string
                                    href:
                                      type: string
                                    memberCount:
                                      type: number
                                  schema: 'Team Item'
                                -
                                  title: Player
                                  type: object
                                  properties:
                                    avatar:
                                      type: string
                                    userName:
                                      type: string
                                    userHash:
                                      type: integer
                                    name:
                                      type: string
                                    href:
                                      type: string
                                    createdAt:
                                      type: string
                                  schema: 'Player Item'
                                -
                                  title: Hub
                                  properties:
                                    hubName:
                                      type: string
                                    hubSlug:
                                      type: string
                                    hubCategory:
                                      type: string
                                    hubLogo:
                                      type: string
                                    createdAt:
                                      type: string
                                    href:
                                      type: string
                                    memberCount:
                                      type: integer
                                  schema: 'Hub Item'
                                -
                                  title: Game
                                  properties:
                                    gameLogo:
                                      type: string
                                    gameName:
                                      type: string
                                    href:
                                      type: string
                                  schema: 'Game Item'
                                -
                                  title: News
                                  properties:
                                    newsImage:
                                      type: string
                                    newsTitle:
                                      type: string
                                    newsDate:
                                      type: string
                                    href:
                                      type: string
                                  schema: 'News Item'
                  filter:
                    type: object
                    properties:
                      query:
                        type: string
                      type:
                        type: string
                        nullable: true
                      page:
                        type: integer
                      pageSize:
                        type: integer
                      totalPages:
                        type: integer
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
  '/game/redirect/{gameslug}':
    get:
      tags:
        - 'Game Connect'
      description: 'Game url'
      operationId: PlatformConnectGameUrl
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: query
          required: false
          schema:
            type: string
        -
          name: playerTag
          in: query
          required: false
          schema:
            type: string
        -
          name: inGameId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            redirect_url:
                              type: string
                              example: ''
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/games/{gameslug}/{teamslug}-{teamhash}':
    get:
      tags:
        - Platform
      description: 'Returns list of game team detail'
      operationId: PlatformListGameTeamDetail
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            team:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                                hash:
                                  type: number
                                slug:
                                  type: string
                                members:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      have:
                                        type: number
                                      text:
                                        type: string
                                image_url:
                                  type: string
                                social_accounts:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                    username:
                                      type: string
                                    url:
                                      type: string
                                    image_url:
                                      type: string
                                tournaments:
                                  type: number
                            sections:
                              type: array
                              items:
                                oneOf:
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: latest_tournaments
                                      title:
                                        type: string
                                        example: 'Latest Tournaments'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All Tournaments'
                                            slug:
                                              type: string
                                              example: /tournaments
                                      items:
                                        type: object
                                        properties:
                                          title:
                                            type: string
                                          starts_at:
                                            type: number
                                          tournament_status:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                status:
                                                  type: string
                                                text:
                                                  type: string
                                          team_member_size:
                                            type: string
                                          team_size:
                                            type: string
                                          image_url:
                                            type: string
                                          prize:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                total:
                                                  type: number
                                                text:
                                                  type: string
                                                currency:
                                                  type: string
                                          game:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                id:
                                                  type: string
                                                name:
                                                  type: string
                                                slug:
                                                  type: string
                                                image_url:
                                                  type: string
                                          users_enrolled:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                total:
                                                  type: number
                                                slug:
                                                  type: string
                                                items:
                                                  type: object
                                                  properties:
                                                    name:
                                                      type: string
                                                    nickname:
                                                      type: string
                                                    nickname_hash:
                                                      type: number
                                                    href:
                                                      type: string
                                                    image_url:
                                                      type: string
                                                    status:
                                                      type: string
                                          view_more:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                title:
                                                  type: string
                                                href:
                                                  type: string
                                    schema: latestTournaments
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: members
                                      title:
                                        type: string
                                        example: Members
                                      items:
                                        type: object
                                        properties:
                                          id:
                                            type: string
                                          nickname:
                                            type: string
                                          nickname_hash:
                                            type: string
                                          slug:
                                            type: string
                                          image_url:
                                            type: string
                                          game:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                username:
                                                  type: string
                                                level:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      text:
                                                        type: string
                                                      image_url:
                                                        type: string
                                    schema: members
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: latest_played_matches
                                      title:
                                        type: string
                                        example: 'Latest Played Matches'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All Matches'
                                            slug:
                                              type: string
                                              example: /matches
                                      items:
                                        type: object
                                        properties:
                                          date:
                                            type: string
                                          kda:
                                            type: string
                                          score:
                                            type: string
                                          map_name:
                                            type: string
                                          results:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                win:
                                                  type: string
                                                result:
                                                  type: string
                                          teams:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                id:
                                                  type: string
                                                name:
                                                  type: string
                                                slug:
                                                  type: string
                                                image_url:
                                                  type: string
                                          stats:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                played_at:
                                                  type: number
                                                type:
                                                  type: string
                                                spot:
                                                  type: string
                                    schema: latest_played_matches
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: about
                                      title:
                                        type: string
                                        example: About
                                      body:
                                        type: string
                                        example: 'about content'
                                    schema: about
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/games/{gameslug}/{teamslug}-{teamhash}/matches':
    get:
      tags:
        - Platform
      description: 'Returns list of game team matches detail'
      operationId: PlatformListGameTeamMatchesDetail
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/games/{gameslug}/{teamslug}-{teamhash}/settings':
    get:
      tags:
        - Platform
      description: 'Returns list of game team Setting detail'
      operationId: PlatformListGameTeamSettingDetail
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/games/{gameslug}/{teamslug}-{teamhash}/settings/general':
    get:
      tags:
        - Platform
      description: 'Returns list of game team Setting General'
      operationId: PlatformListGameTeamSettingGeneral
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/games/{gameslug}/{teamslug}-{teamhash}/settings/members':
    get:
      tags:
        - Platform
      description: 'Returns list of game team Setting Members'
      operationId: PlatformListGameTeamSettingMembers
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/games/{gameslug}/{teamslug}-{teamhash}/settings/notifications':
    get:
      tags:
        - Platform
      description: 'Returns list of game team Setting Notifications'
      operationId: PlatformListGameTeamSettingNotifications
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/games/{gameslug}/{teamslug}-{teamhash}/settings/preferences':
    get:
      tags:
        - Platform
      description: 'Returns list of game team Setting preferences'
      operationId: PlatformListGameTeamSettingPreferences
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/games/{gameslug}/{teamslug}-{teamhash}/settings/social-accounts':
    get:
      tags:
        - Platform
      description: 'Returns list of game team Setting Social Accounts'
      operationId: PlatformListGameTeamSettingSocialAccounts
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/games/{gameslug}/{teamslug}-{teamhash}/tournaments':
    get:
      tags:
        - Platform
      description: 'Returns list of game team tournaments detail'
      operationId: PlatformListGameTeamTournamentDetail
      parameters:
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: teamslug
          in: path
          description: 'Team slug'
          required: true
          schema:
            type: string
        -
          name: teamhash
          in: path
          description: 'Team Hash'
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /user/profile/team/check:
    post:
      tags:
        - Platform
      description: 'Controls the availability of the requested slug and suggests another if not applicable.'
      operationId: checkTeamSlugHash
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - slug
                - hash
              type: object
              properties:
                slug:
                  type: string
                  example: johndoe
                hash:
                  type: integer
                  example: '34'
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          nickname:
                            type: string
                            example: 'jonhdoe#27'
        '401':
          description: Unauthenticated
        '422':
          description: 'Unprocessable Content'
  '/tournaments/check-in-team-list/{tournamentId}':
    get:
      tags:
        - Tournament
      summary: 'Check in Teams'
      description: 'Returns list of tournament user check in teams'
      operationId: PlatformCheckInTeamList
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        teamId:
                          type: string
                          format: uuid
                        teamName:
                          type: string
                        teamSlug:
                          type: string
                        teamHash:
                          type: integer
                        teamLogo:
                          type: string
                        status:
                          type: boolean
                        reason:
                          type:
                            - 'null'
                            - string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/tournaments/check-in-team-member-list/{tournamentId}/{teamId}':
    get:
      tags:
        - Tournament
      summary: 'Check in Team Members'
      description: 'Returns list of tournament user check in team member list'
      operationId: PlatformCheckInTeamMemberList
      parameters:
        -
          name: teamId
          in: path
          description: 'Team UUID'
          required: true
          schema:
            type: string
            format: uuid
        -
          name: tournamentId
          in: path
          description: 'Tournament uuid'
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                oneOf: []
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /tournaments/add-member:
    post:
      tags:
        - Tournament
      summary: 'Add Member Tournament'
      description: 'Add Member Tournament.'
      operationId: addMemberTournament
      requestBody:
        content:
          application/json:
            schema:
              required:
                - team_uuid
                - tournament_uuid
                - selected_team_members
              type: object
              properties:
                team_uuid:
                  type: string
                  example: uuid
                tournament_uuid:
                  type: integer
                  example: uuid
                selected_team_members:
                  type: object
                  example:
                    -
                      member_uuid: '1'
                      role_type: member
                      isCaptain: true
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          team_uuid:
                            type: string
                            example: uuid
        '401':
          description: Unauthenticated
        '422':
          description: 'Unprocessable Content'
      security:
        -
          bearerAuth: []
  '/tournaments/game/{gameslug}':
    get:
      tags:
        - Tournament
      summary: 'Tournament Game Detail'
      description: 'Returns list of tournament game detail'
      operationId: PlatformTournamentsGameDetail
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: gameslug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            gameAccount:
                              type: object
                              properties:
                                nickname:
                                  type: string
                                  nullable: true
                              nullable: true
                            sections:
                              type: array
                              items:
                                oneOf:
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: slider
                                      title:
                                        type: string
                                        example: slider
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            title:
                                              type: string
                                            spot:
                                              type: string
                                            slug:
                                              type: string
                                            start:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  date:
                                                    type: number
                                                  month:
                                                    type: string
                                                  day:
                                                    type: string
                                                  hour:
                                                    type: string
                                            image_url:
                                              type: string
                                            join_tournament:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  title:
                                                    type: string
                                                  slug:
                                                    type: string
                                    schema: Slider
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: featured_tournaments
                                      title:
                                        type: string
                                        example: 'Featured Tournaments'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                              example: 'View All Tournaments'
                                            slug:
                                              type: string
                                              example: /tournaments
                                      items:
                                        type: object
                                        properties:
                                          title:
                                            type: string
                                          starts_at:
                                            type: number
                                          tournament_status:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                status:
                                                  type: string
                                                text:
                                                  type: string
                                          team_member_size:
                                            type: string
                                          team_size:
                                            type: string
                                          image_url:
                                            type: string
                                          prize:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                total:
                                                  type: number
                                                text:
                                                  type: string
                                                currency:
                                                  type: string
                                          game:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                id:
                                                  type: string
                                                name:
                                                  type: string
                                                slug:
                                                  type: string
                                                image_url:
                                                  type: string
                                          users_enrolled:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                total:
                                                  type: number
                                                slug:
                                                  type: string
                                                items:
                                                  type: object
                                                  properties:
                                                    name:
                                                      type: string
                                                    nickname:
                                                      type: string
                                                    nickname_hash:
                                                      type: number
                                                    href:
                                                      type: string
                                                    image_url:
                                                      type: string
                                                    status:
                                                      type: string
                                          view_more:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                title:
                                                  type: string
                                                href:
                                                  type: string
                                    schema: featuredTournaments
                                  -
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                      type:
                                        type: string
                                      title:
                                        type: string
                                      media:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            click_url:
                                              type: string
                                            script:
                                              type: string
                                    schema: Banners
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: featured_tournaments
                                      title:
                                        type: string
                                        example: 'Featured Tournaments'
                                      view_more:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            slug:
                                              type: string
                                      items:
                                        type: object
                                        properties:
                                          title:
                                            type: string
                                          starts_at:
                                            type: number
                                          tournament_status:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                status:
                                                  type: string
                                                text:
                                                  type: string
                                          team_member_size:
                                            type: string
                                          team_size:
                                            type: string
                                          image_url:
                                            type: string
                                          prize:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                total:
                                                  type: number
                                                text:
                                                  type: string
                                                currency:
                                                  type: string
                                          game:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                id:
                                                  type: string
                                                name:
                                                  type: string
                                                slug:
                                                  type: string
                                                image_url:
                                                  type: string
                                          users_enrolled:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                total:
                                                  type: number
                                                slug:
                                                  type: string
                                                items:
                                                  type: object
                                                  properties:
                                                    name:
                                                      type: string
                                                    nickname:
                                                      type: string
                                                    nickname_hash:
                                                      type: number
                                                    href:
                                                      type: string
                                                    image_url:
                                                      type: string
                                                    status:
                                                      type: string
                                          view_more:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                title:
                                                  type: string
                                                href:
                                                  type: string
                                    schema: TournamentList
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        - {  }
        -
          bearerAuth: []
  /conversations:
    get:
      tags:
        - Platform
      summary: 'List User Conversation'
      description: 'Returns list of user conversations '
      operationId: listUserConversations
      parameters:
        -
          name: conversation_type
          in: query
          description: 'Type of conversation'
          required: true
          schema:
            type: string
            example: 'Conversation Type (directmessage,teammessage,encounter)'
        -
          name: conversation_nickname
          in: query
          description: 'Nickname for direct message conversation'
          schema:
            type: string
        -
          name: conversation_nickname_hash
          in: query
          description: 'Nickname hash for direct message conversation'
          schema:
            type: string
        -
          name: conversation_teamslug
          in: query
          description: 'Team slug for team message conversation'
          schema:
            type: string
        -
          name: conversation_teamhash
          in: query
          description: 'Team hash for team message conversation'
          schema:
            type: string
        -
          name: conversation_uuid
          in: query
          description: 'Conversation uuid'
          schema:
            type: string
        -
          name: OnlyMessage
          in: query
          description: 'if OnlyMessage = 1 show selected conversation message'
          schema:
            type: number
        -
          name: afterDate
          in: query
          description: 'After date'
          schema:
            type: string
            format: date-time
            example: '2023-11-20 07:46:18'
        -
          name: beforeDate
          in: query
          description: 'Before Date'
          schema:
            type: string
            format: date-time
            example: '2023-11-20 07:46:18'
      requestBody:
        required: false
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}/career':
    get:
      tags:
        - Platform
      description: 'Returns list of user career details '
      operationId: listUserCareerDetails
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            last_played_matches:
                              type: array
                              items:
                                type: object
                                properties:
                                  date:
                                    type: string
                                  kda:
                                    type: string
                                  score:
                                    type: string
                                  map_name:
                                    type: string
                                  results:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        win:
                                          type: string
                                        result:
                                          type: string
                                  teams:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: string
                                        name:
                                          type: string
                                        slug:
                                          type: string
                                        image_url:
                                          type: string
                                  stats:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        played_at:
                                          type: number
                                        type:
                                          type: string
                                        spot:
                                          type: string
                            tournaments:
                              type: array
                              items:
                                type: object
                                properties:
                                  title:
                                    type: string
                                  starts_at:
                                    type: number
                                  tournament_status:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        status:
                                          type: string
                                        text:
                                          type: string
                                  team_member_size:
                                    type: string
                                  team_size:
                                    type: string
                                  image_url:
                                    type: string
                                  prize:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        total:
                                          type: number
                                        text:
                                          type: string
                                        currency:
                                          type: string
                                  game:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: string
                                        name:
                                          type: string
                                        slug:
                                          type: string
                                        image_url:
                                          type: string
                                  users_enrolled:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        total:
                                          type: number
                                        slug:
                                          type: string
                                        items:
                                          type: object
                                          properties:
                                            name:
                                              type: string
                                            nickname:
                                              type: string
                                            nickname_hash:
                                              type: number
                                            href:
                                              type: string
                                            image_url:
                                              type: string
                                            status:
                                              type: string
                                  view_more:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        title:
                                          type: string
                                        href:
                                          type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}/wallet':
    get:
      tags:
        - Platform
      description: 'Returns list of user wallet details '
      operationId: listUserWalletDetails
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                oneOf:
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: profile_hero
                                      id:
                                        type: string
                                      nickname:
                                        type: string
                                      nickname_hash:
                                        type: string
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                      country:
                                        type: string
                                      image_url:
                                        type: string
                                      social_accounts:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                          username:
                                            type: string
                                          url:
                                            type: string
                                          image_url:
                                            type: string
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: side_navigation
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            type:
                                              type: string
                                            href:
                                              type: string
                                    schema: SideNavigation
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: profile_wallet
                                      items:
                                        type: array
                                        example: []
                                    schema: ProfileWallet
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}/friends':
    get:
      tags:
        - Platform
      description: 'Returns list of user friends '
      operationId: listUserFriendDetails
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            nickname:
                              type: string
                            nickname_hash:
                              type: string
                            first_name:
                              type: string
                            last_name:
                              type: string
                            href:
                              type: string
                            image_url:
                              type: string
                            status:
                              type: string
                            games:
                              type: object
                              properties:
                                id:
                                  type: string
                                name:
                                  type: string
                                slug:
                                  type: string
                                image_url:
                                  type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /friends-list:
    get:
      tags:
        - Platform
      description: 'Returns list of user friends '
      operationId: UserFriendListController
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /user/notifications:
    get:
      tags:
        - Platform
      description: 'Returns list of user notification '
      operationId: listUserNotifications
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            news:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            ads:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            personal_messages:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            encounter_messages:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            team_messages:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                      unread:
                        type: integer
                        example: 0
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}':
    get:
      tags:
        - Platform
      description: 'Returns list of user profile '
      operationId: listUserDetail
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                oneOf:
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: profile_hero
                                      id:
                                        type: string
                                      nickname:
                                        type: string
                                      nickname_hash:
                                        type: string
                                      first_name:
                                        type: string
                                      last_name:
                                        type: string
                                      email:
                                        type: string
                                      country:
                                        type: string
                                      image_url:
                                        type: string
                                      social_accounts:
                                        type: object
                                        properties:
                                          type:
                                            type: string
                                          username:
                                            type: string
                                          url:
                                            type: string
                                          image_url:
                                            type: string
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: side_navigation
                                      items:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            title:
                                              type: string
                                            type:
                                              type: string
                                            href:
                                              type: string
                                    schema: SideNavigation
                                  -
                                    type: object
                                    properties:
                                      type:
                                        type: string
                                        example: profile_overview
                                      sections:
                                        type: array
                                        items:
                                          oneOf:
                                            -
                                              type: object
                                              properties:
                                                type:
                                                  type: string
                                                  example: profile_about
                                                title:
                                                  type: string
                                                image_url:
                                                  type: string
                                                bio:
                                                  type: string
                                              schema: ProfileAbout
                                            -
                                              type: object
                                              properties:
                                                type:
                                                  type: string
                                                  example: connected_accounts
                                                title:
                                                  type: string
                                                items:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      game:
                                                        type: object
                                                        properties:
                                                          id:
                                                            type: string
                                                          name:
                                                            type: string
                                                          slug:
                                                            type: string
                                                          href:
                                                            type: string
                                                          image_url:
                                                            type: string
                                                      user:
                                                        type: array
                                                        items:
                                                          type: object
                                                          properties:
                                                            nickname:
                                                              type: string
                                                            rank:
                                                              type: array
                                                              items:
                                                                type: object
                                                                properties:
                                                                  name:
                                                                    type: string
                                                                  image_url:
                                                                    type: string
                                              schema: ConnectedAccounts
                                            -
                                              type: object
                                              properties:
                                                type:
                                                  type: string
                                                  example: game_tabs
                                                items:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      id:
                                                        type: string
                                                      name:
                                                        type: string
                                                      slug:
                                                        type: string
                                                      content:
                                                        type: string
                                                      image_url:
                                                        type: string
                                                      sections:
                                                        type: array
                                                        items:
                                                          oneOf:
                                                            -
                                                              type: object
                                                              properties:
                                                                type:
                                                                  type: string
                                                                  example: game_stats
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: object
                                                                    properties:
                                                                      type:
                                                                        type: string
                                                                      title:
                                                                        type: string
                                                                      countryCode:
                                                                        type: string
                                                                      value:
                                                                        type: string
                                                                      description:
                                                                        type: string
                                                              schema: GameStats
                                                            -
                                                              type: object
                                                              properties:
                                                                type:
                                                                  type: string
                                                                  example: last_played_matches
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: object
                                                                    properties:
                                                                      date:
                                                                        type: string
                                                                      avatar:
                                                                        type: string
                                                                      kill:
                                                                        type: string
                                                                      dead:
                                                                        type: string
                                                                      assist:
                                                                        type: string
                                                                      score:
                                                                        type: string
                                                                      map:
                                                                        type: string
                                                                      win:
                                                                        type: string
                                                                      resultStatus:
                                                                        enum:
                                                                          - winner
                                                                          - loser
                                                                          - tied
                                                                        type: string
                                                              schema: LastPlayedMatches
                                              schema: GameTabs
                                    schema: ProfileOverview
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}/settings/accounts':
    get:
      tags:
        - Platform
      description: 'Returns list of user account settings '
      operationId: listUserSettingAccountList
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                type: object
                                properties:
                                  firstname:
                                    type: string
                                  lastname:
                                    type: string
                                  birthday:
                                    type: string
                                  username:
                                    type: string
                                  nickname:
                                    type: string
                                  nickname_hash:
                                    type: number
                                  phone:
                                    type: string
                                  languages:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        options:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              label:
                                                type: string
                                              value:
                                                type: string
                                        value:
                                          type: string
                                  nationality:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        options:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              label:
                                                type: string
                                              value:
                                                type: string
                                        value:
                                          type: string
                                  location:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        options:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              label:
                                                type: string
                                              value:
                                                type: string
                                        value:
                                          type: string
                                  about:
                                    type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}/settings/profile':
    get:
      tags:
        - Platform
      description: 'Returns list of user settings '
      operationId: listUserSettingList
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                type: object
                                properties:
                                  firstname:
                                    type: string
                                  lastname:
                                    type: string
                                  birthday:
                                    type: string
                                  username:
                                    type: string
                                  nickname:
                                    type: string
                                  nickname_hash:
                                    type: number
                                  phone:
                                    type: string
                                  languages:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        options:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              label:
                                                type: string
                                              value:
                                                type: string
                                        value:
                                          type: string
                                  nationality:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        options:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              label:
                                                type: string
                                              value:
                                                type: string
                                        value:
                                          type: string
                                  location:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        options:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              label:
                                                type: string
                                              value:
                                                type: string
                                        value:
                                          type: string
                                  about:
                                    type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}/settings':
    get:
      tags:
        - Platform
      description: 'Returns list of user settings '
      operationId: listUserSetting
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          properties: {  }
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}/settings/preferences':
    get:
      tags:
        - Platform
      description: 'Returns list of user settings prefence '
      operationId: listUserSettingprefences
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            messaging:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            team_invitation:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            friend_invitation:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            statistics:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            social_media:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            fullname:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            nationality:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            phonenumber:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            birthday:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            profile_status:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}/settings/notifications':
    get:
      tags:
        - Platform
      description: 'Returns list of user settings notification '
      operationId: listUserSettingNotifications
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            news:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            ads:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            personal_messages:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            encounter_messages:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                            team_messages:
                              type: array
                              items:
                                type: object
                                properties:
                                  options:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        label:
                                          type: string
                                        value:
                                          type: string
                                  value:
                                    type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/{nickname}-{nickname_hash}/teams':
    get:
      tags:
        - Platform
      description: 'Returns list of user team list '
      operationId: listUserTeamList
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: nickname
          in: path
          description: 'User nickname'
          required: false
          schema:
            type: string
        -
          name: nickname_hash
          in: path
          description: 'User nickname_hash'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            sections:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  team_hash:
                                    type: number
                                  href:
                                    type: string
                                  team_logo:
                                    type: string
                                  team_banner:
                                    type: string
                                  user_title:
                                    type: string
                                  has_members:
                                    type: number
                                  image_url:
                                    type: number
                                  owner:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: string
                                        nickname:
                                          type: string
                                        nickname_hash:
                                          type: string
                                        first_name:
                                          type: string
                                        last_name:
                                          type: string
                                        slug:
                                          type: string
                                        image_url:
                                          type: string
                                  game:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: string
                                        name:
                                          type: string
                                        slug:
                                          type: string
                                        game:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              position:
                                                type: number
                                              image_url:
                                                type: string
                                        image_url:
                                          type: string
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /tickets:
    get:
      tags:
        - Platform
      description: 'Returns list of tickets'
      operationId: listUserTickets
      parameters:
        -
          name: ticket_uuid
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            uuid:
                              type: string
                            title:
                              type: string
                            status:
                              enum:
                                - Respond
                                - Waiting
                                - Resolved
                              type: string
                            reason:
                              enum:
                                - tournament
                                - other
                              type: string
                            language:
                              type: string
                            name:
                              type: string
                            nickname:
                              type: string
                            assigned_name:
                              type: string
                            assigned_nickname:
                              type: string
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                  -
                    type: object
                    properties:
                      meta:
                        type: object
                        properties:
                          current_page:
                            type: integer
                            example: 1
                          from:
                            type: integer
                            example: 1
                          last_page:
                            type: integer
                            example: 1
                          per_page:
                            type: integer
                            example: 50
                          to:
                            type: integer
                            example: 1
                          total:
                            type: integer
                            example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /upload/team:
    post:
      tags:
        - Upload
      description: 'Upload File/Image for team'
      operationId: fileUploadTeam
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          url:
                            type: string
                          uuid:
                            type: string
                          filename:
                            type: string
                          created_at:
                            type: string
                            format: date-time
                          created_by:
                            type: object
                            properties:
                              uuid:
                                type: string
                              email:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                              status:
                                enum:
                                  - Pending
                                  - Approved
                                  - Rejected
                                type: string
                              timezone:
                                type: string
                                example: UTC
                              language:
                                type: string
                                example: tr
                              isOnboarded:
                                type: boolean
                                example: true
                              roles:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    role_permissions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                              permissions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
        '422':
          description: 'Unprocessable Content'
      security:
        -
          bearerAuth: []
  /upload/tournament:
    post:
      tags:
        - Upload
      description: 'Upload File/Image for tournament'
      operationId: fileUploadTournament
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          url:
                            type: string
                          uuid:
                            type: string
                          filename:
                            type: string
                          created_at:
                            type: string
                            format: date-time
                          created_by:
                            type: object
                            properties:
                              uuid:
                                type: string
                              email:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                              status:
                                enum:
                                  - Pending
                                  - Approved
                                  - Rejected
                                type: string
                              timezone:
                                type: string
                                example: UTC
                              language:
                                type: string
                                example: tr
                              isOnboarded:
                                type: boolean
                                example: true
                              roles:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    role_permissions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                              permissions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
        '422':
          description: 'Unprocessable Content'
      security:
        -
          bearerAuth: []
  '/gamer-profile/{nickname}':
    get:
      tags:
        - 'Gamer Profile'
      description: 'Get the details of a gamer'
      operationId: getGamerOverview
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Gamer profile details'
          content:
            application/json:
              schema:
                required:
                  - hero
                  - overview
                type: object
                properties:
                  hero:
                    required:
                      - uuid
                      - nickname
                      - email
                      - name
                      - surname
                      - birthdate
                      - profileImageURL
                      - createdAt
                      - connectionStatus
                      - friendRequestCount
                      - friendshipStatus
                      - phone
                    type: object
                    properties:
                      uuid:
                        type: string
                        description: 'Unique identifier for the gamer.'
                      nickname:
                        type: string
                        description: 'The nickname of the gamer.'
                      email:
                        type: string
                        description: 'The email of the gamer.'
                        format: email
                      name:
                        type: string
                        description: 'The name of the gamer'
                      surname:
                        type: string
                        description: 'The surname of the gamer.'
                      birthdate:
                        type: string
                        description: 'The birthdate of the gamer.'
                        format: date
                      profileImageURL:
                        type: string
                        description: "The URL of the gamer's profile image."
                        format: url
                      createdAt:
                        type: number
                        description: 'Year the gamer registered.'
                        example: 2023
                      connectionStatus:
                        enum:
                          - online
                          - offline
                          - busy
                        type: string
                        description: 'The current connection status of the hero.'
                      friendRequestCount:
                        minimum: 0
                        type: integer
                        description: 'The number of friend requests the gamer has. If the hero is not the authenticated user, this field will be 0.'
                      friendshipStatus:
                        enum:
                          - friends
                          - not-friends
                          - you-sent-request
                          - you-received-request
                          - you-blocked
                          - you-are-blocked
                        type: string
                        description: 'The friendship status between the gamer and the authenticated user.'
                      hasActiveTournament:
                        type: boolean
                        description: 'Indicates if the hero has an active tournament.'
                        example: true
                      phone:
                        type: object
                        properties:
                          fullPhoneNumber:
                            type: string
                            example: 905321234567.0
                          countryCode:
                            type: integer
                            example: 90
                          countryCodeAsString:
                            type: string
                            example: TR
                          number:
                            type: string
                            example: 5321234567
                        nullable: true
                  overview:
                    required:
                      - activities
                      - about
                    type: object
                    properties:
                      activities:
                        type: array
                        items: {  }
                        description: 'List of activities.'
                      about:
                        required:
                          - biography
                          - nationality
                          - language
                          - gamerSocialAccounts
                          - gamerGameAccounts
                          - teams
                          - hubs
                        type: object
                        properties:
                          biography:
                            type: string
                          nationality:
                            oneOf:
                              -
                                type: 'null'
                              -
                                type: object
                                properties:
                                  countryId:
                                    type: string
                                    format: uuid
                                  countryCode:
                                    type: string
                                    description: 'ISO 3166-1 alpha-2 country code.'
                                  countryName:
                                    type: string
                                    description: 'Name of the country.'
                          languageInfo:
                            oneOf:
                              -
                                type: 'null'
                              -
                                type: object
                                properties:
                                  languageId:
                                    type: string
                                    format: uuid
                                  languageCode:
                                    type: string
                                    description: 'ISO 3166-1 alpha-2 language code.'
                                  languageName:
                                    type: string
                                    description: 'Name of the language.'
                          gamerSocialAccounts:
                            required:
                              - type
                              - url
                            type: array
                            items:
                              type: object
                              properties:
                                type:
                                  enum:
                                    - instagram
                                    - facebook
                                    - twitter
                                    - discord
                                    - youtube
                                    - linkedin
                                    - pinterest
                                    - twitch
                                    - trackergg
                                  type: string
                                  description: 'Type of social media account.'
                                url:
                                  type: string
                                  description: 'Full path URL of the social media account.'
                                  format: url
                            description: "List of gamer's social media accounts."
                          gamerGameAccounts:
                            required:
                              - accounts
                              - games
                              - nickname
                              - rank
                              - level
                            type: object
                            properties:
                              accounts:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      description: 'Name of the game.'
                                    imageURL:
                                      type: string
                                      description: "URL of the game's image."
                                      format: url
                                    slug:
                                      type: string
                                      description: 'Slug of the game.'
                                    nickname:
                                      type: string
                                      description: "Gamer's nickname in the game."
                                    rank:
                                      type: object
                                      properties:
                                        name:
                                          type: string
                                          description: 'Name of the rank.'
                                        imageURL:
                                          type: string
                                          description: "URL of the rank's image."
                                          format: uri
                                    updatedAt:
                                      type: string
                                      description: 'Date of the last update.'
                                      format: date-time
                                      nullable: true
                                      example: 1706184000
                                    level:
                                      type: string
                                      nullable: true
                              games:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    uuid:
                                      type: string
                                      description: 'Unique identifier for the game.'
                                    name:
                                      type: string
                                      description: 'Name of the game.'
                                    imageURL:
                                      type: string
                                      description: "URL of the game's image."
                                      format: uri
                                    slug:
                                      type: string
                                      description: 'Slug of the game.'
                                    isConnected:
                                      type: boolean
                                      description: 'Indicates if the game account is connected.'
                            description: "List of gamer's game accounts."
                          teams:
                            type: array
                            items:
                              required:
                                - uuid
                                - name
                                - slug
                                - imageURL
                                - memberCount
                                - game
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'Unique identifier for the team.'
                                slug:
                                  type: string
                                  description: 'Slug of the team.'
                                name:
                                  type: string
                                  description: 'Name of the team.'
                                imageURL:
                                  type: string
                                  description: "URL of the team's image."
                                  format: uri
                                memberCount:
                                  type: integer
                                  description: 'Number of members in the team.'
                                game:
                                  type: object
                                  properties:
                                    uuid:
                                      type: string
                                      description: 'Unique identifier for the game.'
                                    name:
                                      type: string
                                      description: 'Name of the game.'
                                    imageURL:
                                      type: string
                                      description: "URL of the game's image."
                                      format: uri
                                    slug:
                                      type: string
                                      description: 'Slug of the game.'
                          hubs:
                            type: array
                            items:
                              required:
                                - uuid
                                - name
                                - url
                                - imageURL
                                - isOwner
                                - memberCount
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'Unique identifier for the hub.'
                                name:
                                  type: string
                                  description: 'Name of the hub.'
                                url:
                                  type: string
                                  description: 'URL of the hub.'
                                  format: uri
                                imageURL:
                                  type: string
                                  description: "URL of the hub's image."
                                  format: uri
                                isOwner:
                                  type: boolean
                                  description: 'Indicates if the profile owner is the owner of the hub.'
                                memberCount:
                                  type: integer
                                  description: 'Number of members in the hub.'
        '404':
          description: 'Gamer not found'
          content:
            application/json:
              schema:
                required:
                  - success
                  - code
                  - message
                  - data
                  - type
                  - title
                  - status
                  - detail
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: undefined
                  nickname:
                    type: string
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: number
                  detail:
                    type: string
      security:
        - {  }
        -
          bearerAuth: []
  '/gamer-profile/{nickname}/tournaments':
    get:
      tags:
        - 'Gamer Profile'
      description: 'Get tournaments for a gamer'
      operationId: getGamerTournaments
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: gameSlug
          in: query
          description: "The game's slug"
          required: false
          schema:
            type: string
        -
          name: tournamentStatus
          in: query
          description: 'The status of the tournament'
          required: false
          schema:
            enum:
              - all
              - upcoming
              - ongoing
              - past
            type: string
        -
          name: tournamentType
          in: query
          description: 'The type of the tournament'
          required: false
          schema:
            enum:
              - participated
              - organized
            type: string
      responses:
        '200':
          description: 'Gamer tournaments'
          content:
            application/json:
              schema:
                required:
                  - hero
                  - tournaments
                  - filters
                type: object
                properties:
                  hero:
                    required:
                      - uuid
                      - nickname
                      - email
                      - name
                      - surname
                      - birthdate
                      - profileImageURL
                      - createdAt
                      - connectionStatus
                      - friendRequestCount
                      - friendshipStatus
                      - phone
                    type: object
                    properties:
                      uuid:
                        type: string
                        description: 'Unique identifier for the gamer.'
                      nickname:
                        type: string
                        description: 'The nickname of the gamer.'
                      email:
                        type: string
                        description: 'The email of the gamer.'
                        format: email
                      name:
                        type: string
                        description: 'The name of the gamer'
                      surname:
                        type: string
                        description: 'The surname of the gamer.'
                      birthdate:
                        type: string
                        description: 'The birthdate of the gamer.'
                        format: date
                      profileImageURL:
                        type: string
                        description: "The URL of the gamer's profile image."
                        format: url
                      createdAt:
                        type: number
                        description: 'Year the gamer registered.'
                        example: 2023
                      connectionStatus:
                        enum:
                          - online
                          - offline
                          - busy
                        type: string
                        description: 'The current connection status of the hero.'
                      friendRequestCount:
                        minimum: 0
                        type: integer
                        description: 'The number of friend requests the gamer has. If the hero is not the authenticated user, this field will be 0.'
                      friendshipStatus:
                        enum:
                          - friends
                          - not-friends
                          - you-sent-request
                          - you-received-request
                          - you-blocked
                          - you-are-blocked
                        type: string
                        description: 'The friendship status between the gamer and the authenticated user.'
                      hasActiveTournament:
                        type: boolean
                        description: 'Indicates if the hero has an active tournament.'
                        example: true
                      phone:
                        type: object
                        properties:
                          fullPhoneNumber:
                            type: string
                            example: 905321234567.0
                          countryCode:
                            type: integer
                            example: 90
                          countryCodeAsString:
                            type: string
                            example: TR
                          number:
                            type: string
                            example: 5321234567
                        nullable: true
                  tournaments:
                    type: array
                    items:
                      required:
                        - uuid
                        - name
                        - slug
                        - startDate
                        - numberOfTeams
                        - playerPerTeam
                        - tournamentCardImage
                        - status
                        - joinType
                        - isSubscribesOnly
                        - owner
                        - game
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: 'Unique identifier for the tournament.'
                        name:
                          type: string
                          description: 'Name of the tournament.'
                        slug:
                          type: string
                          description: 'Slug of the tournament.'
                        startDate:
                          type: string
                          description: 'Datetime of the tournament start.'
                          format: date-time
                        numberOfTeams:
                          type: integer
                          description: 'Number of teams participating in the tournament.'
                        playerPerTeam:
                          enum:
                            - 4v4
                            - 1v1
                          type: string
                          description: 'Type of player setup (e.g., "4v4", "1v1").'
                        slotsLeft:
                          type: integer
                          description: 'Number of slots left in the tournament.'
                        imageUrl:
                          type: string
                          description: 'URL of the tournament card image.'
                          format: url
                        logoUrl:
                          type: string
                          description: 'URL of the tournament logo.'
                          format: url
                        bannerUrl:
                          type: string
                          description: 'URL of the tournament banner.'
                          format: url
                        thumbnailUrl:
                          type: string
                          description: 'URL of the tournament thumbnail.'
                          format: url
                        status:
                          enum:
                            - notStarted
                            - applicationOpen
                            - applicationClosed
                            - checkIn
                            - subCheckIn
                            - checkInClosed
                            - seeding
                            - stage
                            - tournamentStarted
                            - ongoing
                            - finished
                            - setup
                          type: string
                          description: 'Status of the tournament.'
                        prize:
                          type: object
                          properties:
                            amount:
                              type: string
                              description: 'Amount of the prize.'
                            currency:
                              type: string
                              description: 'Currency of the prize.'
                        joinType:
                          enum:
                            - free
                            - invite-only
                            - request-to-join
                          type: string
                          description: 'Type of join (e.g., "free", "invite-only", "request-to-join").'
                        isSubscribesOnly:
                          type: boolean
                          description: 'Indicates if the tournament is for subscribers only.'
                        owner:
                          type: object
                          properties:
                            uuid:
                              type: string
                              description: 'Unique identifier for the owner.'
                            url:
                              type: string
                              description: 'URL of the owner.'
                            type:
                              enum:
                                - user
                                - hub
                              type: string
                              description: 'Type of the owner (e.g., "user", "hub").'
                            imageURL:
                              type: string
                              description: "URL of the owner's image."
                            name:
                              type: string
                              description: 'Name of the owner.'
                        game:
                          type: object
                          properties:
                            uuid:
                              type: string
                              description: 'Unique identifier for the game.'
                            name:
                              type: string
                              description: 'Name of the game.'
                            slug:
                              type: string
                              description: 'Slug of the game.'
                            imageURL:
                              type: string
                              description: "URL of the game's image."
                            logo:
                              type: string
                              description: "URL of the game's image."
                        ranking:
                          type: integer
                          nullable: true
                          example: 1
                  filters:
                    required:
                      - games
                      - status
                      - type
                    type: object
                    properties:
                      status:
                        enum:
                          - upcoming
                          - ongoing
                          - past
                        type: string
                        description: 'The status of the tournament.'
                      type:
                        enum:
                          - participant
                          - organized
                        type: string
                        description: 'The type of the tournament.'
                      games:
                        type: array
                        items:
                          required:
                            - 'uuid - name - slug - imageURL'
                          type: object
                          properties:
                            uuid:
                              type: string
                              description: 'Unique identifier for the game.'
                            name:
                              type: string
                              description: 'Name of the game.'
                            slug:
                              type: string
                              description: 'Slug of the game.'
                            imageURL:
                              type: string
                              description: "URL of the game's image."
                              format: uri
                  pagination:
                    required:
                      - page
                      - pageSize
                      - total
                    type: object
                    properties:
                      page:
                        type: integer
                        description: 'The current page number.'
                      perPage:
                        type: integer
                        description: 'The number of items per page.'
                      totalPage:
                        type: integer
                        description: 'The total number of pages.'
                  listTournaments:
                    type: object
                    properties:
                      featuredTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      allTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      popularTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                          page:
                            type: integer
                          pageSize:
                            type: integer
                          totalPage:
                            type: integer
        '404':
          description: 'Gamer not found'
          content:
            application/json:
              schema:
                required:
                  - success
                  - code
                  - message
                  - data
                  - type
                  - title
                  - status
                  - detail
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: undefined
                  nickname:
                    type: string
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: number
                  detail:
                    type: string
      security:
        - {  }
        -
          bearerAuth: []
  '/gamer-profile/{nickname}/teams':
    get:
      tags:
        - 'Gamer Profile'
      description: 'Get teams for a gamer'
      operationId: getGamerTeams
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: teamName
          in: query
          description: 'The name of the team'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Gamer teams'
          content:
            application/json:
              schema:
                required:
                  - hero
                  - teams
                type: object
                properties:
                  hero:
                    required:
                      - uuid
                      - nickname
                      - email
                      - name
                      - surname
                      - birthdate
                      - profileImageURL
                      - createdAt
                      - connectionStatus
                      - friendRequestCount
                      - friendshipStatus
                      - phone
                    type: object
                    properties:
                      uuid:
                        type: string
                        description: 'Unique identifier for the gamer.'
                      nickname:
                        type: string
                        description: 'The nickname of the gamer.'
                      email:
                        type: string
                        description: 'The email of the gamer.'
                        format: email
                      name:
                        type: string
                        description: 'The name of the gamer'
                      surname:
                        type: string
                        description: 'The surname of the gamer.'
                      birthdate:
                        type: string
                        description: 'The birthdate of the gamer.'
                        format: date
                      profileImageURL:
                        type: string
                        description: "The URL of the gamer's profile image."
                        format: url
                      createdAt:
                        type: number
                        description: 'Year the gamer registered.'
                        example: 2023
                      connectionStatus:
                        enum:
                          - online
                          - offline
                          - busy
                        type: string
                        description: 'The current connection status of the hero.'
                      friendRequestCount:
                        minimum: 0
                        type: integer
                        description: 'The number of friend requests the gamer has. If the hero is not the authenticated user, this field will be 0.'
                      friendshipStatus:
                        enum:
                          - friends
                          - not-friends
                          - you-sent-request
                          - you-received-request
                          - you-blocked
                          - you-are-blocked
                        type: string
                        description: 'The friendship status between the gamer and the authenticated user.'
                      hasActiveTournament:
                        type: boolean
                        description: 'Indicates if the hero has an active tournament.'
                        example: true
                      phone:
                        type: object
                        properties:
                          fullPhoneNumber:
                            type: string
                            example: 905321234567.0
                          countryCode:
                            type: integer
                            example: 90
                          countryCodeAsString:
                            type: string
                            example: TR
                          number:
                            type: string
                            example: 5321234567
                        nullable: true
                  teams:
                    type: array
                    items:
                      properties:
                        uuid:
                          type: string
                          description: 'Unique identifier for the team.'
                        name:
                          type: string
                          description: 'Name of the team.'
                        slug:
                          type: string
                          description: 'Slug of the team.'
                        imageURL:
                          type: string
                          description: "URL of the team's image."
                        game:
                          type: object
                          properties:
                            uuid:
                              type: string
                              description: 'Unique identifier for the game.'
                            name:
                              type: string
                              description: 'Name of the game.'
                            slug:
                              type: string
                              description: 'Slug of the game.'
                            imageURL:
                              type: string
                              description: "URL of the game's image."
                        members:
                          type: array
                          items:
                            properties:
                              uuid:
                                type: string
                                description: 'Unique identifier for the member.'
                              nickname:
                                type: string
                                description: 'The nickname of the member.'
                              imageUrl:
                                type: string
                                description: "URL of the member's profile image."
                              role:
                                enum:
                                  - Founder
                                  - Leader
                                  - Member
                                  - Coach
                                  - Substitute
                                type: string
                                description: 'The role of the member in the team.'
                  pagination:
                    required:
                      - page
                      - pageSize
                      - total
                    type: object
                    properties:
                      page:
                        type: integer
                        description: 'The current page number.'
                      perPage:
                        type: integer
                        description: 'The number of items per page.'
                      totalPage:
                        type: integer
                        description: 'The total number of pages.'
        '404':
          description: 'Gamer not found'
          content:
            application/json:
              schema:
                required:
                  - success
                  - code
                  - message
                  - data
                  - type
                  - title
                  - status
                  - detail
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: undefined
                  nickname:
                    type: string
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: number
                  detail:
                    type: string
      security:
        - {  }
        -
          bearerAuth: []
  '/gamer-profile/{nickname}/hubs':
    get:
      tags:
        - 'Gamer Profile'
      description: 'Get hubs for a gamer'
      operationId: getGamerHubs
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: hubName
          in: query
          description: 'The name of the hub'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Gamer hubs'
          content:
            application/json:
              schema:
                required:
                  - hero
                  - hubs
                type: object
                properties:
                  hero:
                    required:
                      - uuid
                      - nickname
                      - email
                      - name
                      - surname
                      - birthdate
                      - profileImageURL
                      - createdAt
                      - connectionStatus
                      - friendRequestCount
                      - friendshipStatus
                      - phone
                    type: object
                    properties:
                      uuid:
                        type: string
                        description: 'Unique identifier for the gamer.'
                      nickname:
                        type: string
                        description: 'The nickname of the gamer.'
                      email:
                        type: string
                        description: 'The email of the gamer.'
                        format: email
                      name:
                        type: string
                        description: 'The name of the gamer'
                      surname:
                        type: string
                        description: 'The surname of the gamer.'
                      birthdate:
                        type: string
                        description: 'The birthdate of the gamer.'
                        format: date
                      profileImageURL:
                        type: string
                        description: "The URL of the gamer's profile image."
                        format: url
                      createdAt:
                        type: number
                        description: 'Year the gamer registered.'
                        example: 2023
                      connectionStatus:
                        enum:
                          - online
                          - offline
                          - busy
                        type: string
                        description: 'The current connection status of the hero.'
                      friendRequestCount:
                        minimum: 0
                        type: integer
                        description: 'The number of friend requests the gamer has. If the hero is not the authenticated user, this field will be 0.'
                      friendshipStatus:
                        enum:
                          - friends
                          - not-friends
                          - you-sent-request
                          - you-received-request
                          - you-blocked
                          - you-are-blocked
                        type: string
                        description: 'The friendship status between the gamer and the authenticated user.'
                      hasActiveTournament:
                        type: boolean
                        description: 'Indicates if the hero has an active tournament.'
                        example: true
                      phone:
                        type: object
                        properties:
                          fullPhoneNumber:
                            type: string
                            example: 905321234567.0
                          countryCode:
                            type: integer
                            example: 90
                          countryCodeAsString:
                            type: string
                            example: TR
                          number:
                            type: string
                            example: 5321234567
                        nullable: true
                  hubs:
                    type: array
                    items:
                      required:
                        - uuid
                        - name
                        - url
                        - imageURL
                        - isOwner
                        - memberCount
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: 'Unique identifier for the hub.'
                        name:
                          type: string
                          description: 'Name of the hub.'
                        url:
                          type: string
                          description: 'URL of the hub.'
                          format: uri
                        imageURL:
                          type: string
                          description: "URL of the hub's image."
                          format: uri
                        isOwner:
                          type: boolean
                          description: 'Indicates if the profile owner is the owner of the hub.'
                        memberCount:
                          type: integer
                          description: 'Number of members in the hub.'
                  pagination:
                    required:
                      - page
                      - pageSize
                      - total
                    type: object
                    properties:
                      page:
                        type: integer
                        description: 'The current page number.'
                      perPage:
                        type: integer
                        description: 'The number of items per page.'
                      totalPage:
                        type: integer
                        description: 'The total number of pages.'
        '404':
          description: 'Gamer not found'
          content:
            application/json:
              schema:
                required:
                  - success
                  - code
                  - message
                  - data
                  - type
                  - title
                  - status
                  - detail
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: undefined
                  nickname:
                    type: string
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: number
                  detail:
                    type: string
      security:
        - {  }
        -
          bearerAuth: []
  '/gamer-profile/{nickname}/friends':
    get:
      tags:
        - 'Gamer Profile'
      description: 'Get friends for a gamer'
      operationId: getGamerFriends
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: friendNickname
          in: query
          description: 'The nickname of the friend'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Gamer friends'
          content:
            application/json:
              schema:
                required:
                  - hero
                  - friends
                type: object
                properties:
                  hero:
                    required:
                      - uuid
                      - nickname
                      - email
                      - name
                      - surname
                      - birthdate
                      - profileImageURL
                      - createdAt
                      - connectionStatus
                      - friendRequestCount
                      - friendshipStatus
                      - phone
                    type: object
                    properties:
                      uuid:
                        type: string
                        description: 'Unique identifier for the gamer.'
                      nickname:
                        type: string
                        description: 'The nickname of the gamer.'
                      email:
                        type: string
                        description: 'The email of the gamer.'
                        format: email
                      name:
                        type: string
                        description: 'The name of the gamer'
                      surname:
                        type: string
                        description: 'The surname of the gamer.'
                      birthdate:
                        type: string
                        description: 'The birthdate of the gamer.'
                        format: date
                      profileImageURL:
                        type: string
                        description: "The URL of the gamer's profile image."
                        format: url
                      createdAt:
                        type: number
                        description: 'Year the gamer registered.'
                        example: 2023
                      connectionStatus:
                        enum:
                          - online
                          - offline
                          - busy
                        type: string
                        description: 'The current connection status of the hero.'
                      friendRequestCount:
                        minimum: 0
                        type: integer
                        description: 'The number of friend requests the gamer has. If the hero is not the authenticated user, this field will be 0.'
                      friendshipStatus:
                        enum:
                          - friends
                          - not-friends
                          - you-sent-request
                          - you-received-request
                          - you-blocked
                          - you-are-blocked
                        type: string
                        description: 'The friendship status between the gamer and the authenticated user.'
                      hasActiveTournament:
                        type: boolean
                        description: 'Indicates if the hero has an active tournament.'
                        example: true
                      phone:
                        type: object
                        properties:
                          fullPhoneNumber:
                            type: string
                            example: 905321234567.0
                          countryCode:
                            type: integer
                            example: 90
                          countryCodeAsString:
                            type: string
                            example: TR
                          number:
                            type: string
                            example: 5321234567
                        nullable: true
                  friends:
                    type: array
                    items:
                      required:
                        - uuid
                        - nickname
                        - createdAt
                        - name
                        - surname
                        - profileImageURL
                        - connectionStatus
                        - isFriend
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: 'Unique identifier for the friend.'
                        nickname:
                          type: string
                          description: 'The nickname of the friend.'
                        createdAt:
                          type: string
                          description: 'The registration date of the friend.'
                          format: date-time
                        name:
                          type: string
                          description: 'The name of the friend.'
                        surname:
                          type: string
                          description: 'The surname of the friend.'
                        profileImageURL:
                          type: string
                          description: "URL to the friend's profile image."
                          format: url
                        connectionStatus:
                          enum:
                            - online
                            - offline
                            - busy
                          type: string
                          description: 'The current connection status of the friend.'
                        isFriend:
                          type: boolean
                          description: 'Indicates if the hero is a friend of the authenticated user.'
                  pagination:
                    required:
                      - page
                      - pageSize
                      - total
                    type: object
                    properties:
                      page:
                        type: integer
                        description: 'The current page number.'
                      perPage:
                        type: integer
                        description: 'The number of items per page.'
                      totalPage:
                        type: integer
                        description: 'The total number of pages.'
        '404':
          description: 'Gamer not found'
          content:
            application/json:
              schema:
                required:
                  - success
                  - code
                  - message
                  - data
                  - type
                  - title
                  - status
                  - detail
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: undefined
                  nickname:
                    type: string
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: number
                  detail:
                    type: string
      security:
        - {  }
        -
          bearerAuth: []
  '/gamer-profile/add-friend/{nickname}':
    post:
      tags:
        - 'Gamer Profile'
      description: 'Add friend'
      operationId: addFriend
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
      security:
        -
          bearerAuth: []
  '/gamer-profile/remove-friend/{nickname}':
    delete:
      tags:
        - 'Gamer Profile'
      description: 'Remove a friend'
      operationId: removeFriend
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
      security:
        -
          bearerAuth: []
  '/gamer-profile/friend-request/{nickname}/accept':
    patch:
      tags:
        - 'Gamer Profile'
      description: 'Accept a friend request'
      operationId: acceptFriendRequest
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
      security:
        -
          bearerAuth: []
  '/gamer-profile/friend-request/{nickname}/reject':
    patch:
      tags:
        - 'Gamer Profile'
      description: 'Reject a friend request'
      operationId: rejectFriendRequest
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
      security:
        -
          bearerAuth: []
  '/gamer-profile/friend-request/{nickname}/delete':
    delete:
      tags:
        - 'Gamer Profile'
      description: 'Delete a friend request'
      operationId: deleteFriendRequest
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
      security:
        -
          bearerAuth: []
  '/gamer-profile/block-user/{nickname}':
    post:
      tags:
        - 'Gamer Profile'
      description: 'Block a user'
      operationId: blockUser
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
      security:
        -
          bearerAuth: []
  '/gamer-profile/unblock-user/{nickname}':
    delete:
      tags:
        - 'Gamer Profile'
      description: 'Unblock a user'
      operationId: unblockUser
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
      security:
        -
          bearerAuth: []
  /gamer-profile/change-message-preferences:
    patch:
      tags:
        - 'Gamer Profile'
      description: 'Change the message preferences of a gamer'
      operationId: changeMessagePreferences
      requestBody:
        content:
          application/json:
            schema:
              required:
                - messagePreference
              type: object
              properties:
                messagePreference:
                  enum:
                    - everyone
                    - friends
                    - nobody
                  type: string
      responses:
        '204':
          description: 'No Content'
      security:
        -
          bearerAuth: []
  '/team/{gameSlug}/{teamSlug}-{teamHash}/cancel-join-request':
    post:
      tags:
        - Team
      description: 'Cancel team join request'
      operationId: cancelTeamJoinRequest
      parameters:
        -
          name: gameSlug
          in: path
          required: true
          schema:
            type: string
            example: game-slug
        -
          name: teamSlug
          in: path
          required: true
          schema:
            type: string
            example: team-slug
        -
          name: teamHash
          in: path
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/user/agreement/{agreement}/accept':
    put:
      tags:
        - Users
      description: 'User accepts agreement'
      operationId: acceptAgreement
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: agreement
          in: path
          description: 'Agreement UUID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items: {  }
                        default: []
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
        '404':
          description: 'Resource Not Found'
      security:
        -
          bearerAuth: []
  /user/agreement/enforcement-test:
    get:
      tags:
        - Users
      description: 'This is a test endpoint to check if agreement enforcement applies correctly.'
      operationId: testEnforcementOfAgreement
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items: {  }
                        default: []
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
        '404':
          description: 'Resource Not Found'
      security:
        -
          bearerAuth: []
  /user/me:
    get:
      tags:
        - Users
      description: 'Information about the logged in user.'
      operationId: AuthUserInformation
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items: {  }
                        default: []
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
        '404':
          description: 'Resource Not Found'
      security:
        -
          bearerAuth: []
  /user/email/verification/send:
    post:
      tags:
        - Users
      description: 'Sends email verification token (Status pending users only)'
      operationId: emailSendVerification
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required: []
              type: object
              properties:
                'email or token':
                  type: string
                  example: 'johndoe@example.com | 29305lfpeisxlsiwK2023ld*'
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items: {  }
                        default: []
        '401':
          description: Unauthenticated
        '422':
          description: 'Unprocessable Content'
  /user/email/verification/verify:
    put:
      tags:
        - Users
      description: 'Verifies registered email via a valid token'
      operationId: emailVerify
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
              type: object
              properties:
                token:
                  maxLength: 64
                  type: string
                  example: 02e3370995010feea7d12c166
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items: {  }
                        default: []
        '401':
          description: Unauthenticated
        '422':
          description: 'Unprocessable Content'
  /user/password/forgot:
    post:
      tags:
        - Users
      description: 'Sends password reset email'
      operationId: userPasswordForgot
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items: {  }
                        default: []
        '422':
          description: 'Unprocessable Content'
  /user/password/reset:
    post:
      tags:
        - Users
      description: 'Sets new password via a valid token sent within email and related e-mail address'
      operationId: userPasswordReset
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
                - email
                - password
                - password_confirmation
              type: object
              properties:
                token:
                  type: string
                  example: 02e3370995010feea7d12c166
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: Password123
                password_confirmation:
                  type: string
                  example: Password123
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items: {  }
                        default: []
        '422':
          description: 'Unprocessable Content'
  /user/profile/nickname/check:
    post:
      tags:
        - Users
      description: 'Controls the availability of the requested nickname and suggests another if not applicable.'
      operationId: checkNickname
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - nickname
              type: object
              properties:
                nickname:
                  type: string
                  example: johndoe
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          nickname:
                            type: string
                            example: 'jonhdoe#27'
        '400':
          description: 'Nickname and hash is already in use.'
          content:
            'application:json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 'Nickname and hash is already in use.'
                  data:
                    type: object
                    properties:
                      nickname:
                        type: string
                        example: 'jonhdoe#27'
        '401':
          description: Unauthenticated
        '422':
          description: 'Unprocessable Content'
  /user/profile/username/check:
    post:
      tags:
        - Users
      description: 'Controls the availability of the requested username and suggests another if not applicable.'
      operationId: checkUsername
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - username
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          username:
                            type: string
                            example: 'jonhdoe#27'
        '401':
          description: Unauthenticated
        '422':
          description: 'Unprocessable Content'
  /user/profile/nickname:
    put:
      tags:
        - Users
      description: 'Changes nickname'
      operationId: changeNickname
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - nickname
                - nickname_hash
              type: object
              properties:
                nickname:
                  type: string
                  example: johndoe
                nickname_hash:
                  maximum: 9999
                  minimum: 10
                  type: integer
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          uuid:
                            type: string
                          email:
                            type: string
                          username:
                            type: string
                          name:
                            type: string
                          status:
                            enum:
                              - Pending
                              - Approved
                              - Rejected
                            type: string
                          timezone:
                            type: string
                            example: UTC
                          language:
                            type: string
                            example: tr
                          isOnboarded:
                            type: boolean
                            example: true
                          roles:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                role_permissions:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      name:
                                        type: string
                          permissions:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
        '401':
          description: Unauthenticated
        '422':
          description: 'Unprocessable Content'
      security:
        -
          bearerAuth: []
  /register:
    post:
      tags:
        - Users
      description: 'Registers new user'
      operationId: Register
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - password
                - agreements_accepted
                - isSubscribed
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: Password123
                agreements_accepted:
                  type: array
                  example:
                    - agreement-uuid
                    - agreement-uuid
                    - agreement-uuid
                isSubscribed:
                  type: boolean
                  description: 'Subscribe to the newsletter'
                  example: true
        required: true
      responses:
        '200':
          description: 'Registration successful'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        allOf:
                          -
                            type: object
                            properties:
                              access_token:
                                type: string
                                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9
                              refresh_token:
                                type: string
                                example: jduVz1uY9EHVB9Gd9m2316
                              token_type:
                                type: string
                                example: bearer
                              wallet_uuid:
                                type: string
                                format: uuid
                                example: uuid
                              r2c_account_balance:
                                type: integer
                                example: 0
                              expires_in:
                                type: integer
                                example: 60
                          -
                            type: object
                            properties:
                              uuid:
                                type: string
                              email:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                              status:
                                enum:
                                  - Pending
                                  - Approved
                                  - Rejected
                                type: string
                              timezone:
                                type: string
                                example: UTC
                              language:
                                type: string
                                example: tr
                              isOnboarded:
                                type: boolean
                                example: true
                              roles:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    role_permissions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                              permissions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
        '422':
          description: 'Unprocessable Entity'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 422
                  message:
                    type: string
                    example: 'Nickname and hash is not available.'
                  data:
                    type: object
                    items: {  }
                  errors:
                    type: object
                    properties:
                      username_user_code:
                        type: array
                        items:
                          type: string
                        example:
                          - 'Nickname and hash is not available.'
  /upload/user:
    post:
      tags:
        - Upload
      description: 'Upload File/Image for user'
      operationId: fileUploadUser
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      code:
                        type: integer
                        example: 0
                      message:
                        type: string
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          url:
                            type: string
                          uuid:
                            type: string
                          filename:
                            type: string
                          created_at:
                            type: string
                            format: date-time
                          created_by:
                            type: object
                            properties:
                              uuid:
                                type: string
                              email:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                              status:
                                enum:
                                  - Pending
                                  - Approved
                                  - Rejected
                                type: string
                              timezone:
                                type: string
                                example: UTC
                              language:
                                type: string
                                example: tr
                              isOnboarded:
                                type: boolean
                                example: true
                              roles:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    role_permissions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          name:
                                            type: string
                              permissions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
        '422':
          description: 'Unprocessable Content'
      security:
        -
          bearerAuth: []
  /tournaments:
    get:
      tags:
        - Tournaments
      description: 'Returns list of tournaments'
      operationId: listTournaments
      parameters:
        -
          name: refresh
          in: query
          description: 'refresh teams data'
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: tagSlugs
          in: query
          description: 'Tag slugs'
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example:
            - tag-slug
            - tag-slug
        -
          name: game
          in: query
          description: 'Game slug filter'
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          description: 'Name filter'
          required: false
          schema:
            type: string
        -
          name: status
          in: query
          description: 'Status filter'
          required: false
          schema:
            enum:
              - upcoming
              - ongoing
              - past
            type: string
        -
          name: numberOfUser
          in: query
          description: 'Team size filter'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                required:
                  - page
                  - total
                  - pageSize
                  - allTournaments
                  - featuredTournaments
                properties:
                  page:
                    type: number
                  total:
                    type: number
                  pageSize:
                    type: number
                  allTournaments:
                    type: array
                    items:
                      required:
                        - id
                        - name
                        - slug
                        - logo
                        - startDate
                        - totalSlot
                        - numberOfUser
                        - prize
                        - entranceFee
                        - game
                        - status
                        - hub
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        slug:
                          type: string
                        logo:
                          type: string
                        startDate:
                          type: string
                        totalSlot:
                          type: number
                        numberOfUser:
                          type: string
                        prize:
                          required:
                            - total
                            - currency
                          type: object
                          properties:
                            total:
                              type:
                                - string
                                - 'null'
                            currency:
                              type:
                                - string
                                - 'null'
                        entranceFee:
                          type:
                            - string
                            - 'null'
                        game:
                          required:
                            - name
                            - slug
                            - logo
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                            logo:
                              type: string
                        hub:
                          required:
                            - id
                            - name
                            - slug
                            - logo
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            slug:
                              type: string
                            logo:
                              type: string
                            memberCount:
                              type: integer
                        tags:
                          type: array
                          items:
                            properties:
                              name:
                                type: string
                                example: 'Tag Name'
                              slug:
                                type: string
                                example: tag-name
                        status:
                          required:
                            - status
                            - text
                          type: object
                          properties:
                            status:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                              type: string
                            text:
                              enum:
                                - 'Not Started'
                                - 'Application Open'
                                - 'Application Closed'
                                - Checkin
                                - SubCheckin
                                - 'Checkin Closed'
                                - Seeding
                                - Stage
                                - 'Tournament Started'
                                - Ongoing
                                - Finished
                              type: string
                          nullable: true
                        liveStreamCount:
                          type: integer
                        isLive:
                          type: boolean
                  featuredTournaments:
                    type: array
                    items:
                      required:
                        - id
                        - name
                        - slug
                        - logo
                        - startDate
                        - totalSlot
                        - numberOfUser
                        - prize
                        - entranceFee
                        - game
                        - status
                        - hub
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        slug:
                          type: string
                        logo:
                          type: string
                        startDate:
                          type: string
                        totalSlot:
                          type: number
                        numberOfUser:
                          type: string
                        prize:
                          required:
                            - total
                            - currency
                          type: object
                          properties:
                            total:
                              type:
                                - string
                                - 'null'
                            currency:
                              type:
                                - string
                                - 'null'
                        entranceFee:
                          type:
                            - string
                            - 'null'
                        game:
                          required:
                            - name
                            - slug
                            - logo
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                            logo:
                              type: string
                        hub:
                          required:
                            - id
                            - name
                            - slug
                            - logo
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            slug:
                              type: string
                            logo:
                              type: string
                            memberCount:
                              type: integer
                        tags:
                          type: array
                          items:
                            properties:
                              name:
                                type: string
                                example: 'Tag Name'
                              slug:
                                type: string
                                example: tag-name
                        status:
                          required:
                            - status
                            - text
                          type: object
                          properties:
                            status:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                              type: string
                            text:
                              enum:
                                - 'Not Started'
                                - 'Application Open'
                                - 'Application Closed'
                                - Checkin
                                - SubCheckin
                                - 'Checkin Closed'
                                - Seeding
                                - Stage
                                - 'Tournament Started'
                                - Ongoing
                                - Finished
                              type: string
                          nullable: true
                        liveStreamCount:
                          type: integer
                        isLive:
                          type: boolean
                  listTournaments:
                    type: object
                    properties:
                      featuredTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      allTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      popularTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                          page:
                            type: integer
                          pageSize:
                            type: integer
                          totalPage:
                            type: integer
    post:
      tags:
        - 'Organizing Tournament'
      description: 'Organize a tournament'
      operationId: organizeATournament
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - gameId
                - participantsConfig
                - hubId
              type: object
              properties:
                type:
                  enum:
                    - SINGLE
                    - LEAGUE
                    - FFA
                    - DOUBLE
                  type: string
                  description: '1- SINGLE 2- LEAGUE 3- FFA 4- DOUBLE'
                name:
                  type: string
                status:
                  enum:
                    - Draft
                    - Publish
                    - Deleted
                  type: string
                  description: '0- Draft 1- Publish 10- Deleted'
                thirdPlaceMatch:
                  type: integer
                  description: '0 for false 1 for true'
                coach:
                  type: integer
                  description: '0 for false 1 for true'
                platformId:
                  type: integer
                  example: 1
                gameId:
                  type: string
                  example: 'game uuid'
                participantsConfig:
                  required:
                    - numberOfTeamMembers
                  type: object
                  properties:
                    numberOfParticipants:
                      type: integer
                      example: 128
                    numberOfSubstituteParticipants:
                      type: integer
                      example: 8
                    numberOfTeamMembers:
                      type: integer
                      example: 5
                    numberOfSubstituteTeamMembers:
                      type: integer
                      example: 2
                entranceFee:
                  type: number
                  format: float
                  example: 100.0
                hubId:
                  type: string
                  example: 'hub uuid'
                contactURL:
                  type: string
                isVisible:
                  type: boolean
                  default: true
        required: true
      responses:
        '201':
          description: 'Tournament Created'
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: 'Tournament uuid'
                        format: uuid
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}':
    get:
      tags:
        - Tournaments
      description: 'Get tournament info'
      operationId: getTournamentInfo
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          type:
                            enum:
                              - SINGLE
                              - LEAGUE
                              - FFA
                              - DOUBLE
                            type: string
                            description: '1-SINGLE, 2-LEAGUE, 3-FFA, 4-DOUBLE'
                          name:
                            type: string
                          status:
                            enum:
                              - Draft
                              - Publish
                              - Deleted
                            type: string
                            description: '0- Draft 1- Publish 10- Deleted'
                          thirdPlaceMatch:
                            type: boolean
                          coach:
                            type: boolean
                          gamesConfig:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              name:
                                type: string
                              slug:
                                type: string
                                example: slug
                              logo:
                                type: string
                                example: 'https://'
                              defaultImages:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      description: 'Default image id'
                                      format: uuid
                                    imageId:
                                      type: string
                                      description: 'Tournament image id'
                                      format: uuid
                                    fileUrl:
                                      type: string
                                      example: 'https://'
                                    type:
                                      enum:
                                        - logo
                                        - banner
                                        - thumbnail
                                      type: string
                              maps:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      format: uuid
                                    name:
                                      type: string
                                    logo:
                                      type: string
                                      nullable: true
                                      example: 'https://...'
                          participantsConfig:
                            type: object
                            properties:
                              numberOfParticipants:
                                type: integer
                              numberOfSubstituteParticipants:
                                type: integer
                              numberOfTeamMembers:
                                type: integer
                              numberOfSubstituteTeamMembers:
                                type: integer
                          dateTimesConfig:
                            type: object
                            properties:
                              timezone:
                                type: string
                                nullable: true
                              publishDate:
                                type: string
                                nullable: true
                              startDatetime:
                                type: string
                                nullable: true
                              applicationStartDatetime:
                                type: string
                                nullable: true
                              applicationCloseDatetime:
                                type: string
                                nullable: true
                              checkinStartDatetime:
                                type: string
                                nullable: true
                              checkinFinishDatetime:
                                type: string
                                nullable: true
                              subCheckinStartDate:
                                type: string
                                nullable: true
                              subCheckinFinishDate:
                                type: string
                                nullable: true
                              stageDatetime:
                                type: string
                                nullable: true
                              seedingDate:
                                type: string
                                nullable: true
                              tournamentStartDate:
                                type: string
                                nullable: true
                          hubOwners:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                memberCount:
                                  type: integer
                                  example: 1
                          userOwners:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                nickname:
                                  type: string
                                nicknameHash:
                                  type: integer
                                logo:
                                  type: string
                          admins:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                nickname:
                                  type: string
                                nicknameHash:
                                  type: integer
                                logo:
                                  type: string
                                role:
                                  enum:
                                    - owner
                                    - admin
                                  type: string
                          tournamentRounds:
                            oneOf:
                              -
                                type: array
                                items:
                                  title: 'Single Elimination Bracket Settings'
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      description: 'round uuid'
                                    stage:
                                      type: integer
                                    date:
                                      type: string
                                      example: 1672579200
                                    isFinal:
                                      type: integer
                                    timezone:
                                      type: string
                                      example: Europe/Istanbul
                                    matchType:
                                      enum:
                                        - singleMatch
                                        - bestOfThree
                                        - bestOfFive
                                        - bestOfFivePlus
                                      type: string
                                      description: '1-singleMatch 2-bestOfThree 3-bestOfFive, 4-bestOfFivePlus'
                                    info:
                                      type: object
                                      properties:
                                        gameModIds:
                                          type: array
                                          items:
                                            type: string
                                            format: uuid
                                        gameMapSetsCount:
                                          type: integer
                                      nullable: true
                              -
                                title: 'Double Elimination Bracket Settings'
                                required:
                                  - upper
                                  - lower
                                type: object
                                properties:
                                  upper:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: string
                                          description: 'round uuid'
                                        stage:
                                          type: integer
                                        date:
                                          type: string
                                          example: 1672579200
                                        isFinal:
                                          type: integer
                                        timezone:
                                          type: string
                                          example: Europe/Istanbul
                                        matchType:
                                          enum:
                                            - singleMatch
                                            - bestOfThree
                                            - bestOfFive
                                            - bestOfFivePlus
                                          type: string
                                        info:
                                          type: object
                                          properties:
                                            gameModIds:
                                              type: array
                                              items:
                                                type: string
                                                format: uuid
                                            gameMapSetsCount:
                                              type: integer
                                          nullable: true
                                  lower:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        id:
                                          type: string
                                          description: 'round uuid'
                                        stage:
                                          type: integer
                                        date:
                                          type: string
                                          example: 1672579200
                                        isFinal:
                                          type: integer
                                        timezone:
                                          type: string
                                          example: Europe/Istanbul
                                        matchType:
                                          enum:
                                            - singleMatch
                                            - bestOfThree
                                            - bestOfFive
                                            - bestOfFivePlus
                                          type: string
                                        info:
                                          type: object
                                          properties:
                                            gameModIds:
                                              type: array
                                              items:
                                                type: string
                                                format: uuid
                                            gameMapSetsCount:
                                              type: integer
                                          nullable: true
                              -
                                type: array
                                items:
                                  title: 'FFA Elimination Bracket Settings'
                                  required:
                                    - id
                                    - stage
                                    - date
                                    - isFinal
                                    - timezone
                                    - roundInfo
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      description: 'round uuid'
                                    stage:
                                      type: integer
                                    date:
                                      type: string
                                      example: 1672579200
                                    isFinal:
                                      type: integer
                                    timezone:
                                      type: string
                                      example: Europe/Istanbul
                                    matchType:
                                      enum:
                                        - singleMatch
                                        - bestOfThree
                                        - bestOfFive
                                        - bestOfFivePlus
                                      type: string
                                    roundInfo:
                                      type: object
                                      properties:
                                        sets:
                                          type: integer
                                        encounters:
                                          type: integer
                                        teamsPerMatch:
                                          type: integer
                                        advancingTeams:
                                          type: integer
                                        mapIds:
                                          type: array
                                          items:
                                            type: string
                                          description: 'map uuids'
                          description:
                            type: string
                            nullable: true
                          spot:
                            type: string
                            nullable: true
                          rules:
                            type: string
                            nullable: true
                          rulesTitle:
                            type: string
                            nullable: true
                          rulesetId:
                            type: string
                            nullable: true
                          contactURL:
                            type: string
                            nullable: true
                          isSeedingDone:
                            type: boolean
                          isSeedingAuto:
                            type: boolean
                          slug:
                            type: string
                          isVisible:
                            type: boolean
                          isCheckInRequired:
                            type: boolean
                          logoURL:
                            type: string
                            description: "Logo URL, If there is no logo, it will be return '/noimagetournamentlogo.png'"
                            nullable: true
                          bannerURL:
                            type: string
                            description: "Banner URL, If there is no logo, it will be return '/noimagetournamentlogo.png'"
                            nullable: true
                          thumbnailURL:
                            type: string
                            description: "Thumbnail URL, If there is no logo, it will be return '/noimagetournamentlogo.png'"
                            nullable: true
                          points:
                            type: object
                            properties:
                              pointsPerKill:
                                type: integer
                              pointsPerPlacement:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    placement:
                                      type: integer
                                    points:
                                      type: integer
                            description: 'Points required for FFA elimination tournament'
                            nullable: true
                          joinType:
                            enum:
                              - open-for-all
                              - link-only
                              - invite-only
                            type: string
                          tournamentCode:
                            type: string
                            description: 'Tournament join code'
                          restrictions:
                            type: object
                            properties:
                              hubMembersOnlyJoin:
                                type: boolean
                                example: false
                              age:
                                type: integer
                                nullable: true
                          isCustomRoundsActive:
                            type: boolean
                            nullable: true
                          isCustomPointsActive:
                            type: boolean
                          leaderboards:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                status:
                                  enum:
                                    - publish
                                    - draft
                                  type: string
                                banner:
                                  type: string
                                  nullable: true
                                thumbnail:
                                  type: string
                                  nullable: true
                                teamCount:
                                  type: integer
                                prizeCount:
                                  type: integer
                                gameId:
                                  type: string
                                  format: uuid
                                gameName:
                                  type: string
                                gameSlug:
                                  type: string
                                gameLogo:
                                  type: string
                                  nullable: true
                            nullable: true
                  -
                    type: object
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - 'Organizing Tournament'
      description: 'Change tournament Details'
      operationId: changeTournamentDetails
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                thirdPlaceMatch:
                  type: integer
                  description: '0 for false 1 for true'
                coach:
                  type: integer
                  description: '0 for false 1 for true'
                numberOfParticipants:
                  type: integer
                numberOfSubstituteParticipants:
                  type: integer
                numberOfTeamMembers:
                  type: integer
                numberOfSubstituteTeamMembers:
                  type: integer
                dateTimesConfig:
                  type: object
                  properties:
                    timezone:
                      type: string
                      example: Europe/Istanbul
                    publishDate:
                      type: string
                      example: 1672575600
                    startDatetime:
                      type: string
                      example: 1672575600
                    applicationStartDatetime:
                      type: string
                      example: 1672575600
                    applicationCloseDatetime:
                      type: string
                      example: 1672575600
                    checkinStartDatetime:
                      type: string
                      example: 1672575600
                    checkinFinishDatetime:
                      type: string
                      example: 1672575600
                    subCheckinStartDate:
                      type: string
                      example: 1672575600
                    subCheckinFinishDate:
                      type: string
                      example: 1672575600
                    stageDatetime:
                      type: string
                      example: 1672575600
                    seedingDate:
                      type: string
                      example: 1672575600
                    tournamentStartDate:
                      type: string
                      example: 1672575600
                tournamentRounds:
                  type: array
                  items:
                    required:
                      - uuid
                      - stage
                      - dateTime
                      - isFinal
                      - matchType
                    type: object
                    properties:
                      id:
                        type: string
                        description: 'round uuid'
                        nullable: true
                      stage:
                        type: integer
                      dateTime:
                        type: string
                      isFinal:
                        type: integer
                        description: '0 for false 1 for true'
                      timezone:
                        type: string
                        example: Europe/Istanbul
                      matchType:
                        enum:
                          - singleMatch
                          - bestOfThree
                          - bestOfFive
                          - bestOfFivePlus
                        type: string
                        description: '1-singleMatch 2-bestOfThree 3-bestOfFive 4-bestOfFivePlus'
                      lowerbracket:
                        type: boolean
                      upperbracket:
                        type: boolean
                      info:
                        oneOf:
                          -
                            title: 'FFA elimination rounds info'
                            required:
                              - encounters
                              - advancingTeams
                              - sets
                              - mapIds
                            type: object
                            properties:
                              encounters:
                                type: integer
                                description: 'Encounters per round'
                              advancingTeams:
                                type: integer
                                description: 'Advancing teams per encounter'
                              sets:
                                type: integer
                                description: 'Sets per encounter'
                              mapIds:
                                type: array
                                items:
                                  type: string
                                description: 'The number of maps must be equal to the number of sets.'
                            description: 'Round info necessary for the FFA elimination rounds'
                          -
                            title: 'Brawl Stars game round info'
                            type: object
                            properties:
                              gameModIds:
                                type: array
                                items:
                                  type: string
                                  format: uuid
                                description: 'Include Brawl Stars game modes.'
                              gameMapSetsCount:
                                type: integer
                                description: "Number for each modes' set count"
                description:
                  type: string
                spot:
                  type: string
                rules:
                  type: string
                rulesTitle:
                  type: string
                logoId:
                  type: string
                  example: 'image uuid'
                bannerId:
                  type: string
                  example: 'image uuid'
                thumbnailId:
                  type: string
                  example: 'image uuid'
                userOwners:
                  type: array
                  items:
                    type: string
                    example: 'user uuid'
                admins:
                  minItems: 1
                  type: array
                  items:
                    type: string
                    example: 'user uuid'
                hubOwners:
                  type: array
                  items:
                    type: string
                    example: 'hub uuid'
                rulesetId:
                  type: string
                  example: 'ruleset uuid'
                contactURL:
                  type: string
                isSeedingDone:
                  type: integer
                  description: '0 for false 1 for true'
                isSeedingAuto:
                  type: integer
                  description: '0 for false 1 for true'
                isVisible:
                  type: boolean
                isCheckInRequired:
                  type: boolean
                type:
                  enum:
                    - SINGLE
                    - LEAGUE
                    - FFA
                    - DOUBLE
                  type: string
                points:
                  type: object
                  properties:
                    pointsPerKill:
                      type: integer
                      description: 'Points per kill'
                    pointsPerPlacement:
                      type: array
                      items:
                        required:
                          - place
                          - points
                        type: object
                        properties:
                          placement:
                            type: integer
                          points:
                            type: integer
                  description: 'Points required for FFA elimination tournament'
                joinType:
                  enum:
                    - open-for-all
                    - link-only
                    - invite-only
                  type: string
                hubMembersOnlyJoin:
                  type: boolean
                  example: false
                ageRestriction:
                  type: integer
                  description: 'Should sent 0 value if no restriction for age'
                  nullable: true
                  example: 16
                mapPool:
                  type: array
                  items:
                    type: string
                    example: 'map uuid'
                  description: 'Map pool for vetoable games only (like VALORANT)'
                isCustomRoundsActive:
                  type: boolean
        required: true
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/bracket-new':
    get:
      tags:
        - Tournaments
      description: 'Returns tournament bracket details'
      operationId: getTournamentBracketNew
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Tournament bracket details'
          content:
            application/json:
              schema:
                properties:
                  bracket:
                    type: object
                    properties:
                      type:
                        enum:
                          - single-elimination
                        type: string
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            uuid:
                              type: string
                              format: uuid
                            name:
                              type: string
                            nextMatchId:
                              type: integer
                            nextLooserMatchId:
                              type: integer
                            tournamentRoundText:
                              type: string
                            startTime:
                              type: string
                              format: date-time
                            state:
                              enum:
                                - not-started
                                - ready
                                - veto
                                - playing
                                - ended
                              type: string
                            participants:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                  resultText:
                                    type: string
                                  isWinner:
                                    type: boolean
                                  status:
                                    type: string
                                  name:
                                    type: string
                                  slug:
                                    type: string
                                  picture:
                                    type: string
  '/tournaments/{tournamentId}/change-status':
    patch:
      tags:
        - 'Organizing Tournament'
      description: 'Change tournament status'
      operationId: changeTournamentStatus
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  enum:
                    - Draft
                    - Publish
                    - Deleted
                  type: string
                  description: '0- Draft 1- Publish 10- Deleted'
        required: true
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/change-tournament-dates':
    patch:
      tags:
        - 'Organizing Tournament'
      description: 'Update tournament dates'
      operationId: changeTournamentDates
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                timezone:
                  type: string
                  example: Europe/Istanbul
                publishDate:
                  type: string
                  example: '2023-01-01 12:20'
                startDatetime:
                  type: string
                  example: '2023-01-01 12:20'
                applicationStartDatetime:
                  type: string
                  example: '2023-01-01 12:20'
                applicationCloseDatetime:
                  type: string
                  example: '2023-01-01 12:20'
                checkinStartDatetime:
                  type: string
                  example: '2023-01-01 12:20'
                checkinFinishDatetime:
                  type: string
                  example: '2023-01-01 12:20'
                subCheckinStartDate:
                  type: string
                  example: '2023-01-01 12:20'
                subCheckinFinishDate:
                  type: string
                  example: '2023-01-01 12:20'
                stageDatetime:
                  type: string
                  example: '2023-01-01 12:20'
                seedingDate:
                  type: string
                  example: '2023-01-01 12:20'
                tournamentStartDate:
                  type: string
                  example: '2023-01-01 12:20'
        required: true
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/shuffle-bracket':
    get:
      tags:
        - 'Organizing Tournament'
      description: 'Get tournament shuffled bracket'
      operationId: getTournamentShuffleBracket
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                            description: 'round uuid'
                            format: uuid
                          title:
                            type: string
                          status:
                            enum:
                              - started
                              - not-started
                            type: string
                          type:
                            enum:
                              - 1
                              - 2
                              - 3
                              - 4
                            type: integer
                            description: '1-single match, 2-best of three, 3-best of five, 4-best of five plus'
                          matchs:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: 'encounter uuid'
                                  format: uuid
                                date:
                                  type: string
                                  example: 1672574400
                                status:
                                  enum:
                                    - not-started
                                    - ready
                                    - veto
                                    - playing
                                    - ended
                                  type: string
                                nextMatchWithByeTeam:
                                  type: boolean
                                teams:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      encounterTeamId:
                                        type: integer
                                        description: 'encounter team id'
                                      teamId:
                                        type: string
                                        description: 'team uuid'
                                        format: uuid
                                      teamSortIndex:
                                        type: integer
                                      name:
                                        type: string
                                        description: 'team name'
                                      score:
                                        type: integer
                                      logo:
                                        type: string
                                        example: 'https://'
                                      isLocked:
                                        type: boolean
                                      isWinner:
                                        type: boolean
                  -
                    type: object
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - 'Organizing Tournament'
      description: 'Shuffle tournament bracket'
      operationId: changeTournamentShuffleBracket
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      responses:
        '202':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                            description: 'round uuid'
                            format: uuid
                          title:
                            type: string
                          status:
                            enum:
                              - started
                              - not-started
                            type: string
                          type:
                            enum:
                              - 1
                              - 2
                              - 3
                              - 4
                            type: integer
                            description: '1-single match, 2-best of three, 3-best of five, 4-best of five plus'
                          matchs:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: 'encounter uuid'
                                  format: uuid
                                date:
                                  type: string
                                  example: 1672574400
                                status:
                                  enum:
                                    - not-started
                                    - ready
                                    - veto
                                    - playing
                                    - ended
                                  type: string
                                nextMatchWithByeTeam:
                                  type: boolean
                                teams:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      encounterTeamId:
                                        type: integer
                                        description: 'encounter team id'
                                      teamId:
                                        type: string
                                        description: 'team uuid'
                                        format: uuid
                                      teamSortIndex:
                                        type: integer
                                      name:
                                        type: string
                                        description: 'team name'
                                      score:
                                        type: integer
                                      logo:
                                        type: string
                                        example: 'https://'
                                      isLocked:
                                        type: boolean
                                      isWinner:
                                        type: boolean
                  -
                    type: object
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/applied-teams':
    get:
      tags:
        - Tournaments
      description: 'Get tournament applied teams'
      operationId: getTournamentAppliedTeams
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          appliedTeams:
                            type: array
                            items:
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://'
                                members:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      uuid:
                                        type: string
                                      email:
                                        type: string
                                      name:
                                        type: string
                                      nickname:
                                        type: string
                                      nicknameHash:
                                        type: integer
                                      status:
                                        enum:
                                          - Pending
                                          - Approved
                                          - Rejected
                                        type: string
                                      avatar:
                                        type: string
                                        example: 'https://'
                  -
                    type: object
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/search-members':
    get:
      tags:
        - Tournaments
      description: 'Search tournaments hub members'
      operationId: searchTournamentsHubMembers
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
        -
          name: parameter
          in: query
          description: 'Must be greater than 1'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: 'user uuid'
                              format: uuid
                            nickname:
                              type: string
                            nicknameHash:
                              type: integer
                            logo:
                              type: string
                              example: 'https://'
                            role:
                              enum:
                                - admin
                                - member
                              type: string
                              description: 'User role in the tournament owner hub'
                  -
                    type: object
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/tournaments/{gameSlug}/{tournamentSlug}/hero':
    get:
      tags:
        - Tournaments
      description: 'Return tournament hero details'
      operationId: getTournamentHero
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentSlug
          in: path
          description: 'Tournament slug'
          required: true
          schema:
            type: string
        -
          name: code
          in: query
          description: 'Tournament join code'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      hero:
                        type: object
                        properties:
                          tournament:
                            type: object
                            properties:
                              id:
                                type: string
                              title:
                                type: string
                              status:
                                enum:
                                  - notStarted
                                  - applicationOpen
                                  - applicationClosed
                                  - checkIn
                                  - subCheckIn
                                  - checkInClosed
                                  - seeding
                                  - stage
                                  - tournamentStarted
                                  - ongoing
                                  - finished
                                type: string
                              type:
                                enum:
                                  - SINGLE
                                  - LEAGUE
                                  - FFA
                                type: string
                              publishDate:
                                type: number
                              startDate:
                                type: number
                              applicationStartDate:
                                type: number
                              bannerURL:
                                type: string
                              isVerified:
                                type: boolean
                              totalParticipantCount:
                                type: number
                              applicationCount:
                                type: number
                              isCheckinRequired:
                                type: boolean
                              isSeedingRequired:
                                type: boolean
                              isAdmin:
                                type: boolean
                              joinType:
                                enum:
                                  - open-for-all
                                  - link-only
                                  - invite-only
                                type: string
                              restrictions:
                                type: object
                                properties:
                                  hubMembersOnlyJoin:
                                    type: boolean
                                    description: 'Can only hub members join the tournament?'
                                    example: false
                              isCodeCorrect:
                                type: boolean
                                description: 'Returns true if the tournament code is correct'
                                example: true
                          game:
                            type: object
                            properties:
                              name:
                                type: string
                              slug:
                                type: string
                              logo:
                                type: string
                          owner:
                            type: object
                            properties:
                              user:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    userId:
                                      type: string
                                      format: uuid
                                    name:
                                      type: string
                                    nickname:
                                      type: string
                                    nicknameHash:
                                      type: integer
                                    logo:
                                      type: string
                              hub:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    hubId:
                                      type: string
                                      format: uuid
                                    name:
                                      type: string
                                    slug:
                                      type: string
                                    logo:
                                      type: string
                                    memberCount:
                                      type: integer
                                    details:
                                      type: string
                                    contact:
                                      type: string
                                      format: email
                          user:
                            type: object
                            properties:
                              isUserJoin:
                                type: boolean
                              isUserChecked:
                                type: boolean
                              isUserSubstitute:
                                type: boolean
                              isEncounterActive:
                                type: boolean
                              encounterId:
                                type: string
                                nullable: true
                              hasTeamByGame:
                                type: boolean
                              isTeamCaptainByGame:
                                type: boolean
                              hasConnectGame:
                                type: boolean
                              isUserInvited:
                                type: boolean
                              isUserTeamOwner:
                                type: boolean
                                description: 'The user is the owner of the team they joined in the tournament'
                              isUserHubMember:
                                type: boolean
                                description: 'Indicates whether the user is a member of one of the hubs that owns the tournament'
        '404':
          description: 'Tournament Not Found'
      security:
        - {  }
        -
          bearerAuth: []
  '/tournaments/{gameSlug}/{tournamentSlug}/overview':
    get:
      tags:
        - Tournaments
      description: 'Return tournament overview details'
      operationId: getTournamentOverview
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentSlug
          in: path
          description: 'Tournament slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      overview:
                        required:
                          - tournament
                          - game
                          - applicationInfo
                          - prizePool
                          - quickInfo
                          - tournamentAbout
                          - admins
                          - owner
                        type: object
                        properties:
                          tournament:
                            required:
                              - status
                              - dates
                            type: object
                            properties:
                              status:
                                enum:
                                  - notStarted
                                  - applicationOpen
                                  - applicationClosed
                                  - checkIn
                                  - subCheckIn
                                  - checkInClosed
                                  - seeding
                                  - stage
                                  - tournamentStarted
                                  - ongoing
                                  - finished
                                type: string
                              dates:
                                type:
                                  - object
                                  - 'null'
                                properties:
                                  timezone:
                                    type: string
                                  publishDate:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  seedingDate:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  stageDatetime:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  startDatetime:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  tournamentStartDate:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  checkinStartDatetime:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  checkinFinishDatetime:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  subCheckinStartDate:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  subCheckinFinishDate:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  applicationStartDatetime:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  applicationCloseDatetime:
                                    type: string
                                    example: 'Y-m-D H:i:S'
                                  tournamentEndDate:
                                    type: string
                                    nullable: true
                                    example: 'Y-m-D H:i:S'
                              contactUrl:
                                type: string
                                description: 'Contact url for the tournament'
                                nullable: true
                          game:
                            required:
                              - name
                              - slug
                              - logo
                            type: object
                            properties:
                              name:
                                type: string
                              slug:
                                type: string
                              logo:
                                type: string
                          applicationInfo:
                            required:
                              - teams
                              - subTeams
                            type: object
                            properties:
                              teams:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - registered
                                        - confirmed
                                        - slots
                                      type: string
                                    value:
                                      type: integer
                              subTeams:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - registered
                                        - slots
                                      type: string
                                    value:
                                      type: integer
                          prizePool:
                            type: array
                            items:
                              type: object
                              properties:
                                level:
                                  oneOf:
                                    -
                                      type: integer
                                    -
                                      type: string
                                logo:
                                  type: string
                                prize:
                                  type: string
                                currency:
                                  type: string
                          quickInfo:
                            required:
                              - entranceFee
                              - platform
                              - format
                              - coach
                              - substitutePlayer
                              - teamSize
                              - antiCheatRequired
                              - totalPrize
                              - currency
                              - isCheckInRequired
                              - joinType
                            type: object
                            properties:
                              entranceFee:
                                type: string
                              platform:
                                type: string
                              format:
                                enum:
                                  - double
                                  - single
                                  - ffa
                                  - league
                                type: string
                              coach:
                                type: boolean
                              substitutePlayer:
                                type: integer
                              teamSize:
                                type: string
                                example: 1v1
                              antiCheatRequired:
                                type: boolean
                              totalPrize:
                                type: integer
                              currency:
                                type: string
                              isCheckInRequired:
                                type: boolean
                              joinType:
                                enum:
                                  - open-for-all
                                  - link-only
                                  - invite-only
                                type: string
                          admins:
                            type: array
                            items:
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'Users uuid'
                                  format: uuid
                                name:
                                  type: string
                                nickname:
                                  type: string
                                nicknameHash:
                                  type: integer
                                logo:
                                  type: string
                          owner:
                            required:
                              - user
                              - hub
                            type: object
                            properties:
                              user:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    nickname:
                                      type: string
                                    nicknameHash:
                                      type: integer
                                    logo:
                                      type: string
                              hub:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    uuid:
                                      type: string
                                      format: uuid
                                    name:
                                      type: string
                                    slug:
                                      type: string
                                    logo:
                                      type: string
                                    memberCount:
                                      type: integer
                                    details:
                                      type: string
                                    contact:
                                      type: string
                          tournamentAbout:
                            type: object
                            properties:
                              title:
                                type: string
                              description:
                                type: string
                          tournamentResults:
                            type: array
                            items:
                              properties:
                                order:
                                  type: integer
                                  example: 1
                                teamSlug:
                                  type: string
                                  example: team-slug
                                teamName:
                                  type: string
                                  example: 'Team Name'
                                teamCode:
                                  type: string
                                  example: R2D2
                                teamLogo:
                                  type: string
                                  format: url
                                teamHash:
                                  type: integer
                                  example: 10
                                teamMemberCount:
                                  type: integer
                                  example: 5
                                gameSlug:
                                  type: string
                                  example: game-slug
                                gameName:
                                  type: string
                                  example: 'Game Name'
                                gameLogo:
                                  type: string
                                  format: url
                                  example: 'https://...'
        '404':
          description: 'Tournament Not Found'
      security:
        - {  }
        -
          bearerAuth: []
  '/tournaments/{gameSlug}/{tournamentSlug}/rules-details':
    get:
      tags:
        - Tournaments
      description: "Return tournaments' rules"
      operationId: getTournamentRules
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentSlug
          in: path
          description: 'Tournament slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfull operation'
          content:
            application/json:
              schema:
                properties:
                  rules:
                    type: object
                    properties:
                      title:
                        type: string
                      content:
                        type: string
        '404':
          description: 'Tournament not found'
      security:
        - {  }
        -
          bearerAuth: []
  '/tournaments/{gameSlug}/{tournamentSlug}/teams-details':
    get:
      tags:
        - Tournaments
      description: 'Return tournament teams list'
      operationId: getTournamentTeams
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentSlug
          in: path
          description: 'Tournament slug'
          required: true
          schema:
            type: string
        -
          name: refresh
          in: query
          description: 'refresh teams data'
        -
          name: search
          in: query
          description: 'The search keyword'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      teams:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: 'Tournament team uuid'
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            hash:
                              type: integer
                            tricode:
                              type: string
                            checkIn:
                              type: boolean
                            logo:
                              type: string
                            href:
                              type: string
                              example: /tr/valorant/esa-valorant-team-1
                      isAdmin:
                        type: boolean
        '404':
          description: 'Tournament Not Found'
      security:
        - {  }
        -
          bearerAuth: []
  '/tournaments/{gameSlug}/{tournamentSlug}/prizes-details':
    get:
      tags:
        - Tournaments
      description: 'Return tournament prizes list'
      operationId: getTournamentPrizes
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentSlug
          in: path
          description: 'Tournament slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  prizes:
                    type: array
                    items:
                      type: object
                      properties:
                        level:
                          type: string
                        logo:
                          type: string
                        prize:
                          type: string
                        currency:
                          type: string
        '404':
          description: 'Tournament Not Found'
      security:
        - {  }
        -
          bearerAuth: []
  '/tournaments/{gameSlug}/{tournamentSlug}/bracket-details':
    get:
      tags:
        - Tournaments
      description: "Return tournaments' bracket details"
      operationId: getTournamentBracket
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentSlug
          in: path
          description: 'Tournament slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  bracket:
                    type: object
                    properties:
                      type:
                        enum:
                          - SINGLE
                          - LEAGUE
                          - FFA
                          - DOUBLE
                        type: string
                      rounds:
                        oneOf:
                          -
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: 'round uuid'
                                title:
                                  type: string
                                status:
                                  enum:
                                    - started
                                    - not-started
                                  type: string
                                type:
                                  enum:
                                    - singleMatch
                                    - bestOfThree
                                    - bestOfFive
                                    - bestOfFivePlus
                                  type: string
                                encounters:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                      name:
                                        type: string
                                        nullable: true
                                      tournamentRoundText:
                                        type: string
                                        nullable: true
                                      encounterId:
                                        type: string
                                        description: 'encounter uuid'
                                      date:
                                        type: string
                                        format: 'Y-m-d H:i:s'
                                      startTime:
                                        type: string
                                        format: 'Y-m-d H:i:s'
                                      status:
                                        enum:
                                          - not-started
                                          - ready
                                          - veto
                                          - playing
                                          - ended
                                        type: string
                                      step:
                                        enum:
                                          - not-started
                                          - ready
                                          - veto
                                          - playing
                                          - ended
                                        type: string
                                      winnerType:
                                        enum:
                                          - match
                                          - forfeit
                                          - disqualified
                                          - bye
                                        type: string
                                      info:
                                        type: object
                                        properties:
                                          score:
                                            type: object
                                            properties:
                                              winner:
                                                type: integer
                                              opponent:
                                                type: integer
                                        nullable: true
                                      teams:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            teamId:
                                              type: string
                                              description: 'team uuid'
                                            teamName:
                                              type: string
                                            name:
                                              type: string
                                            teamLogo:
                                              type: string
                                            isWinner:
                                              type: boolean
                                            teamSide:
                                              type: integer
                                            resultText:
                                              type: string
                                            status:
                                              type: string
                                              nullable: true
                                      participants:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            id:
                                              type: string
                                            teamId:
                                              type: string
                                              description: 'team uuid'
                                            teamName:
                                              type: string
                                            name:
                                              type: string
                                            teamLogo:
                                              type: string
                                            isWinner:
                                              type: boolean
                                            teamSide:
                                              type: integer
                                            resultText:
                                              type: string
                                            status:
                                              type: string
                                              nullable: true
                                      canMakeAdminAction:
                                        type: boolean
                                      gameId:
                                        type: string
                                        format: uuid
                                      gameName:
                                        type: string
                                      gameSlug:
                                        type: string
                          -
                            required:
                              - upper
                              - lower
                            type: object
                            properties:
                              upper:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                    uuid:
                                      type: string
                                    name:
                                      type: string
                                    nextMatchId:
                                      type: integer
                                    nextLooserMatchId:
                                      type: integer
                                    tournamentRoundText:
                                      type: string
                                    startTime:
                                      type: string
                                    state:
                                      enum:
                                        - not-started
                                        - ready
                                        - veto
                                        - playing
                                        - ended
                                      type: string
                                    step:
                                      enum:
                                        - not-started
                                        - ready
                                        - veto
                                        - playing
                                        - ended
                                      type: string
                                    info:
                                      type: object
                                      properties:
                                        score:
                                          type: object
                                          properties:
                                            winner:
                                              type: integer
                                            opponent:
                                              type: integer
                                      nullable: true
                                    participants:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          id:
                                            type: string
                                            description: uuid
                                          resultText:
                                            type: string
                                          isWinner:
                                            type: boolean
                                          status:
                                            type: string
                                          name:
                                            type: string
                                          slug:
                                            type: string
                                          picture:
                                            type: string
                                            nullable: true
                                          teamSide:
                                            type: integer
                                    matchType:
                                      enum:
                                        - singleMatch
                                        - bestOfThree
                                        - bestOfFive
                                        - bestOfFivePlus
                                      type: string
                                      description: '1-singleMatch 2-bestOfThree 3-bestOfFive, 4-bestOfFivePlus'
                                    canMakeAdminAction:
                                      type: boolean
                                    gameId:
                                      type: string
                                      format: uuid
                                    gameName:
                                      type: string
                                    gameSlug:
                                      type: string
                              lower:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                    uuid:
                                      type: string
                                    name:
                                      type: string
                                    nextMatchId:
                                      type: integer
                                    nextLooserMatchId:
                                      type: integer
                                    tournamentRoundText:
                                      type: string
                                    startTime:
                                      type: string
                                    state:
                                      enum:
                                        - not-started
                                        - ready
                                        - veto
                                        - playing
                                        - ended
                                      type: string
                                    step:
                                      enum:
                                        - not-started
                                        - ready
                                        - veto
                                        - playing
                                        - ended
                                      type: string
                                    participants:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          id:
                                            type: string
                                            description: uuid
                                          resultText:
                                            type: string
                                          isWinner:
                                            type: boolean
                                          status:
                                            type: string
                                          name:
                                            type: string
                                          slug:
                                            type: string
                                          picture:
                                            type: string
                                            nullable: true
                                          teamSide:
                                            type: integer
                                    matchType:
                                      enum:
                                        - singleMatch
                                        - bestOfThree
                                        - bestOfFive
                                        - bestOfFivePlus
                                      type: string
                                      description: '1-singleMatch 2-bestOfThree 3-bestOfFive, 4-bestOfFivePlus'
                                    canMakeAdminAction:
                                      type: boolean
                                    gameId:
                                      type: string
                                      format: uuid
                                    gameName:
                                      type: string
                                    gameSlug:
                                      type: string
                          -
                            title: 'FFA Bracket Details'
                            type: object
                            properties:
                              uuid:
                                type: string
                                format: uuid
                              title:
                                type: string
                                description: 'Title may be null if not set'
                              roundOrder:
                                type: number
                                example: 1
                              roundDate:
                                type: string
                                format: date-time
                              encounterSets:
                                type: number
                                example: 1
                              advancingTeams:
                                type: number
                                example: 8
                              isFinal:
                                type: boolean
                                example: false
                              encounters:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    uuid:
                                      type: string
                                      format: uuid
                                    title:
                                      type: string
                                    willStartAt:
                                      type: string
                                      format: date-time
                                    timezone:
                                      type: string
                                      example: UTC
                                    step:
                                      enum:
                                        - not-started
                                        - ready
                                        - ready-intermission
                                        - veto
                                        - playing
                                        - ended
                                      type: string
                                    isCancelled:
                                      type: boolean
                                    teams:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          uuid:
                                            type: string
                                            format: uuid
                                          name:
                                            type: string
                                            example: 'Developer Team'
                                          slug:
                                            type: string
                                            example: developer-team
                                          avatar:
                                            type: string
                                            example: 'https://...'
                                          scores:
                                            type: object
                                            properties:
                                              eliminationPoints:
                                                type: integer
                                                description: 'Total points per kill (ELM.)'
                                                example: 1
                                              matchPoints:
                                                type: integer
                                                description: 'Total points per placement (MP.)'
                                                example: 2
                                              winCount:
                                                type: integer
                                                description: 'Number of sets won in the encounter'
                                                example: 3
                                    group:
                                      type: string
                                      example: A
                                    gameId:
                                      type: string
                                      format: uuid
                                    gameName:
                                      type: string
                                    gameSlug:
                                      type: string
        '404':
          description: 'Tournament Not Found'
      security:
        - {  }
        -
          bearerAuth: []
  '/tournaments/{gameSlug}/{tournamentSlug}/finished-matches':
    get:
      tags:
        - Tournaments
      description: "Returns tournament's finished matches list"
      operationId: getTournamentFinishedMatches
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentSlug
          in: path
          description: 'Tournament slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  matches:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Encounter uuid'
                          format: uuid
                        title:
                          type: string
                        step:
                          enum:
                            - ended
                          type: string
                        winnerType:
                          enum:
                            - match
                            - forfeit
                            - disqualified
                            - bye
                          type: string
                        isCanceled:
                          type: boolean
                        isPaused:
                          type: boolean
                        teams:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                description: 'Team uuid'
                                format: uuid
                              name:
                                type: string
                              slug:
                                type: string
                              logo:
                                type: string
                              isWinner:
                                type: boolean
        '404':
          description: 'Tournament Not Found'
      security:
        - {  }
        -
          bearerAuth: []
  '/tournaments/{gameSlug}/{tournamentSlug}/join':
    post:
      tags:
        - Tournaments
      description: 'Join the tournament'
      operationId: joinTournament
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentSlug
          in: path
          description: 'Tournament slug'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - teamId
              type: object
              properties:
                teamId:
                  type: string
                  description: 'Team uuid'
                  example: c934fd56-6520-11ef-b864-0242ac120002
                teamMembers:
                  type: array
                  items:
                    type: object
                    properties:
                      uuid:
                        type: string
                        description: "Team member's uuid"
                        example: c934fd56-6520-11ef-b864-0242ac120002
                      role:
                        enum:
                          - Member
                          - Coach
                          - Substitute
                        type: string
                        description: "Team member's tournament role"
                      isCaptain:
                        type: boolean
                        description: 'Is team member captain?'
                        example: true
                joinCode:
                  type: string
                  description: 'Tournament join code'
                  example: 01j6pg7tcr0g3dpv3b2kv7cck3
        required: true
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  /tournaments/generate-validate-ffa-bracket:
    post:
      tags:
        - 'Organizing Tournament'
      description: 'Generate and validate FFA bracket'
      operationId: generateValidateFFABracket
      requestBody:
        content:
          application/json:
            schema:
              required:
                - slots
                - gameSlug
              type: object
              properties:
                slots:
                  type: number
                  description: 'Number of slots in the tournament'
                  example: 32
                gameSlug:
                  type: string
                  description: 'Slug of the game'
                  example: gameSlug
                roundCount:
                  type: number
                  description: 'Number of rounds in the tournament'
                rounds:
                  type: array
                  items:
                    required:
                      - roundIndex
                      - numberOfGroups
                      - advancingTeams
                      - sets
                      - mapIds
                    type: object
                    properties:
                      roundIndex:
                        minimum: 1
                        type: number
                        description: 'Index of the round'
                        example: 1
                      numberOfGroups:
                        type: number
                        description: 'Number of groups in the round (encounter). It must be a power of 2. (e.g. 2, 4, 8, 16, 32, 64)'
                        example: 2
                      advancingTeams:
                        maximum: 8
                        minimum: 1
                        type: number
                        description: 'Number of teams advancing to the next round. It must be a power of 2. (e.g. 1, 2, 4, 8)'
                        example: 8
                      sets:
                        type: number
                        description: 'Number of sets in the encounter'
                        example: 2
                      mapIds:
                        type: array
                        items:
                          type: string
                          example: uuid
                  description: 'If rounds are provided, the system will validate the rounds and slots. If not provided, the system will generate the rounds and slots.'
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                required:
                  - slots
                  - roundCountMinMax
                  - roundCount
                  - rounds
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: number
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: undefined
                  slots:
                    type: number
                  roundCountMinMax:
                    required:
                      - min
                      - max
                    type: object
                    properties:
                      min:
                        type: number
                        description: 'Minimum number of rounds in the tournament'
                        example: 1
                      max:
                        type: number
                        description: 'Maximum number of rounds in the tournament'
                        example: 8
                    description: 'Minimum and maximum can be the same'
                  roundCount:
                    type: number
                  rounds:
                    type: array
                    items:
                      required:
                        - round
                        - encounters
                        - teamsPerMatch
                        - unevenTeamsPerMatch
                        - advancingTeams
                        - totalTeams
                        - sets
                        - mapIds
                      type: object
                      properties:
                        round:
                          type: number
                        encounters:
                          type: number
                        teamsPerMatch:
                          type: number
                        unevenTeamsPerMatch:
                          type: boolean
                        advancingTeams:
                          type: number
                        totalTeams:
                          type: number
                        sets:
                          type: number
                        mapIds:
                          type: array
                          items:
                            type: string
                  gameMaps:
                    type: array
                    items:
                      required:
                        - uuid
                        - name
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: 'Map uuid'
                          example: uuid
                        name:
                          type: string
                          description: 'Map name'
                          example: 'Map name'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    anyOf:
                      -
                        title: Warning
                        type: object
                        properties:
                          key:
                            type: string
                            example: uneven-teams-per-match
                          message:
                            type: string
                            example: 'Uneven teams per match'
                          encounters:
                            type: number
                          teamsPerMatch:
                            type: number
                      -
                        title: 'Min team size'
                        type: object
                        properties:
                          key:
                            type: string
                            example: min-team-size
                          minTeamSize:
                            type: number
                          teamsPerMatch:
                            type: number
                          round:
                            type: number
                      -
                        title: 'Max team size'
                        type: object
                        properties:
                          key:
                            type: string
                            example: max-team-size
                          maxTeamSize:
                            type: number
                          teamsPerMatch:
                            type: number
                          round:
                            type: number
                      -
                        title: Encounters
                        type: object
                        properties:
                          key:
                            type: string
                            example: encounters
                          encounters:
                            type: number
                          round:
                            type: number
                      -
                        title: 'Advancing teams'
                        required:
                          - key
                          - advancingTeams
                          - round
                        type: object
                        properties:
                          key:
                            type: string
                            example: advancing-teams
                          advancingTeams:
                            type: number
                            example: 8
                          teamsPerMatch:
                            type: number
                            example: 4
                          round:
                            type: number
                      -
                        title: 'Advancing teams greater than zero'
                        required:
                          - key
                          - advancingTeams
                          - round
                        type: object
                        properties:
                          key:
                            type: string
                            example: advancing-teams-greater-than-zero
                          advancingTeams:
                            type: number
                            example: 0
                          round:
                            type: number
                      -
                        title: 'Min slots'
                        type: object
                        properties:
                          key:
                            type: string
                            example: min-slots
                          minSlots:
                            type: number
                            example: 32
                          slots:
                            type: number
                            example: 16
                      -
                        title: 'Total teams'
                        required:
                          - key
                          - totalTeams
                          - totalTeamsThisRound
                          - round
                        type: object
                        properties:
                          key:
                            type: string
                            example: total-teams
                          totalTeams:
                            type: number
                          totalTeamsThisRound:
                            type: number
                          round:
                            type: number
                      -
                        title: 'Map ids'
                        required:
                          - key
                          - mapIds
                          - sets
                          - round
                        type: object
                        properties:
                          key:
                            type: string
                            example: map-ids
                          mapIds:
                            type: array
                            items:
                              type: string
                              example:
                                - uuid
                                - uuid
                          sets:
                            type: number
                            example: 3
                          round:
                            type: number
                      -
                        title: 'Maps not found'
                        required:
                          - key
                          - gameSlug
                        type: object
                        properties:
                          key:
                            type: string
                            example: maps-not-found
                          gameSlug:
                            type: string
                            example: gameSlug
                      -
                        title: 'Invalid map ids'
                        required:
                          - key
                          - mapIds
                        type: object
                        properties:
                          key:
                            type: string
                            example: invalid-map-ids
                          mapIds:
                            type: array
                            items:
                              type: string
                              example: uuid
                      -
                        title: 'Round count not set'
                        required:
                          - key
                        type: object
                        properties:
                          key:
                            type: string
                            example: round-count-not-set
                      -
                        title: 'Round count min max'
                        required:
                          - key
                          - minRoundCount
                          - maxRoundCount
                          - rounds
                        type: object
                        properties:
                          key:
                            type: string
                            example: round-count-min-max
                          minRoundCount:
                            type: number
                            example: 1
                          maxRoundCount:
                            type: number
                            example: 10
                          rounds:
                            type: number
                            example: 5
  '/tournaments/{gameSlug}/{tournamentSlug}/stream':
    get:
      tags:
        - Tournaments
      description: 'Get live streams for a tournament'
      operationId: getTournamentLiveStreams
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
        -
          name: tournamentSlug
          in: path
          description: 'Tournament slug'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  streams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        title:
                          type: string
                        url:
                          type: string
                        thumbnailUrl:
                          type: string
                        platform:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            imageUrl:
                              type: string
                        isLive:
                          type: boolean
        '404':
          description: 'Tournament streams not found'
      security:
        - {  }
        -
          bearerAuth: []
  /rulesets:
    get:
      tags:
        - 'Organizing Tournament'
      description: 'List your tournament rulesets'
      operationId: listTournamentRulesets
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'Tournament rulesets'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tournamentRulesets:
                    type: array
                    items:
                      required:
                        - id
                        - name
                        - title
                        - description
                        - isOwner
                        - isPrivate
                        - createdAt
                        - updatedAt
                      properties:
                        id:
                          type: string
                          description: 'Tournament ruleset uuid'
                          format: uuid
                        name:
                          type: string
                          description: 'Tournament ruleset name'
                        title:
                          type: string
                          description: 'Tournament ruleset title'
                        description:
                          type: string
                          description: 'Tournament ruleset description'
                        isOwner:
                          type: boolean
                          description: 'Tournament ruleset is owned by the user or owned hub of the user'
                        isPrivate:
                          type: boolean
                          description: 'Tournament ruleset is private'
                        createdAt:
                          type: string
                          description: 'Tournament ruleset creation date'
                          format: date-time
                        updatedAt:
                          type: string
                          description: 'Tournament ruleset last update date'
                          format: date-time
        '400':
          description: 'Bad Request'
      security:
        -
          bearerAuth: []
    post:
      tags:
        - 'Organizing Tournament'
      description: 'Create a new tournament ruleset'
      operationId: createTournamentRuleset
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - title
                - description
                - ownerType
                - ownerId
              type: object
              properties:
                name:
                  type: string
                  example: 'july tournament rules'
                title:
                  type: string
                  example: 'July Game Fest Rules 2023'
                description:
                  type: string
                  example: 'This is the description of the tournament rules'
                ownerType:
                  enum:
                    - hub
                    - user
                  type: string
                ownerId:
                  type: string
                  format: uuid
                  example: uuid
                isPrivate:
                  type: boolean
                  example: false
        required: true
      responses:
        '201':
          description: 'Tournament Created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tournamentRuleset:
                    required:
                      - id
                      - name
                      - title
                      - description
                      - isOwner
                      - isPrivate
                      - createdAt
                      - updatedAt
                    properties:
                      id:
                        type: string
                        description: 'Tournament ruleset uuid'
                        format: uuid
                      name:
                        type: string
                        description: 'Tournament ruleset name'
                      title:
                        type: string
                        description: 'Tournament ruleset title'
                      description:
                        type: string
                        description: 'Tournament ruleset description'
                      isOwner:
                        type: boolean
                        description: 'Tournament ruleset is owned by the user or owned hub of the user'
                      isPrivate:
                        type: boolean
                        description: 'Tournament ruleset is private'
                      createdAt:
                        type: string
                        description: 'Tournament ruleset creation date'
                        format: date-time
                      updatedAt:
                        type: string
                        description: 'Tournament ruleset last update date'
                        format: date-time
      security:
        -
          bearerAuth: []
  '/rulesets/{rulesetId}':
    get:
      tags:
        - 'Organizing Tournament'
      description: 'Get a tournament ruleset by uuid'
      operationId: getTournamentRuleset
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: rulesetId
          in: path
          description: 'Ruleset UUID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Tournament ruleset'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tournamentRuleset:
                    required:
                      - id
                      - name
                      - title
                      - description
                      - isOwner
                      - isPrivate
                      - createdAt
                      - updatedAt
                    properties:
                      id:
                        type: string
                        description: 'Tournament ruleset uuid'
                        format: uuid
                      name:
                        type: string
                        description: 'Tournament ruleset name'
                      title:
                        type: string
                        description: 'Tournament ruleset title'
                      description:
                        type: string
                        description: 'Tournament ruleset description'
                      isOwner:
                        type: boolean
                        description: 'Tournament ruleset is owned by the user or owned hub of the user'
                      isPrivate:
                        type: boolean
                        description: 'Tournament ruleset is private'
                      createdAt:
                        type: string
                        description: 'Tournament ruleset creation date'
                        format: date-time
                      updatedAt:
                        type: string
                        description: 'Tournament ruleset last update date'
                        format: date-time
        '404':
          description: 'Tournament ruleset not found'
      security:
        - {  }
        -
          bearerAuth: []
    delete:
      tags:
        - 'Organizing Tournament'
      description: 'Delete a tournament ruleset by uuid'
      operationId: deleteTournamentRuleset
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: rulesetId
          in: path
          description: 'Ruleset UUID'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Tournament ruleset deleted'
        '404':
          description: 'Tournament ruleset not found'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - 'Organizing Tournament'
      description: 'Change a tournament ruleset by uuid'
      operationId: changeTournamentRuleset
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: rulesetId
          in: path
          description: 'Ruleset UUID'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'july tournament rules'
                title:
                  type: string
                  example: 'July Game Fest Rules 2023'
                description:
                  type: string
                  example: 'This is the description of the tournament rules'
        required: true
      responses:
        '200':
          description: 'Tournament ruleset changed'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tournamentRuleset:
                    required:
                      - id
                      - name
                      - title
                      - description
                      - isOwner
                      - isPrivate
                      - createdAt
                      - updatedAt
                    properties:
                      id:
                        type: string
                        description: 'Tournament ruleset uuid'
                        format: uuid
                      name:
                        type: string
                        description: 'Tournament ruleset name'
                      title:
                        type: string
                        description: 'Tournament ruleset title'
                      description:
                        type: string
                        description: 'Tournament ruleset description'
                      isOwner:
                        type: boolean
                        description: 'Tournament ruleset is owned by the user or owned hub of the user'
                      isPrivate:
                        type: boolean
                        description: 'Tournament ruleset is private'
                      createdAt:
                        type: string
                        description: 'Tournament ruleset creation date'
                        format: date-time
                      updatedAt:
                        type: string
                        description: 'Tournament ruleset last update date'
                        format: date-time
      security:
        -
          bearerAuth: []
  /hubs:
    get:
      tags:
        - Hub
      description: 'Get all hubs'
      operationId: listHubs
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: isFeatured
          in: query
          description: 'The featured status'
          required: false
          schema:
            type: boolean
        -
          name: search
          in: query
          description: 'The search query'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Hub list for the user'
          content:
            application/json:
              schema:
                allOf:
                  -
                    properties:
                      page:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 10
                      pageSize:
                        type: integer
                        example: 100
                  -
                    type: object
                    properties:
                      hubs:
                        type: array
                        items:
                          required:
                            - id
                            - name
                            - slug
                            - category
                          type: object
                          properties:
                            id:
                              type: string
                              description: "The hub's uuid"
                              example: 00000000-0000-0000-0000-000000000000
                            name:
                              type: string
                              example: 'Esa Esports'
                            slug:
                              type: string
                              example: esa-esports
                            category:
                              enum:
                                - brand
                                - organization
                              type: string
                              example: brand
                            description:
                              type: string
                              example: 'Esa Esports is a gaming platform'
                            games:
                              type: array
                              items:
                                type: string
                                description: "The game's slug"
                                example: csgo
                            socials:
                              type: object
                              properties:
                                instagram:
                                  type: string
                                  example: 'https://instagram.com/...'
                                twitter:
                                  type: string
                                  example: 'https://x.com/...'
                                twitch:
                                  type: string
                                  example: 'https://twitch.tv/...'
                                discord:
                                  type: string
                                  example: 'https://discord.gg/...'
                                youtube:
                                  type: string
                                  example: 'https://youtube.com/...'
                                facebook:
                                  type: string
                                  example: 'https://facebook.com/...'
                            avatarUrl:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                            bannerUrl:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                            videoUrl:
                              type: string
                              example: 'https://www.youtube.com/watch?v=...'
                            membersCount:
                              type: integer
                              example: 10
                            ownerNickname:
                              type: string
                              example: excalibur71
                            walletId:
                              type: string
                              description: "Hub's wallet uuid"
                              example: uuid
                            walletBalanceAmount:
                              type: array
                              items:
                                properties:
                                  amount:
                                    type: integer
                                    example: 100
                                  currency:
                                    type: string
                                    example: R2C
                            isJoined:
                              type: boolean
                              example: true
                            createdAt:
                              type: string
                              description: 'The date is provided in UTC timezone.'
                              format: date-time
                            contactUrl:
                              type: string
                              example: 'https://esaesports.com/contact'
                            isAdmin:
                              type: boolean
                              example: true
                      search:
                        type: string
                        description: 'Search for hub name'
                        nullable: true
      security:
        - {  }
        -
          bearerAuth: []
    post:
      tags:
        - Hub
      description: 'Create a new hub'
      operationId: createHub
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - category
                - games
              type: object
              properties:
                name:
                  type: string
                  example: 'Esa Esports'
                category:
                  enum:
                    - brand
                    - organization
                  type: string
                  example: brand
                games:
                  type: array
                  items:
                    type: string
                    description: "The game's slug"
                    example: csgo
                slug:
                  type: string
                  example: esa-esports
                description:
                  type: string
                  example: 'Esa Esports is a gaming platform'
                avatarId:
                  type: string
                  description: "The avatar's uuid"
                  example: uuid
                bannerId:
                  type: string
                  description: "The banner's uuid"
                  example: uuid
        required: true
      responses:
        '201':
          description: 'Hub created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  hub:
                    required:
                      - id
                      - name
                      - slug
                      - category
                    type: object
                    properties:
                      id:
                        type: string
                        description: "The hub's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: 'Esa Esports'
                      slug:
                        type: string
                        example: esa-esports
                      category:
                        enum:
                          - brand
                          - organization
                        type: string
                        example: brand
                      description:
                        type: string
                        example: 'Esa Esports is a gaming platform'
                      games:
                        type: array
                        items:
                          type: string
                          description: "The game's slug"
                          example: csgo
                      socials:
                        type: object
                        properties:
                          instagram:
                            type: string
                            example: 'https://instagram.com/...'
                          twitter:
                            type: string
                            example: 'https://x.com/...'
                          twitch:
                            type: string
                            example: 'https://twitch.tv/...'
                          discord:
                            type: string
                            example: 'https://discord.gg/...'
                          youtube:
                            type: string
                            example: 'https://youtube.com/...'
                          facebook:
                            type: string
                            example: 'https://facebook.com/...'
                      avatarUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      bannerUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      videoUrl:
                        type: string
                        example: 'https://www.youtube.com/watch?v=...'
                      membersCount:
                        type: integer
                        example: 10
                      ownerNickname:
                        type: string
                        example: excalibur71
                      walletId:
                        type: string
                        description: "Hub's wallet uuid"
                        example: uuid
                      walletBalanceAmount:
                        type: array
                        items:
                          properties:
                            amount:
                              type: integer
                              example: 100
                            currency:
                              type: string
                              example: R2C
                      isJoined:
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        description: 'The date is provided in UTC timezone.'
                        format: date-time
                      contactUrl:
                        type: string
                        example: 'https://esaesports.com/contact'
                      isAdmin:
                        type: boolean
                        example: true
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}':
    get:
      tags:
        - Hub
      description: 'Get hub details'
      operationId: getHubDetails
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Hub details'
          content:
            application/json:
              schema:
                type: object
                properties:
                  hub:
                    required:
                      - id
                      - name
                      - slug
                      - category
                    type: object
                    properties:
                      id:
                        type: string
                        description: "The hub's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: 'Esa Esports'
                      slug:
                        type: string
                        example: esa-esports
                      category:
                        enum:
                          - brand
                          - organization
                        type: string
                        example: brand
                      description:
                        type: string
                        example: 'Esa Esports is a gaming platform'
                      games:
                        type: array
                        items:
                          type: string
                          description: "The game's slug"
                          example: csgo
                      socials:
                        type: object
                        properties:
                          instagram:
                            type: string
                            example: 'https://instagram.com/...'
                          twitter:
                            type: string
                            example: 'https://x.com/...'
                          twitch:
                            type: string
                            example: 'https://twitch.tv/...'
                          discord:
                            type: string
                            example: 'https://discord.gg/...'
                          youtube:
                            type: string
                            example: 'https://youtube.com/...'
                          facebook:
                            type: string
                            example: 'https://facebook.com/...'
                      avatarUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      bannerUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      videoUrl:
                        type: string
                        example: 'https://www.youtube.com/watch?v=...'
                      membersCount:
                        type: integer
                        example: 10
                      ownerNickname:
                        type: string
                        example: excalibur71
                      walletId:
                        type: string
                        description: "Hub's wallet uuid"
                        example: uuid
                      walletBalanceAmount:
                        type: array
                        items:
                          properties:
                            amount:
                              type: integer
                              example: 100
                            currency:
                              type: string
                              example: R2C
                      isJoined:
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        description: 'The date is provided in UTC timezone.'
                        format: date-time
                      contactUrl:
                        type: string
                        example: 'https://esaesports.com/contact'
                      isAdmin:
                        type: boolean
                        example: true
                  allowedSocials:
                    type: array
                    items:
                      type: string
                      example:
                        - facebook
                        - instagram
      security:
        - {  }
        -
          bearerAuth: []
    delete:
      tags:
        - Hub
      description: 'Delete a hub'
      operationId: deleteHub
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Hub deleted'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Hub
      description: 'Change hub details'
      operationId: changeHubDetails
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'Esa Esports'
                category:
                  enum:
                    - brand
                    - organization
                  type: string
                  example: brand
                description:
                  type: string
                  example: 'Esa Esports is a gaming platform'
                socials:
                  type: object
                  properties:
                    instagram:
                      type: string
                      example: 'https://instagram.com/...'
                    twitter:
                      type: string
                      example: 'https://x.com/...'
                    twitch:
                      type: string
                      example: 'https://twitch.tv/...'
                    discord:
                      type: string
                      example: 'https://discord.gg/...'
                    youtube:
                      type: string
                      example: 'https://youtube.com/...'
                    facebook:
                      type: string
                      example: 'https://facebook.com/...'
                games:
                  type: array
                  items:
                    type: string
                    description: "The game's slug"
                    example: csgo
                avatarId:
                  type: string
                  description: "The avatar's uuid"
                  example: uuid
                bannerId:
                  type: string
                  description: "The banner's uuid"
                  example: uuid
                videoUrl:
                  type: string
                  example: 'https://www.youtube.com/watch?v=...'
        required: true
      responses:
        '200':
          description: 'Hub details updated'
          content:
            application/json:
              schema:
                type: object
                properties:
                  hub:
                    required:
                      - id
                      - name
                      - slug
                      - category
                    type: object
                    properties:
                      id:
                        type: string
                        description: "The hub's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: 'Esa Esports'
                      slug:
                        type: string
                        example: esa-esports
                      category:
                        enum:
                          - brand
                          - organization
                        type: string
                        example: brand
                      description:
                        type: string
                        example: 'Esa Esports is a gaming platform'
                      games:
                        type: array
                        items:
                          type: string
                          description: "The game's slug"
                          example: csgo
                      socials:
                        type: object
                        properties:
                          instagram:
                            type: string
                            example: 'https://instagram.com/...'
                          twitter:
                            type: string
                            example: 'https://x.com/...'
                          twitch:
                            type: string
                            example: 'https://twitch.tv/...'
                          discord:
                            type: string
                            example: 'https://discord.gg/...'
                          youtube:
                            type: string
                            example: 'https://youtube.com/...'
                          facebook:
                            type: string
                            example: 'https://facebook.com/...'
                      avatarUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      bannerUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      videoUrl:
                        type: string
                        example: 'https://www.youtube.com/watch?v=...'
                      membersCount:
                        type: integer
                        example: 10
                      ownerNickname:
                        type: string
                        example: excalibur71
                      walletId:
                        type: string
                        description: "Hub's wallet uuid"
                        example: uuid
                      walletBalanceAmount:
                        type: array
                        items:
                          properties:
                            amount:
                              type: integer
                              example: 100
                            currency:
                              type: string
                              example: R2C
                      isJoined:
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        description: 'The date is provided in UTC timezone.'
                        format: date-time
                      contactUrl:
                        type: string
                        example: 'https://esaesports.com/contact'
                      isAdmin:
                        type: boolean
                        example: true
      security:
        -
          bearerAuth: []
  /hubs/my-hubs/list:
    get:
      tags:
        - Hub
      description: 'My hubs'
      operationId: listMyHubs
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Hub list for the user'
          content:
            application/json:
              schema:
                allOf:
                  -
                    properties:
                      page:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 10
                      pageSize:
                        type: integer
                        example: 100
                  -
                    type: object
                    properties:
                      hubs:
                        type: array
                        items:
                          required:
                            - id
                            - name
                            - slug
                            - category
                          type: object
                          properties:
                            id:
                              type: string
                              description: "The hub's uuid"
                              example: 00000000-0000-0000-0000-000000000000
                            name:
                              type: string
                              example: 'Esa Esports'
                            slug:
                              type: string
                              example: esa-esports
                            category:
                              enum:
                                - brand
                                - organization
                              type: string
                              example: brand
                            description:
                              type: string
                              example: 'Esa Esports is a gaming platform'
                            games:
                              type: array
                              items:
                                type: string
                                description: "The game's slug"
                                example: csgo
                            socials:
                              type: object
                              properties:
                                instagram:
                                  type: string
                                  example: 'https://instagram.com/...'
                                twitter:
                                  type: string
                                  example: 'https://x.com/...'
                                twitch:
                                  type: string
                                  example: 'https://twitch.tv/...'
                                discord:
                                  type: string
                                  example: 'https://discord.gg/...'
                                youtube:
                                  type: string
                                  example: 'https://youtube.com/...'
                                facebook:
                                  type: string
                                  example: 'https://facebook.com/...'
                            avatarUrl:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                            bannerUrl:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                            videoUrl:
                              type: string
                              example: 'https://www.youtube.com/watch?v=...'
                            membersCount:
                              type: integer
                              example: 10
                            ownerNickname:
                              type: string
                              example: excalibur71
                            walletId:
                              type: string
                              description: "Hub's wallet uuid"
                              example: uuid
                            walletBalanceAmount:
                              type: array
                              items:
                                properties:
                                  amount:
                                    type: integer
                                    example: 100
                                  currency:
                                    type: string
                                    example: R2C
                            isJoined:
                              type: boolean
                              example: true
                            ownerId:
                              type: string
                              description: "Hub's owner uuid"
                              example: uuid
      security:
        -
          bearerAuth: []
  /hubs/my-admin-hubs/list:
    get:
      tags:
        - Hub
      description: 'List my admin hubs'
      operationId: listMyAdminHubs
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Hub list for the user'
          content:
            application/json:
              schema:
                allOf:
                  -
                    properties:
                      page:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 10
                      pageSize:
                        type: integer
                        example: 100
                  -
                    type: object
                    properties:
                      hubs:
                        type: array
                        items:
                          required:
                            - id
                            - name
                            - slug
                            - category
                          type: object
                          properties:
                            id:
                              type: string
                              description: "The hub's uuid"
                              example: 00000000-0000-0000-0000-000000000000
                            name:
                              type: string
                              example: 'Esa Esports'
                            slug:
                              type: string
                              example: esa-esports
                            category:
                              enum:
                                - brand
                                - organization
                              type: string
                              example: brand
                            description:
                              type: string
                              example: 'Esa Esports is a gaming platform'
                            games:
                              type: array
                              items:
                                type: string
                                description: "The game's slug"
                                example: csgo
                            membersCount:
                              type: integer
                              example: 10
                            ownerNickname:
                              type: string
                              example: excalibur71
                            ownerId:
                              type: string
                              description: "Hub's owner uuid"
                              example: uuid
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/home':
    get:
      tags:
        - Hub
      description: 'Hub home page'
      operationId: getHubHome
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Hub home page details'
          content:
            application/json:
              schema:
                type: object
                properties:
                  hub:
                    required:
                      - id
                      - name
                      - slug
                      - category
                    type: object
                    properties:
                      id:
                        type: string
                        description: "The hub's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: 'Esa Esports'
                      slug:
                        type: string
                        example: esa-esports
                      category:
                        enum:
                          - brand
                          - organization
                        type: string
                        example: brand
                      description:
                        type: string
                        example: 'Esa Esports is a gaming platform'
                      games:
                        type: array
                        items:
                          type: string
                          description: "The game's slug"
                          example: csgo
                      socials:
                        type: object
                        properties:
                          instagram:
                            type: string
                            example: 'https://instagram.com/...'
                          twitter:
                            type: string
                            example: 'https://x.com/...'
                          twitch:
                            type: string
                            example: 'https://twitch.tv/...'
                          discord:
                            type: string
                            example: 'https://discord.gg/...'
                          youtube:
                            type: string
                            example: 'https://youtube.com/...'
                          facebook:
                            type: string
                            example: 'https://facebook.com/...'
                      avatarUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      bannerUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      videoUrl:
                        type: string
                        example: 'https://www.youtube.com/watch?v=...'
                      membersCount:
                        type: integer
                        example: 10
                      ownerNickname:
                        type: string
                        example: excalibur71
                      walletId:
                        type: string
                        description: "Hub's wallet uuid"
                        example: uuid
                      walletBalanceAmount:
                        type: array
                        items:
                          properties:
                            amount:
                              type: integer
                              example: 100
                            currency:
                              type: string
                              example: R2C
                      isJoined:
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        description: 'The date is provided in UTC timezone.'
                        format: date-time
                      contactUrl:
                        type: string
                        example: 'https://esaesports.com/contact'
                      isAdmin:
                        type: boolean
                        example: true
                  advertisements:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: uuid
                        advertisementType:
                          enum:
                            - banner
                          type: string
                          example: banner
                        url:
                          type: string
                          format: uri
                          nullable: true
                        desktopImageUrl:
                          type: string
                          format: uri
                        mobileImageUrl:
                          type: string
                          format: uri
                          nullable: true
                        createdAt:
                          type: string
                          format: date-time
                          example: '2024-11-20 08:00:00'
                        updatedAt:
                          type: string
                          format: date-time
                          example: '2024-11-20 08:00:00'
                  highlightedLiveStream:
                    required:
                      - id
                      - title
                      - url
                      - platform
                    type: object
                    properties:
                      id:
                        type: string
                        description: "The stream's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      title:
                        type: string
                      url:
                        type: string
                      thumbnailUrl:
                        type: string
                      platform:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 00000000-0000-0000-0000-000000000000
                          name:
                            type: string
                            example: Twitch
                          imageUrl:
                            type: string
                            nullable: true
                            example: 'https://cdn.ready2.gg/...'
                      relatedItem:
                        type: object
                        anyOf:
                          -
                            title: Tournament
                            type: object
                            properties:
                              uuid:
                                type: string
                                format: uuid
                              slug:
                                type: string
                              tournamentName:
                                type: string
                              gameSlug:
                                type: string
                            description: 'Tournament related to the live stream'
                        description: 'May be null if the stream is not related to any item'
                        nullable: true
                      isLive:
                        type: boolean
                      isHighlighted:
                        type: boolean
                      lastCheckedAt:
                        type: object
                        properties:
                          timezone:
                            type: string
                            description: 'Default timezone is UTC'
                            example: UTC
                          date:
                            type: string
                            example: 1686218400
                      channelInfo:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Ready2GG
                          thumbnailUrl:
                            type: string
                            example: 'https://cdn.ready2.gg/...'
                          lastCheckedAt:
                            type: object
                            properties:
                              timezone:
                                type: string
                                description: 'Default timezone is UTC'
                                example: UTC
                              date:
                                type: string
                                example: 1686218400
                        nullable: true
                  latestTournaments:
                    type: array
                    items:
                      properties:
                        uuid:
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        name:
                          type: string
                          example: 'The Last Man Standing Challenge'
                        slug:
                          type: string
                          example: the-last-man-standing-challenge
                        startDate:
                          type: object
                          properties:
                            timezone:
                              type: string
                              example: Europe/Istanbul
                            date:
                              type: string
                              example: 1686218400
                        logoUrl:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        bannerUrl:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        thumbnailUrl:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        game:
                          type: object
                          properties:
                            slug:
                              type: string
                              example: csgo
                            logo:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                        versus:
                          type: string
                          example: 1v1
                        slots:
                          type: integer
                          example: 10
                        slotsLeft:
                          type: integer
                          example: 10
                        prize:
                          type: object
                          properties:
                            currency:
                              type: string
                              example: $
                            total:
                              type: integer
                              example: 1000
                        entranceFee:
                          type: integer
                          example: 100
                        joinType:
                          enum:
                            - open-for-all
                            - link-only
                            - invite-only
                          type: string
                        status:
                          enum:
                            - notStarted
                            - applicationOpen
                            - applicationClosed
                            - checkIn
                            - subCheckIn
                            - checkInClosed
                            - seeding
                            - stage
                            - tournamentStarted
                            - ongoing
                            - finished
                          type: string
                        liveStreamCount:
                          type: integer
                          example: 2
                        isLive:
                          type: boolean
                          example: true
                  latestLiveStreams:
                    type: array
                    items:
                      required:
                        - id
                        - title
                        - url
                        - platform
                      type: object
                      properties:
                        id:
                          type: string
                          description: "The stream's uuid"
                          example: 00000000-0000-0000-0000-000000000000
                        title:
                          type: string
                        url:
                          type: string
                        thumbnailUrl:
                          type: string
                        platform:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 00000000-0000-0000-0000-000000000000
                            name:
                              type: string
                              example: Twitch
                            imageUrl:
                              type: string
                              nullable: true
                              example: 'https://cdn.ready2.gg/...'
                        relatedItem:
                          type: object
                          anyOf:
                            -
                              title: Tournament
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  format: uuid
                                slug:
                                  type: string
                                tournamentName:
                                  type: string
                                gameSlug:
                                  type: string
                              description: 'Tournament related to the live stream'
                          description: 'May be null if the stream is not related to any item'
                          nullable: true
                        isLive:
                          type: boolean
                        isHighlighted:
                          type: boolean
                        lastCheckedAt:
                          type: object
                          properties:
                            timezone:
                              type: string
                              description: 'Default timezone is UTC'
                              example: UTC
                            date:
                              type: string
                              example: 1686218400
                        channelInfo:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Ready2GG
                            thumbnailUrl:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                            lastCheckedAt:
                              type: object
                              properties:
                                timezone:
                                  type: string
                                  description: 'Default timezone is UTC'
                                  example: UTC
                                date:
                                  type: string
                                  example: 1686218400
                          nullable: true
                  posts:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                          description: "The post's uuid"
                          example: 00000000-0000-0000-0000-000000000000
                        body:
                          type: string
                          example: 'Hello this is my first post'
                        image:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        createdAt:
                          type: string
                          description: 'The date and time when the post was created, in UTC timezone'
                          example: 1686218400
                        updatedAt:
                          type: string
                          description: 'The date and time when the post was last updated, in UTC timezone'
                          example: 1686218400
                        relatedType:
                          enum:
                            - tournament
                          type: string
                          description: 'The type of the related entity (e.g., tournament, game, etc.)'
                          nullable: true
                          example: tournament
                        relatedData:
                          anyOf:
                            -
                              title: Tournament
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'UUID of the related entity'
                                  example: 0191b18b-42d9-738e-9aa2-2328bc4402c1
                                name:
                                  type: string
                                  description: 'The name of the related entity'
                                  example: 'Valorant tournament'
                                slug:
                                  type: string
                                  description: 'Slug for the related entity, typically used in URLs'
                                  example: valorant-tournament-3
                                imageUrl:
                                  type: string
                                  description: 'Image URL of the related entity'
                                  nullable: true
                                  example: 'https://test.cdn.ready2.gg/...'
                                timezone:
                                  type: string
                                  description: 'Timezone of the related tournament'
                                  example: UTC
                                startDate:
                                  type: string
                                  description: 'Start date and time of the related tournament'
                                  example: 1725274979
                                slots:
                                  type: integer
                                  description: 'Number of slots in the related tournament'
                                  example: 128
                                versus:
                                  type: integer
                                  description: 'Type of versus (1 for solo, 2 for team, etc.)'
                                  example: 1
                                game:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      description: 'The name of the game associated with the tournament'
                                      example: VALORANT
                                    slug:
                                      type: string
                                      description: 'Slug for the game, typically used in URLs'
                                      example: valorant
                                    imageUrl:
                                      type: string
                                      description: 'Image URL of the game associated with the tournament'
                                      nullable: true
                                      example: 'https://test.cdn.ready2.gg/...'
                                prize:
                                  type: object
                                  properties:
                                    amount:
                                      type: number
                                      description: 'Prize amount for the tournament'
                                      nullable: true
                                      example: 1000
                                    currency:
                                      type: string
                                      description: 'Currency of the prize amount'
                                      nullable: true
                                      example: USD
                          nullable: true
                        likesCount:
                          type: integer
                          example: 10
                        isLiked:
                          type: boolean
                          example: true
                        comments:
                          type: array
                          items:
                            '0':
                              properties:
                                id:
                                  type: string
                                  example: 00000000-0000-0000-0000-000000000000
                                  description: "The comment's uuid"
                                body:
                                  type: string
                                  example: 'Hello this is my first comment'
                                image:
                                  nullable: true
                                  type: string
                                  example: 'https://cdn.ready2.gg/...'
                                commentOwner:
                                  $ref: 'file:///Users/meliksahbirgul/Projects/ESA/ready2/api-repo/docs/api-docs/public-api/hub/components.yaml#/components/schemas/CommentOwner'
                                createdAt:
                                  type: string
                                  example: 1686218400
                                updatedAt:
                                  type: string
                                  example: 1686218400
                                likesCount:
                                  type: integer
                                  example: 10
                                isLiked:
                                  type: boolean
                                  example: true
                                comments:
                                  type: array
                                  items:
                                    -
                                      $ref: 'file:///Users/meliksahbirgul/Projects/ESA/ready2/api-repo/docs/api-docs/public-api/hub/components.yaml#/components/schemas/Comment'
      security:
        - {  }
        -
          bearerAuth: []
  '/hubs/{hubId}/tournaments':
    get:
      tags:
        - Hub
      description: 'Hub tournaments page'
      operationId: getHubTournaments
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: gameSlug
          in: query
          description: "The game's slug"
          required: false
          schema:
            type: string
        -
          name: tournamentStatus
          in: query
          description: 'The status of the tournament'
          required: false
          schema:
            enum:
              - all
              - upcoming
              - ongoing
              - past
            type: string
      responses:
        '200':
          description: 'Hub tournaments'
          content:
            application/json:
              schema:
                properties:
                  hub:
                    required:
                      - id
                      - name
                      - slug
                      - category
                    type: object
                    properties:
                      id:
                        type: string
                        description: "The hub's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: 'Esa Esports'
                      slug:
                        type: string
                        example: esa-esports
                      category:
                        enum:
                          - brand
                          - organization
                        type: string
                        example: brand
                      description:
                        type: string
                        example: 'Esa Esports is a gaming platform'
                      games:
                        type: array
                        items:
                          type: string
                          description: "The game's slug"
                          example: csgo
                      socials:
                        type: object
                        properties:
                          instagram:
                            type: string
                            example: 'https://instagram.com/...'
                          twitter:
                            type: string
                            example: 'https://x.com/...'
                          twitch:
                            type: string
                            example: 'https://twitch.tv/...'
                          discord:
                            type: string
                            example: 'https://discord.gg/...'
                          youtube:
                            type: string
                            example: 'https://youtube.com/...'
                          facebook:
                            type: string
                            example: 'https://facebook.com/...'
                      avatarUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      bannerUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      videoUrl:
                        type: string
                        example: 'https://www.youtube.com/watch?v=...'
                      membersCount:
                        type: integer
                        example: 10
                      ownerNickname:
                        type: string
                        example: excalibur71
                      walletId:
                        type: string
                        description: "Hub's wallet uuid"
                        example: uuid
                      walletBalanceAmount:
                        type: array
                        items:
                          properties:
                            amount:
                              type: integer
                              example: 100
                            currency:
                              type: string
                              example: R2C
                      isJoined:
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        description: 'The date is provided in UTC timezone.'
                        format: date-time
                      contactUrl:
                        type: string
                        example: 'https://esaesports.com/contact'
                      isAdmin:
                        type: boolean
                        example: true
                  tournaments:
                    type: array
                    items:
                      properties:
                        uuid:
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        name:
                          type: string
                          example: 'The Last Man Standing Challenge'
                        slug:
                          type: string
                          example: the-last-man-standing-challenge
                        startDate:
                          type: object
                          properties:
                            timezone:
                              type: string
                              example: Europe/Istanbul
                            date:
                              type: string
                              example: 1686218400
                        logoUrl:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        bannerUrl:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        thumbnailUrl:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        game:
                          type: object
                          properties:
                            slug:
                              type: string
                              example: csgo
                            logo:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                        versus:
                          type: string
                          example: 1v1
                        slots:
                          type: integer
                          example: 10
                        slotsLeft:
                          type: integer
                          example: 10
                        prize:
                          type: object
                          properties:
                            currency:
                              type: string
                              example: $
                            total:
                              type: integer
                              example: 1000
                        entranceFee:
                          type: integer
                          example: 100
                        joinType:
                          enum:
                            - open-for-all
                            - link-only
                            - invite-only
                          type: string
                        status:
                          enum:
                            - notStarted
                            - applicationOpen
                            - applicationClosed
                            - checkIn
                            - subCheckIn
                            - checkInClosed
                            - seeding
                            - stage
                            - tournamentStarted
                            - ongoing
                            - finished
                          type: string
                        liveStreamCount:
                          type: integer
                          example: 2
                        isLive:
                          type: boolean
                          example: true
                  total:
                    type: integer
                    description: 'Total tournament records by parameters'
                    example: 200
                  listTournaments:
                    type: object
                    properties:
                      featuredTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      allTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      popularTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                          page:
                            type: integer
                          pageSize:
                            type: integer
                          totalPage:
                            type: integer
      security:
        - {  }
        -
          bearerAuth: []
  '/hubs/{hubId}/members':
    get:
      tags:
        - Hub
      description: 'Get hub members'
      operationId: getHubMembers
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: search
          in: query
          description: 'The search query'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Hub members'
          content:
            application/json:
              schema:
                allOf:
                  -
                    properties:
                      page:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 10
                      pageSize:
                        type: integer
                        example: 100
                  -
                    type: object
                    properties:
                      filter:
                        type: object
                        properties:
                          page:
                            type: integer
                            description: 'Current page'
                            example: 1
                          total:
                            type: integer
                            description: 'Total number of results'
                            example: 1
                          pageSize:
                            type: integer
                            description: 'Number of results per page'
                            example: 50
                          search:
                            type: string
                            description: 'Search query'
                            example: john
                      hub:
                        required:
                          - id
                          - name
                          - slug
                          - category
                        type: object
                        properties:
                          id:
                            type: string
                            description: "The hub's uuid"
                            example: 00000000-0000-0000-0000-000000000000
                          name:
                            type: string
                            example: 'Esa Esports'
                          slug:
                            type: string
                            example: esa-esports
                          category:
                            enum:
                              - brand
                              - organization
                            type: string
                            example: brand
                          description:
                            type: string
                            example: 'Esa Esports is a gaming platform'
                          games:
                            type: array
                            items:
                              type: string
                              description: "The game's slug"
                              example: csgo
                          socials:
                            type: object
                            properties:
                              instagram:
                                type: string
                                example: 'https://instagram.com/...'
                              twitter:
                                type: string
                                example: 'https://x.com/...'
                              twitch:
                                type: string
                                example: 'https://twitch.tv/...'
                              discord:
                                type: string
                                example: 'https://discord.gg/...'
                              youtube:
                                type: string
                                example: 'https://youtube.com/...'
                              facebook:
                                type: string
                                example: 'https://facebook.com/...'
                          avatarUrl:
                            type: string
                            example: 'https://cdn.ready2.gg/...'
                          bannerUrl:
                            type: string
                            example: 'https://cdn.ready2.gg/...'
                          videoUrl:
                            type: string
                            example: 'https://www.youtube.com/watch?v=...'
                          membersCount:
                            type: integer
                            example: 10
                          ownerNickname:
                            type: string
                            example: excalibur71
                          walletId:
                            type: string
                            description: "Hub's wallet uuid"
                            example: uuid
                          walletBalanceAmount:
                            type: array
                            items:
                              properties:
                                amount:
                                  type: integer
                                  example: 100
                                currency:
                                  type: string
                                  example: R2C
                          isJoined:
                            type: boolean
                            example: true
                          createdAt:
                            type: string
                            description: 'The date is provided in UTC timezone.'
                            format: date-time
                          contactUrl:
                            type: string
                            example: 'https://esaesports.com/contact'
                          isAdmin:
                            type: boolean
                            example: true
                      members:
                        type: array
                        items:
                          properties:
                            uuid:
                              type: string
                              description: "The member's uuid"
                              example: 00000000-0000-0000-0000-000000000000
                            nickname:
                              type: string
                              example: excalibur71
                            nicknameHash:
                              type: integer
                              example: 10
                            avatar:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                            joinedAt:
                              type: string
                              example: 1686218400
                            isAdmin:
                              type: boolean
                              example: true
                            role:
                              enum:
                                - 'owner - admin - member'
                              type: string
                              example: admin
                            isBlocked:
                              type: boolean
                              example: true
                            integration:
                              anyOf:
                                -
                                  type: object
                                  properties:
                                    fut:
                                      properties:
                                        membershipType:
                                          enum:
                                            - 'FUT Basic'
                                            - 'FUT Monthly Pass'
                                            - 'FUT Season Pass'
                                          type: string
                                        membershipTypeId:
                                          enum:
                                            - 1
                                            - 2
                                            - 3
                                          type: integer
                                          description: 'The membership type ID for FUT integration. 1 for FUT Season Pass, 2 for FUT Monthly Pass, and 3 for FUT Basic.'
                              nullable: true
      security:
        - {  }
        -
          bearerAuth: []
  '/hubs/{hubId}/about':
    get:
      tags:
        - Hub
      description: 'Get hub about'
      operationId: getHubAbout
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Hub about'
          content:
            application/json:
              schema:
                allOf:
                  -
                    properties:
                      page:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 10
                      pageSize:
                        type: integer
                        example: 100
                  -
                    type: object
                    properties:
                      hub:
                        required:
                          - id
                          - name
                          - slug
                          - category
                        type: object
                        properties:
                          id:
                            type: string
                            description: "The hub's uuid"
                            example: 00000000-0000-0000-0000-000000000000
                          name:
                            type: string
                            example: 'Esa Esports'
                          slug:
                            type: string
                            example: esa-esports
                          category:
                            enum:
                              - brand
                              - organization
                            type: string
                            example: brand
                          description:
                            type: string
                            example: 'Esa Esports is a gaming platform'
                          games:
                            type: array
                            items:
                              type: string
                              description: "The game's slug"
                              example: csgo
                          socials:
                            type: object
                            properties:
                              instagram:
                                type: string
                                example: 'https://instagram.com/...'
                              twitter:
                                type: string
                                example: 'https://x.com/...'
                              twitch:
                                type: string
                                example: 'https://twitch.tv/...'
                              discord:
                                type: string
                                example: 'https://discord.gg/...'
                              youtube:
                                type: string
                                example: 'https://youtube.com/...'
                              facebook:
                                type: string
                                example: 'https://facebook.com/...'
                          avatarUrl:
                            type: string
                            example: 'https://cdn.ready2.gg/...'
                          bannerUrl:
                            type: string
                            example: 'https://cdn.ready2.gg/...'
                          videoUrl:
                            type: string
                            example: 'https://www.youtube.com/watch?v=...'
                          membersCount:
                            type: integer
                            example: 10
                          ownerNickname:
                            type: string
                            example: excalibur71
                          walletId:
                            type: string
                            description: "Hub's wallet uuid"
                            example: uuid
                          walletBalanceAmount:
                            type: array
                            items:
                              properties:
                                amount:
                                  type: integer
                                  example: 100
                                currency:
                                  type: string
                                  example: R2C
                          isJoined:
                            type: boolean
                            example: true
                          createdAt:
                            type: string
                            description: 'The date is provided in UTC timezone.'
                            format: date-time
                          contactUrl:
                            type: string
                            example: 'https://esaesports.com/contact'
                          isAdmin:
                            type: boolean
                            example: true
                      hubAdmins:
                        type: array
                        items:
                          properties:
                            nickname:
                              type: string
                            nicknameHash:
                              type: integer
                            avatar:
                              type: string
                              nullable: true
                            role:
                              enum:
                                - owner
                                - admin
                              type: string
                      members:
                        type: array
                        items:
                          properties:
                            uuid:
                              type: string
                              description: "The member's uuid"
                              example: 00000000-0000-0000-0000-000000000000
                            nickname:
                              type: string
                              example: excalibur71
                            nicknameHash:
                              type: integer
                              example: 10
                            avatar:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                            joinedAt:
                              type: string
                              example: 1686218400
                            isAdmin:
                              type: boolean
                              example: true
                            role:
                              enum:
                                - 'owner - admin - member'
                              type: string
                              example: admin
                            isBlocked:
                              type: boolean
                              example: true
                            integration:
                              anyOf:
                                -
                                  type: object
                                  properties:
                                    fut:
                                      properties:
                                        membershipType:
                                          enum:
                                            - 'FUT Basic'
                                            - 'FUT Monthly Pass'
                                            - 'FUT Season Pass'
                                          type: string
                                        membershipTypeId:
                                          enum:
                                            - 1
                                            - 2
                                            - 3
                                          type: integer
                                          description: 'The membership type ID for FUT integration. 1 for FUT Season Pass, 2 for FUT Monthly Pass, and 3 for FUT Basic.'
                              nullable: true
      security:
        - {  }
        -
          bearerAuth: []
  '/hubs/{hubId}/join':
    post:
      tags:
        - Hub
      description: 'Join hub'
      operationId: joinHub
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Hub joined'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/leave':
    post:
      tags:
        - Hub
      description: 'Leave hub'
      operationId: leaveHub
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'You left the hub'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/kick':
    put:
      tags:
        - Hub
      description: 'Kick a member from the hub'
      operationId: hubKickMember
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - memberNickname
              type: object
              properties:
                memberNickname:
                  type: string
                  example: excalibur71
        required: true
      responses:
        '204':
          description: 'You have successfully kicked the member from the hub'
        '422':
          description: null
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/change-member-role':
    patch:
      tags:
        - Hub
      description: 'Change member role'
      operationId: changeMemberRole
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - role
                - memberNickname
              type: object
              properties:
                memberNickname:
                  type: string
                  example: excalibur71
                role:
                  enum:
                    - admin
                    - member
                  type: string
                  example: admin
        required: true
      responses:
        '204':
          description: 'Member role changed'
      security:
        -
          bearerAuth: []
  /hubs/image:
    post:
      tags:
        - Hub
      description: 'Upload a new hub image'
      operationId: uploadHubImage
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
                  description: 'Maximum file size is 4096KB'
                  format: binary
        required: true
      responses:
        '201':
          description: 'Hub image uploaded'
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    required:
                      - id
                      - fileName
                      - url
                    type: object
                    properties:
                      id:
                        type: string
                        description: "The hub image's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      fileName:
                        type: string
                        example: esa-esports.png
                      url:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                description: 'Bad Request'
                content:
                  application/problem+json:
                    schema:
                      type: object
                      properties:
                        type:
                          type: string
                          format: uri
                          description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                          default: 'about:blank'
                          example: 'https://zalando.github.io/problem/constraint-violation'
                        code:
                          type: string
                          description: "Unique string value within the project that can be used to issue's id\n"
                          example: identity-and-access/forbidden
                        title:
                          type: string
                          description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                        status:
                          type: integer
                          format: int32
                          description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                          minimum: 100
                          maximum: 600
                          exclusiveMaximum: true
                          example: 503
                        detail:
                          type: string
                          description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                          example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/feed':
    get:
      tags:
        - Hub
      description: 'Post list for a hub feed'
      operationId: listHubPosts
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Posts list'
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  total:
                    type: integer
                    example: 10
                  pageSize:
                    type: integer
                    example: 100
                  hub:
                    required:
                      - id
                      - name
                      - slug
                      - category
                    type: object
                    properties:
                      id:
                        type: string
                        description: "The hub's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: 'Esa Esports'
                      slug:
                        type: string
                        example: esa-esports
                      category:
                        enum:
                          - brand
                          - organization
                        type: string
                        example: brand
                      description:
                        type: string
                        example: 'Esa Esports is a gaming platform'
                      games:
                        type: array
                        items:
                          type: string
                          description: "The game's slug"
                          example: csgo
                      socials:
                        type: object
                        properties:
                          instagram:
                            type: string
                            example: 'https://instagram.com/...'
                          twitter:
                            type: string
                            example: 'https://x.com/...'
                          twitch:
                            type: string
                            example: 'https://twitch.tv/...'
                          discord:
                            type: string
                            example: 'https://discord.gg/...'
                          youtube:
                            type: string
                            example: 'https://youtube.com/...'
                          facebook:
                            type: string
                            example: 'https://facebook.com/...'
                      avatarUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      bannerUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      videoUrl:
                        type: string
                        example: 'https://www.youtube.com/watch?v=...'
                      membersCount:
                        type: integer
                        example: 10
                      ownerNickname:
                        type: string
                        example: excalibur71
                      walletId:
                        type: string
                        description: "Hub's wallet uuid"
                        example: uuid
                      walletBalanceAmount:
                        type: array
                        items:
                          properties:
                            amount:
                              type: integer
                              example: 100
                            currency:
                              type: string
                              example: R2C
                      isJoined:
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        description: 'The date is provided in UTC timezone.'
                        format: date-time
                      contactUrl:
                        type: string
                        example: 'https://esaesports.com/contact'
                      isAdmin:
                        type: boolean
                        example: true
                  posts:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                          description: "The post's uuid"
                          example: 00000000-0000-0000-0000-000000000000
                        body:
                          type: string
                          example: 'Hello this is my first post'
                        image:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        createdAt:
                          type: string
                          description: 'The date and time when the post was created, in UTC timezone'
                          example: 1686218400
                        updatedAt:
                          type: string
                          description: 'The date and time when the post was last updated, in UTC timezone'
                          example: 1686218400
                        relatedType:
                          enum:
                            - tournament
                          type: string
                          description: 'The type of the related entity (e.g., tournament, game, etc.)'
                          nullable: true
                          example: tournament
                        relatedData:
                          anyOf:
                            -
                              title: Tournament
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'UUID of the related entity'
                                  example: 0191b18b-42d9-738e-9aa2-2328bc4402c1
                                name:
                                  type: string
                                  description: 'The name of the related entity'
                                  example: 'Valorant tournament'
                                slug:
                                  type: string
                                  description: 'Slug for the related entity, typically used in URLs'
                                  example: valorant-tournament-3
                                imageUrl:
                                  type: string
                                  description: 'Image URL of the related entity'
                                  nullable: true
                                  example: 'https://test.cdn.ready2.gg/...'
                                timezone:
                                  type: string
                                  description: 'Timezone of the related tournament'
                                  example: UTC
                                startDate:
                                  type: string
                                  description: 'Start date and time of the related tournament'
                                  example: 1725274979
                                slots:
                                  type: integer
                                  description: 'Number of slots in the related tournament'
                                  example: 128
                                versus:
                                  type: integer
                                  description: 'Type of versus (1 for solo, 2 for team, etc.)'
                                  example: 1
                                game:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                      description: 'The name of the game associated with the tournament'
                                      example: VALORANT
                                    slug:
                                      type: string
                                      description: 'Slug for the game, typically used in URLs'
                                      example: valorant
                                    imageUrl:
                                      type: string
                                      description: 'Image URL of the game associated with the tournament'
                                      nullable: true
                                      example: 'https://test.cdn.ready2.gg/...'
                                prize:
                                  type: object
                                  properties:
                                    amount:
                                      type: number
                                      description: 'Prize amount for the tournament'
                                      nullable: true
                                      example: 1000
                                    currency:
                                      type: string
                                      description: 'Currency of the prize amount'
                                      nullable: true
                                      example: USD
                          nullable: true
                        likesCount:
                          type: integer
                          example: 10
                        isLiked:
                          type: boolean
                          example: true
                        comments:
                          type: array
                          items:
                            '0':
                              properties:
                                id:
                                  type: string
                                  example: 00000000-0000-0000-0000-000000000000
                                  description: "The comment's uuid"
                                body:
                                  type: string
                                  example: 'Hello this is my first comment'
                                image:
                                  nullable: true
                                  type: string
                                  example: 'https://cdn.ready2.gg/...'
                                commentOwner:
                                  $ref: 'file:///Users/meliksahbirgul/Projects/ESA/ready2/api-repo/docs/api-docs/public-api/hub/components.yaml#/components/schemas/CommentOwner'
                                createdAt:
                                  type: string
                                  example: 1686218400
                                updatedAt:
                                  type: string
                                  example: 1686218400
                                likesCount:
                                  type: integer
                                  example: 10
                                isLiked:
                                  type: boolean
                                  example: true
                                comments:
                                  type: array
                                  items:
                                    -
                                      $ref: 'file:///Users/meliksahbirgul/Projects/ESA/ready2/api-repo/docs/api-docs/public-api/hub/components.yaml#/components/schemas/Comment'
      security:
        - {  }
        -
          bearerAuth: []
    post:
      tags:
        - Hub
      description: 'Create a post in a hub feed'
      operationId: createHubPost
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - body
              type: object
              properties:
                body:
                  type: string
                  example: 'Hello this is my first post'
                imageId:
                  type: string
                  description: "The image's uuid"
                  example: uuid
        required: true
      responses:
        '201':
          description: 'Hub post created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    properties:
                      id:
                        type: string
                        description: "The post's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      body:
                        type: string
                        example: 'Hello this is my first post'
                      image:
                        type: string
                        nullable: true
                        example: 'https://cdn.ready2.gg/...'
                      createdAt:
                        type: string
                        description: 'The date and time when the post was created, in UTC timezone'
                        example: 1686218400
                      updatedAt:
                        type: string
                        description: 'The date and time when the post was last updated, in UTC timezone'
                        example: 1686218400
                      relatedType:
                        enum:
                          - tournament
                        type: string
                        description: 'The type of the related entity (e.g., tournament, game, etc.)'
                        nullable: true
                        example: tournament
                      relatedData:
                        anyOf:
                          -
                            title: Tournament
                            type: object
                            properties:
                              uuid:
                                type: string
                                description: 'UUID of the related entity'
                                example: 0191b18b-42d9-738e-9aa2-2328bc4402c1
                              name:
                                type: string
                                description: 'The name of the related entity'
                                example: 'Valorant tournament'
                              slug:
                                type: string
                                description: 'Slug for the related entity, typically used in URLs'
                                example: valorant-tournament-3
                              imageUrl:
                                type: string
                                description: 'Image URL of the related entity'
                                nullable: true
                                example: 'https://test.cdn.ready2.gg/...'
                              timezone:
                                type: string
                                description: 'Timezone of the related tournament'
                                example: UTC
                              startDate:
                                type: string
                                description: 'Start date and time of the related tournament'
                                example: 1725274979
                              slots:
                                type: integer
                                description: 'Number of slots in the related tournament'
                                example: 128
                              versus:
                                type: integer
                                description: 'Type of versus (1 for solo, 2 for team, etc.)'
                                example: 1
                              game:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: 'The name of the game associated with the tournament'
                                    example: VALORANT
                                  slug:
                                    type: string
                                    description: 'Slug for the game, typically used in URLs'
                                    example: valorant
                                  imageUrl:
                                    type: string
                                    description: 'Image URL of the game associated with the tournament'
                                    nullable: true
                                    example: 'https://test.cdn.ready2.gg/...'
                              prize:
                                type: object
                                properties:
                                  amount:
                                    type: number
                                    description: 'Prize amount for the tournament'
                                    nullable: true
                                    example: 1000
                                  currency:
                                    type: string
                                    description: 'Currency of the prize amount'
                                    nullable: true
                                    example: USD
                        nullable: true
                      likesCount:
                        type: integer
                        example: 10
                      isLiked:
                        type: boolean
                        example: true
                      comments:
                        type: array
                        items:
                          '0':
                            properties:
                              id:
                                type: string
                                example: 00000000-0000-0000-0000-000000000000
                                description: "The comment's uuid"
                              body:
                                type: string
                                example: 'Hello this is my first comment'
                              image:
                                nullable: true
                                type: string
                                example: 'https://cdn.ready2.gg/...'
                              commentOwner:
                                $ref: 'file:///Users/meliksahbirgul/Projects/ESA/ready2/api-repo/docs/api-docs/public-api/hub/components.yaml#/components/schemas/CommentOwner'
                              createdAt:
                                type: string
                                example: 1686218400
                              updatedAt:
                                type: string
                                example: 1686218400
                              likesCount:
                                type: integer
                                example: 10
                              isLiked:
                                type: boolean
                                example: true
                              comments:
                                type: array
                                items:
                                  -
                                    $ref: 'file:///Users/meliksahbirgul/Projects/ESA/ready2/api-repo/docs/api-docs/public-api/hub/components.yaml#/components/schemas/Comment'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/feed/{postId}':
    delete:
      tags:
        - Hub
      description: 'Delete a post'
      operationId: deleteHubPost
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: postId
          in: path
          description: "The post's uuid"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Post deleted'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Hub
      description: 'Change post in hub feed'
      operationId: changeHubPost
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: postId
          in: path
          description: "The post's uuid"
          required: true
          schema:
            type: string
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - body
              type: object
              properties:
                body:
                  type: string
                  example: 'Hello this is my changed post'
                imageId:
                  type: string
                  description: "The image's uuid"
                  example: uuid
        required: true
      responses:
        '204':
          description: 'Post changed'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/feed/comment':
    post:
      tags:
        - Hub
      description: 'Create a new comment on a post or another comment'
      operationId: createComment
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - body
                - parentType
                - parentId
              type: object
              properties:
                body:
                  type: string
                  example: 'Hello this is my first comment'
                imageId:
                  type: string
                  description: "The image's uuid"
                  example: uuid
                parentType:
                  enum:
                    - post
                    - comment
                  type: string
                  example: post
                parentId:
                  type: string
                  description: "The parent's uuid"
                  example: uuid
        required: true
      responses:
        '201':
          description: 'Comment created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment:
                    properties:
                      id:
                        type: string
                        description: "The comment's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      body:
                        type: string
                        example: 'Hello this is my first comment'
                      image:
                        type: string
                        nullable: true
                        example: 'https://cdn.ready2.gg/...'
                      commentOwner:
                        properties:
                          uuid:
                            type: string
                            description: "The comment owner's uuid"
                            example: 00000000-0000-0000-0000-000000000000
                          firstName:
                            type: string
                            example: John
                          lastName:
                            type: string
                            example: Doe
                          nickname:
                            type: string
                            example: excalibur71
                          avatar:
                            type: string
                            example: 'https://cdn.ready2.gg/...'
                      createdAt:
                        type: string
                        example: 1686218400
                      updatedAt:
                        type: string
                        example: 1686218400
                      likesCount:
                        type: integer
                        example: 10
                      isLiked:
                        type: boolean
                        example: true
                      comments:
                        type: array
                        items:
                          '0':
                            properties:
                              id:
                                type: string
                                example: 00000000-0000-0000-0000-000000000000
                                description: "The comment's uuid"
                              body:
                                type: string
                                example: 'Hello this is my first comment'
                              image:
                                nullable: true
                                type: string
                                example: 'https://cdn.ready2.gg/...'
                              commentOwner:
                                $ref: 'file:///Users/meliksahbirgul/Projects/ESA/ready2/api-repo/docs/api-docs/public-api/hub/components.yaml#/components/schemas/CommentOwner'
                              createdAt:
                                type: string
                                example: 1686218400
                              updatedAt:
                                type: string
                                example: 1686218400
                              likesCount:
                                type: integer
                                example: 10
                              isLiked:
                                type: boolean
                                example: true
                              comments:
                                type: array
                                items:
                                  -
                                    $ref: 'file:///Users/meliksahbirgul/Projects/ESA/ready2/api-repo/docs/api-docs/public-api/hub/components.yaml#/components/schemas/Comment'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/feed/comment/{commentId}':
    delete:
      tags:
        - Hub
      description: 'Delete a comment'
      operationId: deleteComment
      parameters:
        -
          name: commentId
          in: path
          description: "The comment's uuid"
          required: true
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Comment deleted'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Hub
      description: 'Change a comment'
      operationId: changeComment
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: commentId
          in: path
          description: "The comment's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - body
              type: object
              properties:
                body:
                  type: string
                  example: 'Hello this is my changed comment'
                imageId:
                  type: string
                  description: "The image's uuid"
                  example: uuid
        required: true
      responses:
        '204':
          description: 'Comment changed'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/feed/post/{postId}/like':
    post:
      tags:
        - Hub
      description: 'Like a post'
      operationId: likePost
      parameters:
        -
          name: postId
          in: path
          description: "The post's uuid"
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'Post liked'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/feed/comment/{commentId}/like':
    post:
      tags:
        - Hub
      description: 'Like a comment'
      operationId: likeComment
      parameters:
        -
          name: commentId
          in: path
          description: "The comment's uuid"
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'Comment liked'
      security:
        -
          bearerAuth: []
  '/hubs/find-id-by-slug/{slug}':
    get:
      tags:
        - Hub
      description: 'Find hub id by slug'
      operationId: findHubIdBySlug
      parameters:
        -
          name: slug
          in: path
          description: "The hub's slug"
          required: true
          schema:
            type: string
        -
          name: refresh
          in: query
          description: "Refresh the hub's cache"
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: 'Hub id'
          content:
            application/json:
              schema:
                properties:
                  hubId:
                    type: string
                    description: 'Hub id'
  '/hubs/{hubId}/settings/tournaments':
    get:
      tags:
        - Hub
      description: 'Hub settings tournaments page'
      operationId: getHubSettingsTournaments
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: gameSlug
          in: query
          description: "The game's slug"
          required: false
          schema:
            type: string
        -
          name: tournamentStatus
          in: query
          description: 'The status of the tournament'
          required: false
          schema:
            enum:
              - all
              - upcoming
              - ongoing
              - past
            type: string
      responses:
        '200':
          description: 'Hub tournaments'
          content:
            application/json:
              schema:
                properties:
                  hub:
                    required:
                      - id
                      - name
                      - slug
                      - category
                    type: object
                    properties:
                      id:
                        type: string
                        description: "The hub's uuid"
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: 'Esa Esports'
                      slug:
                        type: string
                        example: esa-esports
                      category:
                        enum:
                          - brand
                          - organization
                        type: string
                        example: brand
                      description:
                        type: string
                        example: 'Esa Esports is a gaming platform'
                      games:
                        type: array
                        items:
                          type: string
                          description: "The game's slug"
                          example: csgo
                      socials:
                        type: object
                        properties:
                          instagram:
                            type: string
                            example: 'https://instagram.com/...'
                          twitter:
                            type: string
                            example: 'https://x.com/...'
                          twitch:
                            type: string
                            example: 'https://twitch.tv/...'
                          discord:
                            type: string
                            example: 'https://discord.gg/...'
                          youtube:
                            type: string
                            example: 'https://youtube.com/...'
                          facebook:
                            type: string
                            example: 'https://facebook.com/...'
                      avatarUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      bannerUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      videoUrl:
                        type: string
                        example: 'https://www.youtube.com/watch?v=...'
                      membersCount:
                        type: integer
                        example: 10
                      ownerNickname:
                        type: string
                        example: excalibur71
                      walletId:
                        type: string
                        description: "Hub's wallet uuid"
                        example: uuid
                      walletBalanceAmount:
                        type: array
                        items:
                          properties:
                            amount:
                              type: integer
                              example: 100
                            currency:
                              type: string
                              example: R2C
                      isJoined:
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        description: 'The date is provided in UTC timezone.'
                        format: date-time
                      contactUrl:
                        type: string
                        example: 'https://esaesports.com/contact'
                      isAdmin:
                        type: boolean
                        example: true
                  tournaments:
                    type: array
                    items:
                      properties:
                        uuid:
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        name:
                          type: string
                          example: 'The Last Man Standing Challenge'
                        slug:
                          type: string
                          example: the-last-man-standing-challenge
                        startDate:
                          type: object
                          properties:
                            timezone:
                              type: string
                              example: Europe/Istanbul
                            date:
                              type: string
                              example: 1686218400
                        logoUrl:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        bannerUrl:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        thumbnailUrl:
                          type: string
                          nullable: true
                          example: 'https://cdn.ready2.gg/...'
                        game:
                          type: object
                          properties:
                            slug:
                              type: string
                              example: csgo
                            logo:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                        versus:
                          type: string
                          example: 1v1
                        slots:
                          type: integer
                          example: 10
                        slotsLeft:
                          type: integer
                          example: 10
                        prize:
                          type: object
                          properties:
                            currency:
                              type: string
                              example: $
                            total:
                              type: integer
                              example: 1000
                        entranceFee:
                          type: integer
                          example: 100
                        joinType:
                          enum:
                            - open-for-all
                            - link-only
                            - invite-only
                          type: string
                        status:
                          enum:
                            - notStarted
                            - applicationOpen
                            - applicationClosed
                            - checkIn
                            - subCheckIn
                            - checkInClosed
                            - seeding
                            - stage
                            - tournamentStarted
                            - ongoing
                            - finished
                          type: string
                        liveStreamCount:
                          type: integer
                          example: 2
                        isLive:
                          type: boolean
                          example: true
                  total:
                    type: integer
                    description: 'Total tournament records by parameters'
                    example: 200
                  listTournaments:
                    type: object
                    properties:
                      featuredTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      allTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      popularTournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            banner:
                              type: string
                              nullable: true
                              example: 'https://...'
                            thumbnail:
                              type: string
                              nullable: true
                              example: 'https://...'
                            logo:
                              type: string
                              nullable: true
                              example: 'https://...'
                            tournamentStartDate:
                              type: string
                              format: 'Y-m-d H:i:s'
                            slot:
                              type: integer
                            slotLeft:
                              type: integer
                            numberOfUser:
                              type: string
                              format: 5v5
                            joinType:
                              enum:
                                - open-for-all
                                - invite-only
                                - link-only
                              type: string
                            tournamentCurrentStatus:
                              enum:
                                - notStarted
                                - applicationOpen
                                - applicationClosed
                                - checkIn
                                - subCheckIn
                                - checkInClosed
                                - seeding
                                - stage
                                - tournamentStarted
                                - ongoing
                                - finished
                                - setup
                              type: string
                            entranceFee:
                              type: integer
                              nullable: true
                            liveStreamCount:
                              type: integer
                            isLive:
                              type: boolean
                            isSubscribesOnly:
                              type: boolean
                            ranking:
                              type: integer
                              nullable: true
                            game:
                              type: object
                              properties:
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  example: 'https://...'
                            prize:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  nullable: true
                                currency:
                                  type: string
                                  nullable: true
                              nullable: true
                            hub:
                              type: object
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                slug:
                                  type: string
                                logo:
                                  type: string
                                  nullable: true
                                memberCount:
                                  type: integer
                            tags:
                              type: array
                              items:
                                type: string
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                          page:
                            type: integer
                          pageSize:
                            type: integer
                          totalPage:
                            type: integer
      security:
        - {  }
        -
          bearerAuth: []
  /encounters:
    get:
      tags:
        - Encounters
      description: 'Returns encounters list for the user'
      operationId: getEncountersListOfTheUser
      parameters:
        -
          name: query
          in: query
          description: "Query string will be searched in tournament's titles"
          schema:
            type: string
      responses:
        '200':
          description: 'List of encounters for the tournaments player attended. Returns empty **encounters** array if there is none.'
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema:
                properties:
                  encounters:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
                        title:
                          type: string
                          example: 'First Elimination'
                        willStartAt:
                          type: string
                          format: Datetime
                        step:
                          enum:
                            - not-started
                            - ready
                            - veto
                            - playing
                            - ended
                          type: string
                          description: "Encounter Step:\n * `not-started` - Encounter time does not started\n * `ready` - Players from both teams expected to be ready\n * `veto` - Team leaders expected to pick/ban maps\n * `playing` - Teams playing game\n * `ended` - All sets of the fame concluded\n"
                          example: not-started
                        tournament:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              example: 0ea604bb-8f93-4f73-abab-d5e5b50907bd
                            title:
                              type: string
                              example: 'ESA Weekend Super Battle'
                            gameType:
                              type: string
                              example: valorant
                        teams:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: 'ESA Valorant Team'
                              slug:
                                type: string
                                example: esa-valorant-team
                              tricode:
                                type: string
                                example: EVT
                              logo:
                                type: string
                                format: uri
                                example: 'https://test.cdn.ready2.gg/team-image/team-1.png?v1'
                        game:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}':
    get:
      tags:
        - Encounters
      description: 'Returns encounter state data'
      operationId: getEncounterState
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: refresh
          in: query
          description: 'Refreshes encounter data'
          deprecated: true
          schema:
            type: integer
        -
          name: vetoType
          in: query
          description: "Sets encounter's veto type"
          deprecated: true
          schema:
            type: string
      requestBody: {  }
      responses:
        '200':
          description: 'Successful operation'
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema:
                properties:
                  encounter:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
                      key:
                        type: string
                        format: ulid
                        example: 01h5sq9pf7dce8ym2wty9yqkxb
                      isCanceled:
                        type: boolean
                        example: false
                      isPaused:
                        type: boolean
                        example: false
                      roundId:
                        type: string
                        format: uuid
                        example: 562eec31-2b60-4fa5-a090-627b85978c44
                      name:
                        type: string
                        example: 'Round 1'
                      step:
                        enum:
                          - not-started
                          - ready
                          - ready-intermission
                          - veto
                          - playing
                          - ended
                        type: string
                        example: not-started
                      tournament:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            example: 0ea604bb-8f93-4f73-abab-d5e5b50907bd
                          title:
                            type: string
                            example: 'ESA Weekend Super Battle'
                          slug:
                            type: string
                            example: esa-weekend-super-battle
                          type:
                            enum:
                              - single
                              - double
                              - ffa
                              - 'league '
                            type: string
                      encounterWSChannel:
                        type: string
                        example: encounter-01h5sq9pf7dce8ym2wty9yqkxb
                      encounterWSEventName:
                        type: string
                        example: ready2.encounter.data-changed
                      encounterChatWSChannel:
                        type: string
                        example: encounter-chat-01h5sq9pf7dce8ym2wty9yqkxb
                      encounterChatWSEventName:
                        type: string
                        example: ready2.encounter.chat.new-message
                      conversationId:
                        type: string
                        format: uuid
                        example: 6d570923-ce10-482b-83bb-0328e8cd9fe5
                      remainingTimeInSeconds:
                        type: integer
                        description: 'Remaining time in seconds for the countdown timer'
                      willStartAt:
                        type: string
                        format: 'DateTime ISO8601'
                      willStartAtUTC:
                        type: string
                        format: 'DateTime ISO8601'
                      willStartAtTimezone:
                        type: string
                        example: Europe/Istanbul
                      tournamentStatus:
                        enum:
                          - ongoing
                          - finished
                        type: string
                        nullable: true
                      isAdminCalled:
                        type: boolean
                      announcer:
                        type: object
                        properties:
                          isEnabled:
                            type: boolean
                            example: true
                          type:
                            type: string
                            example: encounter-not-started
                          dictionary:
                            type: object
                            description: 'Replace values exist in message as templated string i.e. {forfeitedTeam}'
                          message:
                            type: string
                            example: 'The game has not started yet. At least 5 members from both teams must be ready when the timer starts'
                      hero:
                        type: object
                        properties:
                          text:
                            type: string
                            example: 'The game has not started yet'
                          alternativeText:
                            type: string
                            example: 'Ready process is over. You will be redirected to Veto step.'
                            required: false
                          actions:
                            type: array
                            items:
                              oneOf:
                                -
                                  properties:
                                    type:
                                      type: string
                                      example: player-ready
                                    button:
                                      enum:
                                        - default
                                        - primary
                                        - danger
                                        - warning
                                        - link
                                        - disabled
                                      type: string
                                      example: danger
                                    order:
                                      maxLength: 2
                                      minLength: 2
                                      type: string
                                      example: '01'
                                    title:
                                      type: string
                                      example: 'Report Results'
                                -
                                  allOf:
                                    -
                                      properties:
                                        type:
                                          type: string
                                          example: player-ready
                                        button:
                                          enum:
                                            - default
                                            - primary
                                            - danger
                                            - warning
                                            - link
                                            - disabled
                                          type: string
                                          example: danger
                                        order:
                                          maxLength: 2
                                          minLength: 2
                                          type: string
                                          example: '01'
                                        title:
                                          type: string
                                          example: 'Report Results'
                                    -
                                      type: object
                                      properties:
                                        endpoint:
                                          type: string
                                          format: uri
                                          example: 'https://api.ready2.gg/encounter/4f2eec31-2b60-4fa5-a090-627b8597b0b6/player/{playerId}/ready'
                                        method:
                                          type: string
                                          example: POST
                                        expectedHttpStatusCode:
                                          maximum: 299
                                          minimum: 200
                                          type: integer
                                          example: 202
                      game:
                        type: object
                        oneOf:
                          -
                            allOf:
                              -
                                properties:
                                  type:
                                    enum:
                                      - valorant
                                      - pubg
                                      - lol
                                      - csgo
                                    type: string
                                    example: valorant
                                  slug:
                                    type: string
                                    example: valorant
                                  step:
                                    enum:
                                      - not-started
                                      - playing
                                      - ended
                                    type: string
                                    example: playing
                                  activeSetMap:
                                    type: string
                                    format: map-key
                                    example: 01h5swkx6yshqpmera0v5d0nm5
                                  isVetoable:
                                    type: boolean
                                  resultType:
                                    enum:
                                      - winner
                                      - score
                                    type: string
                                  hasLobbyId:
                                    type: boolean
                                  sets:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                          format: ulid
                                          example: '01h5vk3k14r9707hw4qxxcaq8r,'
                                        title:
                                          type: string
                                          example: '1st Game'
                                        step:
                                          enum:
                                            - not-started
                                            - waiting
                                            - playing
                                            - reporting
                                            - concluded
                                          type: string
                                          example: not-started
                                        isConflict:
                                          type: boolean
                                          example: true
                                        waitingForAdminToResolve:
                                          type: boolean
                                          example: true
                                        teamWaitedToReport:
                                          type: array
                                          items:
                                            type: string
                                            description: "Team's slug"
                                          example:
                                            - esa-valorant-team
                                        winner:
                                          type: string
                                          description: "Team's slug"
                                          example: esa-valorant-team
                                        statistics:
                                          type: object
                                          properties:
                                            team-slug:
                                              type: integer
                                          example:
                                            esa-valorant-team: 6
                                            esa-developer-team: 3
                                        remainingTimeToReport:
                                          type: integer
                                          description: 'countdown for opponent report time'
                                        activeRoundIndex:
                                          type: integer
                                          example: 0
                                        rounds:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              position:
                                                type: integer
                                              setId:
                                                type: integer
                                              order:
                                                type: integer
                                              winnerTeamId:
                                                type: integer
                                                nullable: true
                                              winner:
                                                type: string
                                                description: "Teams' slug"
                                                example: esa-valorant-team
                                              isConflict:
                                                type: boolean
                                              mapId:
                                                type: integer
                                              step:
                                                enum:
                                                  - not-started
                                                  - waiting
                                                  - playing
                                                  - reporting
                                                  - concluded
                                                type: string
                                                example: not-started
                                              mapName:
                                                type: string
                                              mapSlug:
                                                type: string
                                              mapLogo:
                                                type: string
                                              teamWaitedToReport:
                                                type: array
                                                items:
                                                  type: string
                                                  description: "Team's slug"
                                                example:
                                                  - esa-valorant-team
                                              waitingForAdminToResolve:
                                                type: boolean
                                              statistics:
                                                type: object
                                                properties:
                                                  team-slug:
                                                    type: integer
                                                example:
                                                  esa-valorant-team: 6
                                                  esa-developer-team: 3
                                              remainingTimeToReport:
                                                type: integer
                                                description: 'countdown for opponent report time'
                                          nullable: true
                                        info:
                                          oneOf:
                                            -
                                              type:
                                                - 'null'
                                            -
                                              type: object
                                              properties:
                                                lobbyId:
                                                  oneOf:
                                                    -
                                                      type:
                                                        - 'null'
                                                    -
                                                      type: string
                                                password:
                                                  oneOf:
                                                    -
                                                      type:
                                                        - 'null'
                                                    -
                                                      type: string
                                        teams:
                                          type: object
                                          properties:
                                            team-item-slug:
                                              type: object
                                              properties:
                                                slug:
                                                  type: string
                                                  example: esa-valorant-team
                                                setRoundScore:
                                                  type: integer
                                                  description: 'Number of set rounds won by the team'
                                                  example: 2
                              -
                                type: object
                                properties:
                                  winnerDecision:
                                    type: object
                                    properties:
                                      key:
                                        type: string
                                        example: best-of-5
                                      name:
                                        type: string
                                        example: 'Best of 5'
                                      numberOfMapsToPick:
                                        type: integer
                                        example: 7
                                      numberOfSetsToPlay:
                                        type: integer
                                        example: 5
                                      numberOfSetsToWin:
                                        type: integer
                                        example: 3
                                  pickBanTeam:
                                    type: string
                                    description: "Team's slug"
                                    example: esa-valorant-team
                                  chooseSideTeam:
                                    type: string
                                    description: "Team's slug"
                                    example: esa-valorant-team
                                  pickBanStep:
                                    enum:
                                      - ban
                                      - pick
                                      - choose-side
                                    type: string
                                    example: pick
                                  maps:
                                    type: object
                                    properties:
                                      map-item-key:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                            format: ulid
                                            example: 01h5swkx6yshqpmera0v5d0nm5
                                          title:
                                            type: string
                                            example: 'Map 1'
                                          mapImageUrl:
                                            type: string
                                            format: uri
                                            example: 'https://cdn.test.ready2.gg/map-image/map-1.png?v1'
                                          isPicked:
                                            type: boolean
                                            example: true
                                          isBanned:
                                            type: boolean
                                            example: true
                                          pickedBy:
                                            type: string
                                            description: "Team's slug"
                                            example: esa-valorant-team
                                          bannedBy:
                                            type: string
                                            description: "Team's slug"
                                            example: esa-valorant-team
                                          attacker:
                                            type: string
                                            description: "Team's slug"
                                            example: esa-valorant-team
                                          defender:
                                            type: string
                                            description: "Team's slug"
                                            example: developer-valorant-team
                                          pickedIconUrl:
                                            type: string
                                            format: uri
                                            example: 'https://cdn.test.ready2.gg/games/picked-yellow.png?v1'
                                          bannedIconUrl:
                                            type: string
                                            format: uri
                                            example: 'https://cdn.test.ready2.gg/games/banned-yellow.png?v1'
                                          attackersFlagIconUrl:
                                            type: string
                                            format: uri
                                            example: 'https://cdn.test.ready2.gg/games/flag-yellow.png?v1'
                                          defendersFlagIconUrl:
                                            type: string
                                            format: uri
                                            example: 'https://cdn.test.ready2.gg/games/flag-blue.png?v1'
                                          attackersLogoUrl:
                                            type: string
                                            format: uri
                                            example: 'https://cdn.test.ready2.gg/games/attackers-logo.png?v1'
                                          defendersLogoUrl:
                                            type: string
                                            format: uri
                                            example: 'https://cdn.test.ready2.gg/games/defenders-logo.png?v1'
                                          isWaiting:
                                            type: boolean
                                            example: true
                                  selectedMaps:
                                    type: array
                                    items:
                                      type: string
                                      description: "Map's key"
                                    example:
                                      - 01h5swkx6yshqpmera0v5d0nm5
                                      - 01h5swmx5wq4qd7bhbj8dc5j5j
                      teams:
                        type: object
                        properties:
                          team-item-slug:
                            type: object
                            properties:
                              slug:
                                type: string
                                example: esa-valorant-team
                              name:
                                type: string
                                example: 'ESA Valorant Team'
                              teamHref:
                                type: string
                              labelKey:
                                type: string
                                example: yellow
                              label:
                                type: string
                                example: 'Yellow Team'
                              labelFlagUrl:
                                type: string
                                format: uri
                                example: 'https://cdn.test.ready2.gg/flags/yellow.png?v1'
                              tricode:
                                type: string
                                example: EVT
                              color:
                                type: string
                                format: html-hex-code
                                example: null
                              teamLogoUrl:
                                type: string
                                format: uri
                                example: 'https://cdn.test.ready2.gg/team-logo/team-1.png?v1'
                              teamAvatarUrl:
                                type: string
                                format: uri
                                example: 'https://cdn.test.ready2.gg/team-image/team-1.png?v1'
                              pickedMapsByTeam:
                                type: array
                                items:
                                  type: string
                                  description: "Map item's key"
                                example:
                                  - 01h5swkx6yshqpmera0v5d0nm5
                              bannedMapsByTeam:
                                type: array
                                items:
                                  type: string
                                  description: "Map item's key"
                                example:
                                  - 01h5swp0g9941nmfpqed1vd2y9
                              setsScore:
                                type: integer
                                description: 'Number of sets won by the team'
                                example: 2
                              side:
                                type: integer
                                description: 'Means slot number for league encounters'
                              members:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      format: uuid
                                      example: 062f50ff-8108-4d83-b002-8c4b79fe5733
                                    role:
                                      enum:
                                        - captain
                                        - player
                                        - coach
                                        - substitute
                                      type: string
                                      example: player
                                    isCaptain:
                                      type: boolean
                                      example: true
                                    nickname:
                                      type: string
                                      example: oguzhansimsek
                                    nicknameHash:
                                      type: integer
                                      example: 1
                                    avatarUrl:
                                      type: string
                                      format: uri
                                      example: 'https://cdn.test.ready2.gg/team/members/avatar-1.png'
                                    playerName:
                                      type: string
                                      description: "Member's name in the game"
                                      example: '@MersinTantuni33'
                                    playerRankName:
                                      type: string
                                      example: 'Iron 1'
                                    playerRankIconUrl:
                                      type: string
                                      format: uri
                                      example: 'https://cdn.test.ready2.gg/rank/iron-1.png?v1'
                                    isReady:
                                      type: boolean
                                      example: true
                                    inGameUserId:
                                      type: string
                                      nullable: true
                      result:
                        anyOf:
                          -
                            type: object
                            properties:
                              message:
                                type: string
                                example: 'Yellow team won'
                              winner:
                                type: string
                                format: "winner team's slug"
                                example: null
                              teamsDisqualified:
                                type: boolean
                                description: 'Is exists and true when two teams disqualified'
                                example: true
                              teamDisqualified:
                                type: boolean
                                description: 'Is exists and true when one team disqualified'
                                example: true
                              forfeitedTeam:
                                type: string
                                description: "Forfeited team's slug"
                                example: developer-valorant-team
                              scores:
                                type: object
                                properties:
                                  team-slug:
                                    type: object
                                    properties:
                                      color:
                                        type: string
                                        format: hex-color-code
                                        example: null
                                      score:
                                        type: integer
                                        example: 2
                          -
                            type: object
                            properties:
                              set-key:
                                type: object
                                properties:
                                  team-item-slug:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        format: uuid
                                      killCount:
                                        type: integer
                                      inGamePosition:
                                        type: integer
                                      score:
                                        type: integer
                                      winPoints:
                                        type: integer
                                      placementPoints:
                                        type: integer
                              overallEncounterScore:
                                type: object
                                properties:
                                  team-item-slug:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        format: uuid
                                      killCount:
                                        type: integer
                                      inGamePosition:
                                        type: integer
                                      score:
                                        type: integer
                                      winPoints:
                                        type: integer
                                      placementPoints:
                                        type: integer
                      round:
                        oneOf:
                          -
                            title: 'General round information'
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                example: 3c74e0ae-4372-11ef-9454-0242ac120002
                              title:
                                type: string
                              isFinal:
                                type: integer
                              info:
                                type: object
                                properties:
                                  advancingTeams:
                                    type: integer
                                    description: 'Number of teams that will qualify for the next round'
                                  gameMapSetsCount:
                                    type: integer
                                    description: 'Power play count'
                                nullable: true
                              upperbracket:
                                type: integer
                                example: 1
                              lowerbracket:
                                type: integer
                                example: 0
                              stage:
                                type: integer
                                description: 'Round order in the tournament'
                                example: 1
                              totalRoundCount:
                                type: integer
                                description: 'Total round count in the tournament'
                                example: 3
                          -
                            title: 'FFA Tournament round information'
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                example: 3c74e0ae-4372-11ef-9454-0242ac120002
                              title:
                                type: string
                              isFinal:
                                type: integer
                              info:
                                type: object
                                properties:
                                  sets:
                                    type: integer
                                    description: 'Encounter sets count'
                                  mapIds:
                                    type: array
                                    items:
                                      type: string
                                      format: uuid
                                    encounters:
                                      type: integer
                                      description: 'Encounter count in the round'
                                  advancingTeams:
                                    type: integer
                                    description: 'Number of teams that will qualify for the next round'
                                  teamsPerMatch:
                                    type: integer
                                    description: 'Number of teams in the match'
                                  gameMapSetsCount:
                                    type: integer
                                    description: 'Power play count'
                                nullable: true
                              stage:
                                type: integer
                                description: 'Round order in the tournament'
                                example: 1
                              totalRoundCount:
                                type: integer
                                description: 'Total round count in the tournament'
                                example: 3
                      activeSetIndex:
                        type: integer
                      title:
                        type: string
                        nullable: true
                        example: 'Round 1 - Group A'
                      hub:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          category:
                            enum:
                              - brand
                              - organization
                            type: string
                          name:
                            type: string
                          slug:
                            type: string
                          logo:
                            type: string
                            nullable: true
                      titleDetails:
                        type: object
                        properties:
                          roundOrder:
                            type: integer
                            description: 'It is the order of the round in the tournament. e.g. 1, 2, 3'
                            example: 1
                          encounterOrder:
                            type:
                              - string
                            description: 'If bracket type FFA then it is group name. e.g. A, B, C. If bracket type single or double elimination then it is encounter order. e.g. 1, 2, 3'
                            example: A
                          bracket:
                            enum:
                              - U
                              - L
                              - F
                            type: string
                            description: 'If double elimination, U for upper bracket, L for lower bracket, F for grand final. Otherwise empty string'
                            example: U
                          sets:
                            type:
                              - string
                            description: 'If bracket type FFA then it is number of sets. e.g. 1, 2, 3. If bracket type single or double elimination then it is best of. e.g. BO1, BO3, BO5, BO5+'
                            example: BO1
                          isFinal:
                            type: boolean
                            example: true
                        description: 'Title details for the encounter. If it is empty, it will be used the default title'
                  admins:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          format: uuid
                        role:
                          type: string
                        nickname:
                          type: string
                          example: laleergin
                        nicknameHash:
                          type: string
                          example: 10
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '404':
          description: 'Not Found'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        - {  }
        -
          bearerAuth: []
  '/encounters/{encounterId}/teams/{teamSlug}/members/{memberId}/ready':
    post:
      tags:
        - Encounters
      description: 'User sets his/her status ready'
      operationId: setUserReady
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: teamSlug
          in: path
          description: "Team's slug"
          required: true
          schema:
            type: string
          example: esa-valorant-team
        -
          name: memberId
          in: path
          description: "Player's Ready2 id"
          required: true
          schema:
            type: string
            format: uuid
          example: 062f50ff-8108-4d83-b002-8c4b79fe5733
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/teams/{teamSlug}/maps/{mapId}/ban':
    post:
      tags:
        - Encounters
      description: 'Team captain bans a map'
      operationId: banMap
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: teamSlug
          in: path
          description: "Team's slug"
          required: true
          schema:
            type: string
          example: esa-valorant-team
        -
          name: mapId
          in: path
          description: 'Map Id'
          required: true
          schema:
            type: string
            format: ulid
          example: 01h5swkx6yshqpmera0v5d0nm5
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/teams/{teamSlug}/maps/{mapId}/pick':
    post:
      tags:
        - Encounters
      description: 'Team captain picks a map'
      operationId: pickMap
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: teamSlug
          in: path
          description: "Team's slug"
          required: true
          schema:
            type: string
          example: esa-valorant-team
        -
          name: mapId
          in: path
          description: 'Map Id'
          required: true
          schema:
            type: string
            format: ulid
          example: 01h5swkx6yshqpmera0v5d0nm5
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/teams/{teamSlug}/maps/{mapId}/pick/choose-side':
    post:
      tags:
        - Encounters
      description: 'Team captain chooses a side for the map picked by other team'
      operationId: chooseSideForMap
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: teamSlug
          in: path
          description: "Team's slug"
          required: true
          schema:
            type: string
          example: esa-valorant-team
        -
          name: mapId
          in: path
          description: 'Map Id'
          required: true
          schema:
            type: string
            format: ulid
          example: 01h5swkx6yshqpmera0v5d0nm5
      requestBody:
        content:
          application/json:
            schema:
              required:
                - side
              type: object
              properties:
                side:
                  enum:
                    - attacker
                    - defender
                  type: string
                  example: attacker
                  required: true
      responses:
        '204':
          description: 'No Content'
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/teams/{teamSlug}/sets/{setId}/result':
    post:
      tags:
        - Encounters
      description: 'Team captain reports set result'
      operationId: reportResult
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: teamSlug
          in: path
          description: "Team's slug"
          required: true
          schema:
            type: string
          example: esa-valorant-team
        -
          name: setId
          in: path
          description: 'Set Id'
          required: true
          schema:
            type: string
            format: ulid
          example: 01h5swkx6yshqpmera0v5d0nm5
      requestBody:
        content:
          application/json:
            schema:
              required:
                - ourScore
                - opponentScore
              type: object
              properties:
                ourScore:
                  type: string
                  example: 6
                  required: true
                opponentScore:
                  type: string
                  example: 3
                  required: true
                gameResultScreenshotUrl:
                  type: string
                  format: uri
                  example: 'https://cdn.ready2.gg/results/4490a740-59bb-4d25-a343-05e73e9acb6a.jpg'
                notes:
                  type: string
                  example: "We reject the opposing team's claims."
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/teams/{teamSlug}/sets/{setId}/conflict-result':
    post:
      tags:
        - Encounters
      description: 'Team captain reports set result'
      operationId: reportConflictedResult
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: teamSlug
          in: path
          description: "Team's slug"
          required: true
          schema:
            type: string
          example: esa-valorant-team
        -
          name: setId
          in: path
          description: 'Set Id'
          required: true
          schema:
            type: string
            format: ulid
          example: 01h5swkx6yshqpmera0v5d0nm5
      requestBody:
        content:
          application/json:
            schema:
              required:
                - ourScore
                - opponentScore
                - gameResultScreenshotUrl
              type: object
              properties:
                ourScore:
                  type: string
                  example: 6
                  required: true
                opponentScore:
                  type: string
                  example: 3
                  required: true
                gameResultScreenshotUrl:
                  type: string
                  format: uri
                  example: 'https://cdn.ready2.gg/results/4490a740-59bb-4d25-a343-05e73e9acb6a.jpg'
                  required: true
                notes:
                  type: string
                  example: "We reject the opposing team's claims."
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/teams/{teamSlug}/call-admin':
    post:
      tags:
        - Encounters
      description: 'Team captain calls admin to resolve a conflict'
      operationId: callAdmin
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: teamSlug
          in: path
          description: "Team's slug"
          required: true
          schema:
            type: string
          example: esa-valorant-team
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/set-encounter-winner':
    patch:
      tags:
        - Encounters
      description: 'Admin can set encounter winner'
      operationId: setEncounterWinner
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      requestBody:
        content:
          application/json:
            schema:
              required:
                - winnerType
              type: object
              properties:
                winnerType:
                  enum:
                    - match
                    - forfeit
                    - disqualified
                    - bye
                  type: string
                winnerTeamId:
                  type: string
                  format: uuid
                  example: 'team uuid'
                winnerScore:
                  type: integer
                opponentScore:
                  type: integer
      responses:
        '204':
          description: 'No Content'
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/sets/{setId}/set-encounter-set-winner':
    patch:
      tags:
        - Encounters
      description: 'Admin can set encounter set winner'
      operationId: setEncounterSetWinner
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: setId
          in: path
          description: 'Set Id'
          required: true
          schema:
            type: string
            format: ulid
          example: 01h5swkx6yshqpmera0v5d0nm5
      requestBody:
        content:
          application/json:
            schema:
              required:
                - winnerTeamSlug
              type: object
              properties:
                winnerTeamSlug:
                  type: string
                  required: true
                winnerScore:
                  type: integer
                  example: 6
                loserScore:
                  type: integer
                  example: 3
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/messages':
    get:
      tags:
        - Encounters
      description: 'Returns last 20 messages of encounter chat'
      operationId: getMessagesForEncounter
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: us2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: pageSize
          in: query
          description: 'Page size is limited to minimum 1 and maximum 200'
          required: false
          schema:
            type: integer
            example: 20
        -
          name: before
          in: query
          required: false
          schema:
            type: string
            format: datetime
            example: 1704067201
        -
          name: after
          in: query
          required: false
          schema:
            type: string
            format: datetime
            example: 1704067201
      responses:
        '200':
          description: 'List of  messages. Returns empty **messages** array if there is none.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  directMessages:
                    type: array
                    items:
                      type: object
                      properties:
                        messageId:
                          type: string
                          format: uuid
                        senderUserId:
                          type: string
                          format: uuid
                        senderName:
                          type: string
                          example: 'oguzhansimsek#10'
                        senderAvatar:
                          type: string
                          nullable: true
                          example: 'https://...'
                        message:
                          type: string
                          example: 'Hello 😊'
                        flags:
                          type: object
                          properties:
                            isSpam:
                              type: boolean
                        createdAt:
                          type: string
                          format: datetime
                          example: 1704067201
                        createdAtTimezone:
                          type: string
                          format: timezone
                          example: UTC
                        messageLocalTime:
                          type: string
                          format: datetime
                          example: 1706861198
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
    post:
      tags:
        - Encounters
      description: 'Sends message to encounter chat'
      operationId: sendMessageToEncounterChat
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: us2eec31-2b60-4fa5-a090-627b8597b0b6
      requestBody:
        content:
          application/json:
            schema:
              required:
                - message
              type: object
              properties:
                message:
                  type: string
                  example: 'Hello 😊'
        required: true
      responses:
        '204':
          description: Created
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/messages/{messageId}':
    delete:
      tags:
        - Encounters
      description: 'Delete encounter chat message'
      operationId: deleteEncounterChatMessage
      parameters:
        -
          name: encounterId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        -
          name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: OK
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/resume':
    patch:
      tags:
        - Encounters
      description: 'Resume paused encounter. Only tournament admins can do that.'
      operationId: resumeEncounter
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/pause':
    patch:
      tags:
        - Encounters
      description: 'Pause encounter. Only tournament admins can do that.'
      operationId: pauseEncounter
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/cancel':
    patch:
      tags:
        - Encounters
      description: 'Cancel encounter. Only tournament admins can do that.'
      operationId: cancelEncounter
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/get-encounter-logs':
    get:
      tags:
        - Encounters
      description: 'Include encounter logs details. Only tournament admins can do that.'
      operationId: getEncounterLogs
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    properties:
                      logs:
                        type: array
                        items:
                          required:
                            - userName
                            - createdAt
                            - details
                          properties:
                            userName:
                              type: string
                              nullable: true
                            createdAt:
                              type: integer
                              description: 'Log time in milliseconds'
                              example: 1712315530000
                            details:
                              anyOf:
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - player-ready
                                        - pause
                                        - resume
                                        - cancel
                                        - reset
                                      type: string
                                    userId:
                                      type: integer
                                      nullable: true
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - ban-map
                                        - pick-map
                                      type: string
                                    userId:
                                      type: integer
                                      nullable: true
                                    mapId:
                                      type: string
                                    mapName:
                                      type: string
                                    teamName:
                                      type: string
                                    teamUuid:
                                      type: string
                                      format: uuid
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - choose-side
                                      type: string
                                    userId:
                                      type: integer
                                      nullable: true
                                    side:
                                      enum:
                                        - attacker
                                        - defender
                                      type: string
                                    mapId:
                                      type: string
                                    mapName:
                                      type: string
                                    teamName:
                                      type: string
                                    teamUuid:
                                      type: string
                                      format: uuid
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - call-admin
                                      type: string
                                    userId:
                                      type: integer
                                      nullable: true
                                    teamName:
                                      type: string
                                    teamUuid:
                                      type: string
                                      format: uuid
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - report
                                      type: string
                                    userId:
                                      type: integer
                                      nullable: true
                                    notes:
                                      type: string
                                      nullable: true
                                    setId:
                                      type: integer
                                    ourScore:
                                      type: string
                                    opponentScore:
                                      type: string
                                    teamName:
                                      type: string
                                    teamUuid:
                                      type: string
                                      format: uuid
                                    gameResultScreenshotUrl:
                                      type: string
                                      nullable: true
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - set-encounter-set-winner
                                      type: string
                                    userId:
                                      type: integer
                                      nullable: true
                                    setId:
                                      type: integer
                                    teamName:
                                      type: string
                                    teamUuid:
                                      type: string
                                      format: uuid
                                    winnerScore:
                                      type: integer
                                    loserScore:
                                      type: integer
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - set-encounter-winner
                                      type: string
                                    userId:
                                      type: integer
                                      nullable: true
                                    teamUuid:
                                      type: string
                                      format: uuid
                                    winnerScore:
                                      type: integer
                                    opponentScore:
                                      type: integer
                                    winnerType:
                                      enum:
                                        - match
                                        - forfeit
                                        - bye
                                        - disqualified
                                      type: string
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - not-started-process-ended
                                        - ready-process-started
                                        - ready-process-ended
                                        - ban-pick-process-started
                                        - ban-pick-process-ended
                                        - encounter-started
                                      type: string
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - encounter-ended
                                      type: string
                                    winner:
                                      type: string
                                      description: 'Winner team slug'
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - set-started
                                        - set-ended
                                      type: string
                                    setCount:
                                      type: integer
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - set-lobby-details
                                      type: string
                                    userId:
                                      type: integer
                                    lobbyDetails:
                                      type: object
                                      properties:
                                        lobbyId:
                                          type: string
                                        password:
                                          type: string
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - set-encounter-set-team-set-results
                                      type: string
                                    userId:
                                      type: integer
                                    teamId:
                                      type: string
                                    teamName:
                                      type: string
                                    scoreDetails:
                                      type: object
                                      properties:
                                        kills:
                                          type: integer
                                        score:
                                          type: integer
                                        inGamePosition:
                                          type: integer
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - set-round-report
                                      type: string
                                    teamUuid:
                                      type: string
                                      format: uuid
                                    teamName:
                                      type: string
                                    setId:
                                      type: integer
                                    roundId:
                                      type: integer
                                    ourScore:
                                      type: integer
                                    opponentScore:
                                      type: integer
                                    gameResultScreenshotUrl:
                                      type: string
                                    notes:
                                      type: string
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - set-round-started
                                        - set-round-ended
                                      type: string
                                    setRoundCount:
                                      type: integer
                                -
                                  type: object
                                  properties:
                                    type:
                                      enum:
                                        - set-round-winner
                                      type: string
                                    setId:
                                      type: integer
                                    roundId:
                                      type: integer
                                    teamUuid:
                                      type: string
                                      format: uuid
                                    teamName:
                                      type: string
                                    winnerScore:
                                      type: integer
                                    loserScore:
                                      type: integer
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '404':
          description: 'Not Found'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/reset-encounter':
    patch:
      tags:
        - Encounters
      description: 'Reset encounter. Only tournament admins can do that.'
      operationId: resetEncounter
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  /wallets:
    get:
      tags:
        - Wallet
      description: 'Get wallet id for the user'
      operationId: GetUserWalletId
      responses:
        '200':
          description: OK
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema:
                type: object
                properties:
                  wallet:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
    post:
      tags:
        - Wallet
      description: 'Setup a new wallet for user'
      operationId: setupWallet
      requestBody:
        content:
          application/json:
            schema:
              required:
                - currencies
                - ownerType
              type: object
              properties:
                currencies:
                  type: array
                  items:
                    enum:
                      - R2C
                      - TRY
                      - USD
                      - EUR
                    type: string
                    format: currency
                    example: R2C
                  example:
                    - R2C
                    - TRY
                ownerType:
                  enum:
                    - user
                    - hub
                  type: string
                  example: user
      responses:
        '204':
          description: 'No Content'
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/wallets/{walletId}':
    get:
      tags:
        - Wallet
      description: 'Wallet details for the user'
      operationId: getUserWalletDetails
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: cc369000-c041-4356-beda-105b533067bd
      responses:
        '200':
          description: OK
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema:
                type: object
                properties:
                  wallet:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      accounts:
                        type: array
                        items:
                          type: object
                          properties:
                            accountId:
                              type: string
                              format: uuid
                              example: 27eeaaf6-4d37-4858-baaf-0e572b31a5df
                            currencyCode:
                              type: string
                              format: currencyISOCode
                              example: TRY
                            currencyAlias:
                              type: string
                              example: TL
                            currencyName:
                              type: string
                              example: 'Türk Lirası'
                            isFrozen:
                              type: boolean
                              example: false
                            balanceAmount:
                              type: number
                              example: 1000.0
                            blockedAmount:
                              type: number
                              example: 1000.0
                      bankAccounts:
                        type: array
                        items:
                          type: object
                          properties:
                            bankAccountId:
                              type: string
                              format: uuid
                            accountOwner:
                              type: string
                              example: 'Ahmet Yılmaz'
                            bankName:
                              type: string
                              example: 'Türkiye İş Bankası'
                            iban:
                              type: string
                              format: IBAN
                              example: TR760006253133324958149376
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/wallets/{walletId}/accounts/{accountId}':
    get:
      tags:
        - Wallet
      description: "Get wallet's account details"
      operationId: getWalletAccountDetails
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: cc369000-c041-4356-beda-105b533067bd
        -
          name: accountId
          in: path
          description: 'Account id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: 458e0667-33ac-447a-9c98-4e8a388cd618
      responses:
        '200':
          description: OK
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      accountId:
                        type: string
                        format: uuid
                        example: 27eeaaf6-4d37-4858-baaf-0e572b31a5df
                      currencyCode:
                        type: string
                        format: currencyISOCode
                        example: TRY
                      currencyAlias:
                        type: string
                        example: TL
                      currencyName:
                        type: string
                        example: 'Türk Lirası'
                      isFrozen:
                        type: boolean
                        example: false
                      balanceAmount:
                        type: number
                        example: 1000.0
                      blockedAmount:
                        type: number
                        example: 1000.0
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/wallets/{walletId}/accounts/{accountId}/deposit':
    post:
      tags:
        - Wallet
      description: "Deposit wallet's account"
      operationId: depositAccount
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: cc369000-c041-4356-beda-105b533067bd
        -
          name: accountId
          in: path
          description: 'Account id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: 458e0667-33ac-447a-9c98-4e8a388cd618
      requestBody:
        content:
          application/json:
            schema:
              required:
                - amount
              type: object
              properties:
                amount:
                  type: number
                  format: decimal
                  example: 100.0
      responses:
        '204':
          description: 'No Content'
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/wallets/{walletId}/accounts/{accountId}/withdraw':
    post:
      tags:
        - Wallet
      description: "Withdraw money from wallet's account"
      operationId: withdrawMoneyFromAccount
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: cc369000-c041-4356-beda-105b533067bd
        -
          name: accountId
          in: path
          description: 'Account id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: 458e0667-33ac-447a-9c98-4e8a388cd618
      requestBody:
        content:
          application/json:
            schema:
              required:
                - amount
              type: object
              properties:
                amount:
                  type: number
                  format: decimal
                  example: 100.0
                iban:
                  type: string
                  format: iban
                  example: TR760006253133324958149376
      responses:
        '204':
          description: 'No Content'
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/wallets/{walletId}/accounts-activities':
    get:
      tags:
        - Wallet
      description: "Get wallet's accounts activities list"
      operationId: getWalletAccountsActivities
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: cc369000-c041-4356-beda-105b533067bd
      responses:
        '200':
          description: OK
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema:
                type: object
                properties:
                  accountActivities:
                    type: array
                    items:
                      type: object
                      properties:
                        accountId:
                          type: string
                          format: uuid
                          example: 27eeaaf6-4d37-4858-baaf-0e572b31a5df
                        currencyCode:
                          type: string
                          format: currencyISOCode
                          example: TRY
                        currencyAlias:
                          type: string
                          example: TL
                        currencyName:
                          type: string
                          example: 'Türk Lirası'
                        amount:
                          type: number
                          example: 100
                        activityType:
                          enum:
                            - internal-deposit
                            - external-deposit
                            - transfer
                            - exchange
                            - withdraw
                          type: string
                          example: internal-deposit
                        activityTypeText:
                          enum:
                            - Convert
                            - Deposit
                            - Transfer
                            - Prize
                            - Exchange
                            - Withdraw
                          type: string
                          example: Convert
                        activitySign:
                          enum:
                            - negative
                            - positive
                            - nil
                          type: string
                          example: negative
                        activityDate:
                          type: string
                          format: 'ISO 8601 Date'
                          example: 1695772800
                        activityInfo:
                          type: object
                          properties:
                            title:
                              type: string
                              example: 'ESA Cup 2023 / Quarter 2'
                            subInfoLeftSideText:
                              type: string
                              example: '2nd Place'
                            subInfoLeftSideStyle:
                              enum:
                                - champion
                                - winner
                                - 2nd
                                - 3rd
                                - mention
                              type: string
                              example: 2nd
                            subInfoSeparator:
                              type: string
                              example: /
                            subInfoRightSideText:
                              type: string
                              example: '128'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/wallets/{walletId}/bank-accounts':
    get:
      tags:
        - Wallet
      description: 'Get bank accounts list'
      operationId: GetBankAccountsList
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '200':
          description: OK
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema:
                type: object
                properties:
                  bankAccounts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: 87bb6a25-2f3f-4c69-ab28-65852fadd1cc
                        accountOwner:
                          type: string
                          example: 'Ahmet Yılmaz'
                        bankName:
                          type: string
                          example: 'Türkiye İş Bankası'
                        iban:
                          type: string
                          format: IBAN
                          example: TR760006253133324958149376
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
    post:
      tags:
        - Wallet
      description: 'Define new bank account'
      operationId: defineBankAccount
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      requestBody:
        content:
          application/json:
            schema:
              required:
                - accountOwner
                - bankName
                - iban
              type: object
              properties:
                accountOwner:
                  type: string
                  example: 'Ahmet Yılmaz'
                bankName:
                  type: string
                  example: 'Türkiye İş Bankası'
                iban:
                  type: string
                  example: TR760006253133324958149376
      responses:
        '204':
          description: 'No Content'
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/wallets/{walletId}/bank-accounts/{bankAccountId}':
    get:
      tags:
        - Wallet
      description: 'Bank account details'
      operationId: getBankAccountDetail
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: cc369000-c041-4356-beda-105b533067bd
        -
          name: bankAccountId
          in: path
          description: 'Bank account id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: ba369000-c041-4356-beda-105b533067bd
      responses:
        '200':
          description: OK
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema:
                type: object
                properties:
                  bankAccount:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: 87bb6a25-2f3f-4c69-ab28-65852fadd1cc
                      accountOwner:
                        type: string
                        example: 'Ahmet Yılmaz'
                      bankName:
                        type: string
                        example: 'Türkiye İş Bankası'
                      iban:
                        type: string
                        format: IBAN
                        example: TR760006253133324958149376
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
    delete:
      tags:
        - Wallet
      description: 'Remove bank account'
      operationId: RemoveBankAccount
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: cc369000-c041-4356-beda-105b533067bd
        -
          name: bankAccountId
          in: path
          description: 'Bank account id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: ba369000-c041-4356-beda-105b533067bd
      responses:
        '204':
          description: 'No Content'
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Wallet
      description: 'Change bank account details'
      operationId: ChangeBankAccountDetail
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: cc369000-c041-4356-beda-105b533067bd
        -
          name: bankAccountId
          in: path
          description: 'Bank account id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: ba369000-c041-4356-beda-105b533067bd
      requestBody:
        content:
          application/json:
            schema:
              required:
                - accountOwner
                - bankName
                - iban
              type: object
              properties:
                accountOwner:
                  type: string
                  example: 'Ahmet Yılmaz'
                bankName:
                  type: string
                  example: 'Türkiye İş Bankası'
                iban:
                  type: string
                  example: TR760006253133324958149376
      responses:
        '204':
          description: 'No Content'
        '400':
          description: 'Bad Request'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/wallets/{walletId}/accounts/{accountId}/payments':
    post:
      tags:
        - Wallet
      description: 'Make a deposit to an account'
      operationId: depositAccountUsingCreditCard
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: accountId
          in: path
          description: 'Wallet Account Id'
          required: true
          schema:
            type: string
          example: 3f2eec31-2b60-4fa5-a090-627b8597b0b6
      requestBody:
        content:
          application/json:
            schema:
              required:
                - cardHolder
                - cardNumber
                - expiryMonth
                - expiryYear
                - cvv
                - basketItems
              type: object
              properties:
                cardHolder:
                  type: string
                  example: 'Lale Ergin'
                  required: true
                cardNumber:
                  type: string
                  format: creditCard
                  example: '1234567891234567'
                  required: true
                expiryMonth:
                  type: string
                  example: '03'
                expiryYear:
                  type: string
                  format: number
                  example: 2028
                cvv:
                  type: string
                  example: 103
                basketItems:
                  type: array
                  items:
                    type: object
                    properties:
                      itemId:
                        type: string
                        format: itemId
                        example: r2c-30
                      quantity:
                        type: number
                        example: 3
                paymentSuccessUrl:
                  type: string
                  example: 'https://ready2.gg/wallet/4f2eec31-2b60-4fa5-a090-627b8597b0b6/payment-successful'
                paymentFailureUrl:
                  type: string
                  example: 'https://ready2.gg/wallet/4f2eec31-2b60-4fa5-a090-627b8597b0b6/payment-failed'
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/wallets/{walletId}/accounts/{accountId}/payment-check/{orderId}':
    get:
      tags:
        - Wallet
      description: 'Returns encounter state data'
      operationId: checkOrderDetails
      parameters:
        -
          name: walletId
          in: path
          description: 'Wallet id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: accountId
          in: path
          description: 'Account id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: 458e0667-33ac-447a-9c98-4e8a388cd618
        -
          name: orderId
          in: path
          description: 'Order id in ULID format'
          required: true
          schema:
            type: string
            format: uuid
          example: 123wer34gy5rqwaaww2w
      requestBody: {  }
      responses:
        '200':
          description: 'Successful operation'
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema: null
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '404':
          description: 'Not Found'
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  /store/items/r2-coins:
    get:
      tags:
        - Store
      summary: /store/items/r2-coins
      description: 'Returns items in the store'
      parameters:
        -
          name: query
          in: query
          description: "Query string will be searched in tournament's titles"
          schema:
            type: string
      responses:
        '200':
          description: 'List of encounters for the tournaments player attended. Returns empty **encounters** array if there is none.'
          content:
            'application/vnd.public-ready2.v1+json; language=en':
              schema:
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: r2c-30
                        name:
                          type: string
                          example: '30 R2C'
                        price:
                          type: number
                          example: 30
                        currency:
                          enum:
                            - TL
                            - USD
                            - EUR
                          type: string
                          example: TL
                        bonus:
                          type: number
                          nullable: true
                          example: 10
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournamentTeams/{tournamentTeamId}':
    get:
      tags:
        - Tournaments
      description: 'Return tournament teams details'
      operationId: getTournamentTeamDetails
      parameters:
        -
          name: tournamentTeamId
          in: path
          description: 'Tournament Team UUID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: 'user uuid'
                          format: uuid
                        name:
                          type: string
                        nickname:
                          type: string
                        nicknameHash:
                          type: integer
                        birthday:
                          type: string
                          format: 'Y-m-D H:i:s'
                        logo:
                          type: string
                          example: 'https://'
                        role:
                          enum:
                            - member
                            - captain
                            - substitute
                            - coach
                          type: string
                        gameName:
                          type: string
                          description: 'user connected game account nickname'
                        socialAccounts:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                enum:
                                  - instagram
                                  - facebook
                                  - twitter
                                  - discord
                                  - youtube
                                  - linkedin
                                  - pinterest
                                  - twitch
                                  - trackergg
                                type: string
                              username:
                                type: string
                              url:
                                type: string
                              image:
                                type: string
                        friendshipStatus:
                          type: string
                          nullable: true
                        rank:
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                            gameRankLogo:
                              type: string
                              nullable: true
                          nullable: true
                        rankOnRegistration:
                          type: object
                          properties:
                            name:
                              type: string
                            gameRankLogo:
                              type: string
                          nullable: true
        '404':
          description: 'Tournament team not found'
      security:
        - {  }
        -
          bearerAuth: []
  '/tournamentTeams/{tournamentTeamId}/accept':
    patch:
      tags:
        - 'Organizing Tournament'
      description: 'Accept tournament team join request'
      operationId: acceptTournamentTeam
      parameters:
        -
          name: tournamentTeamId
          in: path
          description: 'Tournament Team UUID'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournamentTeams/{tournamentTeamId}/reject':
    patch:
      tags:
        - 'Organizing Tournament'
      description: 'Reject tournament team join request'
      operationId: rejectTournamentTeam
      parameters:
        -
          name: tournamentTeamId
          in: path
          description: 'Tournament Team UUID'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
        required: true
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournamentRounds/{tournamentRoundId}/change-sets':
    patch:
      tags:
        - 'Organizing Tournament'
      description: "Changing tournament rounds' encounter sets"
      operationId: changeRoundEncountersSets
      parameters:
        -
          name: tournamentRoundId
          in: path
          description: 'Tournament Round UUID'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  /direct-messages:
    get:
      tags:
        - 'Direct Messages'
      description: 'Returns direct message contacts list of the user'
      operationId: getContactList
      parameters:
        -
          name: page
          in: query
          schema:
            type: integer
        -
          name: pageSize
          in: query
          schema:
            type: integer
        -
          name: searchTerm
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 'List of direct message user participated. Returns empty **contacts** array if there is none.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    description: 'Number of total direct message contacts'
                    format: integer
                    example: 34
                  pageSize:
                    type: number
                    description: 'Number of records per page'
                    format: integer
                    default: 10
                    example: 10
                  page:
                    type: number
                    format: integer
                    default: 1
                    example: 1
                  unreadMessages:
                    type: object
                    properties:
                      directMessages:
                        type: integer
                        example: 3
                      chatGroupMessages:
                        type: integer
                        example: 0
                  hasUnreadMessages:
                    type: boolean
                    example: true
                  contacts:
                    type: array
                    items:
                      type: object
                      properties:
                        chatId:
                          type: string
                          format: uuid
                        chatUpdatedAt:
                          type: string
                          example: '2023-12-18 11:07:03'
                        chatWSChannel:
                          type: string
                          example: chat-018c7c9b-a314-735a-b3b1-a09670d4a77c
                        chatWSEventName:
                          type: string
                          example: new-message
                        contactUserId:
                          type: string
                          example: 4f065bec-6cd5-4831-9c2c-cd9baf14f9a1
                        contactName:
                          type: string
                          example: yavuzyolbir0
                        contactAvatar:
                          type: string
                          nullable: true
                          example: 'https://test.cdn.ready2.gg/user-image/yavuz-yolbir.png?v1'
                        hasUnreadMessages:
                          type: boolean
                          example: true
                        lastMessage:
                          required:
                            - message
                            - createdAt
                            - createdAtTimezone
                            - flags
                          type: object
                          properties:
                            message:
                              type: string
                              example: 'Hello 😊'
                            createdAt:
                              type: string
                              example: '2023-12-18 11:07:03'
                            createdAtTimezone:
                              type: string
                              example: UTC
                            flags:
                              type: object
                              properties:
                                isSpam:
                                  type: boolean
                                  example: false
                                isRead:
                                  type: boolean
                                  example: false
                                isDeleted:
                                  type: boolean
                                  example: false
                          nullable: true
                        contactDeletedAt:
                          type: string
                          nullable: true
                          example: '2025-02-27 13:00:00'
                        unreadMessages:
                          type: integer
                          example: 3
                        chatInboxType:
                          enum:
                            - user
                            - readonly
                          type: string
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/direct-messages/{contactUserId}/messages':
    get:
      tags:
        - 'Direct Messages'
      description: 'Returns last 20 direct messages of user with their contact'
      operationId: getDirectMessagesForContact
      parameters:
        -
          name: contactUserId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        -
          name: before
          in: query
          required: false
          schema:
            type: string
            format: datetime
            example: 1704067201
        -
          name: after
          in: query
          required: false
          schema:
            type: string
            format: datetime
            example: 1704067201
      responses:
        '200':
          description: 'List of direct messages. Returns empty **directMessages** array if there is none.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  chatWSChannel:
                    type: string
                    example: chat-43
                  chatWSEventName:
                    type: string
                    example: new-message
                  directMessages:
                    type: array
                    items:
                      type: object
                      properties:
                        createdAt:
                          type: string
                          example: '2023-12-21 09:52:51'
                        createdAtTimezone:
                          type: string
                          example: UTC
                        flags:
                          required:
                            - isSpam
                            - isDeleted
                            - isRead
                          type: object
                          properties:
                            isSpam:
                              type: boolean
                              example: false
                            isDeleted:
                              type: boolean
                              example: false
                            isRead:
                              type: boolean
                              example: false
                        message:
                          type: string
                          example: 'Hello arkadaşlar'
                        messageId:
                          type: string
                          example: 018c8bca-c58f-7196-94a0-e80f5d0d8046
                        senderAvatar:
                          type: string
                          example: 'https://test.cdn.ready2.gg/user-image/yavuz-yolbir.png?v1'
                        senderName:
                          type: string
                          example: yavuzyolbir0
                        senderUserId:
                          type: string
                          example: 4f065bec-6cd5-4831-9c2c-cd9baf14f9a1
                  details:
                    type: object
                    properties:
                      blockStatus:
                        enum:
                          - no-block
                          - you-blocked
                          - blocked-you
                          - both-blocked
                        type: string
                        description: 'Block status between user and contact'
                      friendStatus:
                        enum:
                          - friend
                          - not-friend
                          - you-sent-request
                          - user-sent-request
                        type: string
                        description: 'Friend status between user and contact'
                      isDeletedUser:
                        type: boolean
                        description: 'If true, the user is deleted'
                      userDetails:
                        type: object
                        properties:
                          senderUserId:
                            type: string
                            example: 4f065bec-6cd5-4831-9c2c-cd9baf14f9a1
                          senderName:
                            type: string
                            example: yavuzyolbir0
                          senderAvatar:
                            type: string
                            example: 'https://test.cdn.ready2.gg/user-image/yavuz-yolbir.png?v1'
                          messagePreference:
                            enum:
                              - everyone
                              - friends
                              - nobody
                            type: string
                            description: 'Message preference of the user'
                          chatInboxType:
                            enum:
                              - user
                              - readonly
                            type: string
                            description: "Chat inbox type of the user (user or readonly). User can't send message to readonly chat inbox type."
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
    post:
      tags:
        - 'Direct Messages'
      description: 'Sends direct message to contact'
      operationId: sendDirectMessageToContact
      parameters:
        -
          name: contactUserId
          in: path
          description: 'User id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: us2eec31-2b60-4fa5-a090-627b8597b0b6
      requestBody:
        content:
          application/json:
            schema:
              required:
                - message
              type: object
              properties:
                message:
                  type: string
                  example: 'Hello 😊'
        required: true
      responses:
        '204':
          description: Created
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - 'Direct Messages'
      description: 'Marks all messages as read for the given user'
      operationId: readMessages
      parameters:
        -
          name: contactUserId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                messageId:
                  type: string
                  format: uuid
                  example: uuid
                timeStamp:
                  type: string
                  format: datetime
                  example: '2024-01-01 00:00:01'
                timeZone:
                  type: string
                  example: UTC
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/direct-messages/{contactUserId}/messages/{messageId}':
    delete:
      tags:
        - 'Direct Messages'
      description: "Delete user's chat message"
      operationId: deleteUsersChatMessage
      parameters:
        -
          name: contactUserId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        -
          name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: OK
      security:
        -
          bearerAuth: []
  /direct-messages/search-users:
    get:
      tags:
        - 'Direct Messages'
      description: 'Returns list of users for direct message'
      operationId: searchUserForDirectMessage
      parameters:
        -
          name: page
          in: query
          schema:
            type: integer
        -
          name: pageSize
          in: query
          schema:
            maximum: 50
            minimum: 1
            type: integer
        -
          name: searchTerm
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 'List of direct message user participated. Returns empty **contacts** array if there is none.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    description: 'Number of total direct message contacts'
                    format: integer
                    example: 34
                  pageSize:
                    type: number
                    description: 'Number of records per page'
                    format: integer
                    default: 10
                    example: 10
                  page:
                    type: number
                    format: integer
                    default: 1
                    example: 1
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: string
                          example: uuid
                        nickname:
                          type: string
                          example: buraksevinc
                        isFriend:
                          type: boolean
                          example: true
                        avatar:
                          type: string
                          nullable: true
                          example: 'https://test.cdn.ready2.gg/user-image/user.png?v1'
                        createdAt:
                          type: string
                          example: '2025'
                        lastMessage:
                          type: string
                          nullable: true
                          example: Hello
                        lastMessageAt:
                          type: string
                          description: "Datetime in 'YYYY-MM-DD HH:mm:ss' format for last message"
                          nullable: true
                          example: '2025-01-01 15:30:00'
                        lastMessageTimezone:
                          type: string
                          description: 'Timezone of last message default is UTC'
                          nullable: true
                          example: UTC
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments-test/{gameSlug}/{firstTeamSlug}/{secondTeamSlug}/{roundType}':
    get:
      tags:
        - Test
      description: 'Create an quick encounter'
      operationId: createTestTournamentByGameAndRoundType
      parameters:
        -
          name: gameSlug
          in: path
          description: 'Game slug'
          required: true
          schema:
            type: string
          example: valorant
        -
          name: firstTeamSlug
          in: path
          description: 'First team slug'
          required: true
          schema:
            type: string
        -
          name: secondTeamSlug
          in: path
          description: 'Second team slug'
          required: true
          schema:
            type: string
            format: ulid
        -
          name: roundType
          in: path
          description: 'Round type'
          required: true
          schema:
            enum:
              - singleMatch
              - bestOfThree
              - bestOfFive
              - bestOfFivePlus
            type: string
      responses:
        '204':
          description: 'Tournament created'
  /tournaments/tests:
    post:
      tags:
        - Test
      description: 'Create a test tournament'
      operationId: createTestTournament
      requestBody:
        content:
          application/json:
            schema:
              required:
                - gameSlug
                - participantsConfig
                - hubSlug
                - isVisible
              type: object
              properties:
                gameSlug:
                  type: string
                  example: valorant
                participantsConfig:
                  type: object
                  properties:
                    numberOfParticipants:
                      type: integer
                      description: 'Number of participants in the tournament'
                      example: 8
                tournamentType:
                  enum:
                    - SINGLE
                    - FFA
                  type: string
                  description: 'Type of the tournament'
                  example: SINGLE
                joinType:
                  enum:
                    - open-for-all
                    - link-only
                    - invite-only
                  type: string
                  description: 'Join type of tournament (default open-for-all)'
                hubSlug:
                  type: string
                  description: 'Slug of the hub that the tournament will be created in'
                  example: esa-esports
                isVisible:
                  type: boolean
                  description: 'Whether the tournament is visible to the public'
                  example: true
                dates:
                  type: object
                  properties:
                    timezone:
                      type: string
                      description: 'Timezone of the tournament. Default is UTC'
                      example: Europe/Istanbul
                    addMinutesPerStep:
                      type: integer
                      description: 'Number of minutes to add to each step (registration, check-in, seeding, start, concluded)'
                      example: 2
                    addMinutesPerRound:
                      type: integer
                      description: 'Number of minutes to add to each round'
                      example: 5
                teams:
                  type: object
                  properties:
                    numberOfAttendees:
                      type: integer
                      description: 'Number of attendees in the tournament'
                      example: 8
                    numberOfTeamMembers:
                      type: integer
                      description: 'Number of members in each team'
                      example: 5
                  description: 'If registration is selected as the current step, no participating teams will be selected. if you want teams to have participated and been checked, something other than registration should be selected as the current step.'
                teamSlugs:
                  type: array
                  items:
                    type: string
                    description: 'Slugs of the teams that will participate in the tournament'
                    example: esa-valorant-team
                  description: 'If team slugs are selected, the number of attendees and team members will be ignored. Just the teams in the list will be added to the tournament.'
                currentStep:
                  enum:
                    - registration
                    - check-in
                    - seeding
                    - start
                    - concluded
                  type: string
                roundInfo:
                  type: array
                  items:
                    type: object
                    properties:
                      encounters:
                        type: integer
                        description: 'Number of encounters in the round'
                        example: 1
                      sets:
                        type: integer
                        description: 'Number of sets in the encounter'
                        example: 1
                      advancingTeams:
                        type: integer
                        description: 'Number of teams that will advance to the next round per encounter'
                        example: 1
                      mapIds:
                        type: array
                        items:
                          type: string
                          description: 'Ids of the maps that will be played in the each encounter set'
                  description: 'Only FFA tournaments have round information.'
              description: 'This endpoint is used to create a test tournament with the given parameters'
        required: true
      responses:
        '204':
          description: 'Tournament created'
  '/tournaments/tests/{tournamentId}/set-winner':
    post:
      tags:
        - Test
      description: 'Set winner for test tournament'
      operationId: setWinnerTestTournament
      parameters:
        -
          name: tournamentId
          in: path
          description: 'UUID of the tournament'
          required: true
          schema:
            type: string
            example: 6a1b9f18-8ec6-11ee-b9d1-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              description: 'Determine the winner of the first unplayed round of the tournament'
        required: true
      responses:
        '204':
          description: 'Winner set successfully'
  /set-tournament-rankings:
    post:
      tags:
        - Test
      description: 'Remove all tournament rankings and set again.'
      operationId: setTournamentRankings
      responses:
        '200':
          description: 'Tournament winners set successfully'
  '/encounters/{encounterId}/sets/{setId}/set-lobby':
    patch:
      tags:
        - Encounters
      description: 'Admin can set lobby details to encounter set'
      operationId: setEncounterSetLobbyDetails
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: setId
          in: path
          description: 'Set Id'
          required: true
          schema:
            type: string
          example: match-1234
      requestBody:
        content:
          application/json:
            schema:
              required:
                - lobbyId
                - password
              type: object
              properties:
                lobbyId:
                  type: string
                password:
                  type: string
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/sets/{setId}/team/{teamId}/score':
    patch:
      tags:
        - Encounters
      description: "Admin can set score to a league encounters' set"
      operationId: setLeagueEncounterSetScore
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: setId
          in: path
          description: 'Set Id'
          required: true
          schema:
            type: string
          example: match-1234
        -
          name: teamId
          in: path
          description: 'Team Id'
          required: true
          schema:
            type: string
            format: uuid
          example: 2eaa2638-435d-11ef-9454-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              required:
                - kills
                - inGamePosition
              type: object
              properties:
                kills:
                  type: integer
                inGamePosition:
                  type: integer
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/sets/{setId}/conclude-league-encounter-set':
    patch:
      tags:
        - Encounters
      description: "Admin can conclude a league encounters' set"
      operationId: concludeLeaderboardEncounterSet
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: setId
          in: path
          description: 'Set Id'
          required: true
          schema:
            type: string
          example: match-1234
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/finish-leaderboard-encounter':
    patch:
      tags:
        - Encounters
      description: 'Admin can finish a leaderboard encounters'
      operationId: finishLeaderboardEncounter
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/encounters/{encounterId}/reset-ban-pick':
    patch:
      tags:
        - Encounters
      description: "Reset encounter's ban pick process. Veto starts with red team. Only tournament admins can do that."
      operationId: resetBanPickEncounter
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/list-invitations':
    get:
      tags:
        - 'Tournament Invitations'
      description: 'List the teams that invited to tournament'
      operationId: listTournamentInvitations
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament uuid'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successfull operation'
          content:
            application/json:
              schema:
                properties:
                  invitedTeams:
                    type: array
                    items:
                      required:
                        - id
                        - uuid
                        - name
                        - slug
                        - hash
                        - tricode
                        - logo
                        - gameName
                        - gameSlug
                        - memberCount
                      type: object
                      properties:
                        id:
                          type: number
                        uuid:
                          type: string
                          format: uuid
                        name:
                          type: string
                        slug:
                          type: string
                          description: 'Team slug'
                        hash:
                          type: number
                          description: 'Team hash'
                        tricode:
                          type: string
                        logo:
                          type: string
                          description: 'Team logo'
                          nullable: true
                        gameName:
                          type: string
                        gameSlug:
                          type: string
                          description: 'Game slug'
                        memberCount:
                          type: number
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/{teamId}/invite-team':
    post:
      tags:
        - 'Tournament Invitations'
      description: 'Invite a team to tournament'
      operationId: inviteTeamToTournament
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament uuid'
          required: true
          schema:
            type: string
        -
          name: teamId
          in: path
          description: 'Team uuid'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/search-invite-teams':
    get:
      tags:
        - 'Tournament Invitations'
      description: 'Search teams for invite'
      operationId: searchTeamsForInvite
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament uuid'
          required: true
          schema:
            type: string
        -
          name: teamName
          in: query
          description: 'Team name'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: 'Team uuid'
                        name:
                          type: string
                          description: 'Team name'
                        slug:
                          type: string
                          description: 'Team slug'
                        hash:
                          type: integer
                          description: 'Team hash'
                        tricode:
                          type: string
                          description: 'Team tricode'
                        imageUrl:
                          type: string
                          description: 'Team image url'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/{teamId}/remove-invitation':
    delete:
      tags:
        - 'Tournament Invitations'
      description: "Remove a team's invitation from tournament"
      operationId: removeTeamInvitation
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament uuid'
          required: true
          schema:
            type: string
        -
          name: teamId
          in: path
          description: 'Team uuid'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/ban-hub-member':
    patch:
      tags:
        - Hub
      description: 'Ban a member from the hub'
      operationId: banHubMember
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - memberNickname
              type: object
              properties:
                memberNickname:
                  type: string
                  example: excalibur71
        required: true
      responses:
        '204':
          description: 'You have successfully banned the member from the hub'
        '422':
          description: 'Something went wrong.'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/unban-hub-member':
    patch:
      tags:
        - Hub
      description: 'Unban a member from the hub'
      operationId: unBanHubMember
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - memberNickname
              type: object
              properties:
                memberNickname:
                  type: string
                  example: excalibur71
        required: true
      responses:
        '204':
          description: 'You have successfully unbanned the member from the hub'
        '422':
          description: 'Something went wrong.'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/banned-members':
    get:
      tags:
        - Hub
      description: 'Get banned hub members'
      operationId: getBannedHubMembers
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: search
          in: query
          description: 'The search query'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Hub members'
          content:
            application/json:
              schema:
                allOf:
                  -
                    properties:
                      page:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 10
                      pageSize:
                        type: integer
                        example: 100
                  -
                    type: object
                    properties:
                      filter:
                        type: object
                        properties:
                          page:
                            type: integer
                            description: 'Current page'
                            example: 1
                          total:
                            type: integer
                            description: 'Total number of results'
                            example: 1
                          pageSize:
                            type: integer
                            description: 'Number of results per page'
                            example: 50
                          search:
                            type: string
                            description: 'Search query'
                            example: john
                      hub:
                        required:
                          - id
                          - name
                          - slug
                          - category
                        type: object
                        properties:
                          id:
                            type: string
                            description: "The hub's uuid"
                            example: 00000000-0000-0000-0000-000000000000
                          name:
                            type: string
                            example: 'Esa Esports'
                          slug:
                            type: string
                            example: esa-esports
                          category:
                            enum:
                              - brand
                              - organization
                            type: string
                            example: brand
                          description:
                            type: string
                            example: 'Esa Esports is a gaming platform'
                          games:
                            type: array
                            items:
                              type: string
                              description: "The game's slug"
                              example: csgo
                          socials:
                            type: object
                            properties:
                              instagram:
                                type: string
                                example: 'https://instagram.com/...'
                              twitter:
                                type: string
                                example: 'https://x.com/...'
                              twitch:
                                type: string
                                example: 'https://twitch.tv/...'
                              discord:
                                type: string
                                example: 'https://discord.gg/...'
                              youtube:
                                type: string
                                example: 'https://youtube.com/...'
                              facebook:
                                type: string
                                example: 'https://facebook.com/...'
                          avatarUrl:
                            type: string
                            example: 'https://cdn.ready2.gg/...'
                          bannerUrl:
                            type: string
                            example: 'https://cdn.ready2.gg/...'
                          videoUrl:
                            type: string
                            example: 'https://www.youtube.com/watch?v=...'
                          membersCount:
                            type: integer
                            example: 10
                          ownerNickname:
                            type: string
                            example: excalibur71
                          walletId:
                            type: string
                            description: "Hub's wallet uuid"
                            example: uuid
                          walletBalanceAmount:
                            type: array
                            items:
                              properties:
                                amount:
                                  type: integer
                                  example: 100
                                currency:
                                  type: string
                                  example: R2C
                          isJoined:
                            type: boolean
                            example: true
                          createdAt:
                            type: string
                            description: 'The date is provided in UTC timezone.'
                            format: date-time
                          contactUrl:
                            type: string
                            example: 'https://esaesports.com/contact'
                          isAdmin:
                            type: boolean
                            example: true
                      members:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              type: string
                              format: uuid
                            nickname:
                              type: string
                              description: 'Nickname of the user'
                              example: john
                            nicknameHash:
                              type: integer
                              example: 10
                            avatar:
                              type: string
                              description: "URL of the user's avatar"
                              format: uri
                              nullable: true
                              example: 'https://cdn.ready2.gg/avatars/1234567890.png'
                            joinedAt:
                              type: string
                              description: 'Date when the user joined the hub'
                              format: datetime
                              example: '2020-01-01 00:00:00'
                            endedAt:
                              type: string
                              description: 'Date when the user was ended from the hub'
                              format: datetime
                              example: 1577923200
                            integration:
                              anyOf:
                                -
                                  type: object
                                  properties:
                                    fut:
                                      properties:
                                        membershipType:
                                          enum:
                                            - 'FUT Basic'
                                            - 'FUT Monthly Pass'
                                            - 'FUT Season Pass'
                                          type: string
                                        membershipTypeId:
                                          enum:
                                            - 1
                                            - 2
                                            - 3
                                          type: integer
                                          description: 'The membership type ID for FUT integration. 1 for FUT Season Pass, 2 for FUT Monthly Pass, and 3 for FUT Basic.'
                              nullable: true
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/invite-user':
    post:
      tags:
        - Hub
      description: 'Invite a user to hub'
      operationId: inviteUserToHub
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - userNickname
              type: object
              properties:
                userNickname:
                  type: string
                  example: excalibur71
        required: true
      responses:
        '200':
          description: 'You have successfully invite user to hub.'
        '422':
          description: 'Something went wrong.'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/search-users':
    get:
      tags:
        - Hub
      description: 'Get users'
      operationId: searchUserNotInHub
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'The page size'
          required: false
          schema:
            type: integer
        -
          name: search
          in: query
          description: 'The search query'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Hub members'
          content:
            application/json:
              schema:
                allOf:
                  -
                    properties:
                      page:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 10
                      pageSize:
                        type: integer
                        example: 100
                  -
                    type: object
                    properties:
                      filter:
                        type: object
                        properties:
                          page:
                            type: integer
                            description: 'Current page'
                            example: 1
                          total:
                            type: integer
                            description: 'Total number of results'
                            example: 1
                          pageSize:
                            type: integer
                            description: 'Number of results per page'
                            example: 50
                          search:
                            type: string
                            description: 'Search query'
                            example: john
                      users:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              type: string
                              description: "The user's uuid"
                              example: 00000000-0000-0000-0000-000000000000
                            nickname:
                              type: string
                              example: excalibur71
                            nicknameHash:
                              type: integer
                              example: 10
                            avatar:
                              type: string
                              example: 'https://cdn.ready2.gg/...'
                            isInvited:
                              type: boolean
                              description: 'Is user invited before to the hub'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/watch-party':
    get:
      tags:
        - Hub
      description: 'List live streams'
      operationId: listLiveStreams
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: related
          in: query
          description: "The related entity's uuid"
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  streams:
                    type: array
                    items:
                      '0':
                        $ref: './public-api/live-streams/components.yaml#/components/schemas/LiveStream'
        '404':
          description: 'Hub not found'
        '401':
          description: Unauthorized
      security:
        - {  }
        -
          bearerAuth: []
    post:
      tags:
        - Hub
      description: 'Create a live stream'
      operationId: createLiveStream
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - title
                - streamPlatformId
                - url
              type: object
              properties:
                title:
                  type: string
                  example: 'Your stream title'
                streamPlatformId:
                  type: string
                  format: uuid
                url:
                  type: string
                  example: 'https://www.twitch.tv/your-channel'
                relatedType:
                  enum:
                    - tournament
                  type: string
                  nullable: true
                relatedId:
                  type: string
                  format: uuid
                  nullable: true
        required: true
      responses:
        '201':
          description: Created
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/watch-party/{streamId}':
    get:
      tags:
        - Hub
      description: 'Get live stream details'
      operationId: getLiveStreamDetails
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: streamId
          in: path
          description: "The stream's uuid"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - id
                  - title
                  - url
                  - platform
                type: object
                properties:
                  id:
                    type: string
                    description: "The stream's uuid"
                    example: 00000000-0000-0000-0000-000000000000
                  title:
                    type: string
                  url:
                    type: string
                  thumbnailUrl:
                    type: string
                  platform:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        example: Twitch
                      imageUrl:
                        type: string
                        nullable: true
                        example: 'https://cdn.ready2.gg/...'
                  relatedItem:
                    type: object
                    anyOf:
                      -
                        title: Tournament
                        type: object
                        properties:
                          uuid:
                            type: string
                            format: uuid
                          slug:
                            type: string
                          tournamentName:
                            type: string
                          gameSlug:
                            type: string
                        description: 'Tournament related to the live stream'
                    description: 'May be null if the stream is not related to any item'
                    nullable: true
                  isLive:
                    type: boolean
                  isHighlighted:
                    type: boolean
                  lastCheckedAt:
                    type: object
                    properties:
                      timezone:
                        type: string
                        description: 'Default timezone is UTC'
                        example: UTC
                      date:
                        type: string
                        example: 1686218400
                  channelInfo:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Ready2GG
                      thumbnailUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      lastCheckedAt:
                        type: object
                        properties:
                          timezone:
                            type: string
                            description: 'Default timezone is UTC'
                            example: UTC
                          date:
                            type: string
                            example: 1686218400
                    nullable: true
        '404':
          description: 'Stream not found'
        '401':
          description: Unauthorized
      security:
        - {  }
        -
          bearerAuth: []
    delete:
      tags:
        - Hub
      description: 'Delete live stream'
      operationId: deleteLiveStream
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: streamId
          in: path
          description: "The stream's uuid"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
        '404':
          description: 'Stream not found'
        '401':
          description: Unauthorized
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Hub
      description: 'Change live stream details'
      operationId: changeLiveStreamDetails
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: streamId
          in: path
          description: "The stream's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 'Your stream title'
                streamPlatformId:
                  type: string
                  format: uuid
                url:
                  type: string
                  example: 'https://www.twitch.tv/your-channel'
                relatedType:
                  enum:
                    - tournament
                  type: string
                  nullable: true
                relatedId:
                  type: string
                  format: uuid
                  nullable: true
        required: true
      responses:
        '204':
          description: 'No Content'
        '404':
          description: 'Stream not found'
        '400':
          description: 'Bad Request'
        '401':
          description: Unauthorized
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/live-stream-sort':
    put:
      tags:
        - Hub
      description: 'Change live stream sort order. If streamIds is not provided, the default sort order is used.'
      operationId: changeLiveStreamSort
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                streamIds:
                  type: string
                  format: uuid
                  example:
                    - uuid1
                    - uuid2
        required: true
      responses:
        '204':
          description: 'No content'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/watch-party/{streamId}/highlight':
    patch:
      tags:
        - Hub
      description: 'Highlight live stream'
      operationId: highlightLiveStream
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: streamId
          in: path
          description: "The stream's uuid"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'No Content'
        '403':
          description: 'You are not admin or owner of this hub'
        '404':
          description: 'Stream not found'
        '401':
          description: Unauthorized
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/advertisements':
    get:
      tags:
        - Hub
      description: 'List hub advertisements'
      operationId: listHubAdvertisements
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: advertisementType
          in: query
          required: false
          schema:
            enum:
              - banner
            type: string
          example: banner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  advertisements:
                    type: array
                    items:
                      '0':
                        $ref: './public-api/advertisement/components.yaml#/components/schemas/Advertisement'
        '404':
          description: 'Not found'
        '401':
          description: Unauthorized
      security:
        - {  }
        -
          bearerAuth: []
    post:
      tags:
        - Hub
      description: 'Create a hub advertisement'
      operationId: createHubAdvertisement
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - advertisementType
                - desktopImageId
              type: object
              properties:
                advertisementType:
                  enum:
                    - banner
                  type: string
                  example: banner
                url:
                  type: string
                  format: uri
                desktopImageId:
                  type: string
                  format: uuid
                  example: uuid
                mobileImageId:
                  type: string
                  format: uuid
                  example: uuid
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                properties:
                  advertisement:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: uuid
                      advertisementType:
                        enum:
                          - banner
                        type: string
                        example: banner
                      url:
                        type: string
                        format: uri
                        nullable: true
                      desktopImageUrl:
                        type: string
                        format: uri
                      mobileImageUrl:
                        type: string
                        format: uri
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                        example: '2024-11-20 08:00:00'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2024-11-20 08:00:00'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/advertisements/{advertisementId}':
    delete:
      tags:
        - Hub
      description: 'Delete a hub advertisement'
      operationId: deleteHubAdvertisement
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: advertisementId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: uuid
      responses:
        '204':
          description: 'No content'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Hub
      description: 'Change hub advertisement details'
      operationId: changeHubAdvertisementDetails
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: advertisementId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                desktopImageId:
                  type: string
                  format: uuid
                  example: uuid
                mobileImageId:
                  type: string
                  format: uuid
                  example: uuid
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                properties:
                  advertisement:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: uuid
                      advertisementType:
                        enum:
                          - banner
                        type: string
                        example: banner
                      url:
                        type: string
                        format: uri
                        nullable: true
                      desktopImageUrl:
                        type: string
                        format: uri
                      mobileImageUrl:
                        type: string
                        format: uri
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                        example: '2024-11-20 08:00:00'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2024-11-20 08:00:00'
      security:
        -
          bearerAuth: []
  /sitemap/hubs:
    get:
      tags:
        - Sitemap
      description: 'Get hub slugs for sitemap'
      operationId: getHubSlugs
      parameters:
        -
          name: page
          in: query
          description: 'Page number'
          required: false
          schema:
            minimum: 1
            type: integer
            default: 1
        -
          name: pageSize
          in: query
          description: 'Page size number'
          required: false
          schema:
            minimum: 1
            type: integer
            default: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  hubs:
                    type: array
                    items:
                      type: string
                  page:
                    type: integer
                  pageSize:
                    type: integer
                  totalPage:
                    minimum: 1
                    type: integer
  /sitemap/teams:
    get:
      tags:
        - Sitemap
      description: 'Get team slugs for sitemap'
      operationId: getTeamSlugs
      parameters:
        -
          name: page
          in: query
          description: 'Page number'
          required: false
          schema:
            minimum: 1
            type: integer
            default: 1
        -
          name: pageSize
          in: query
          description: 'Page size number'
          required: false
          schema:
            minimum: 1
            type: integer
            default: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        gameSlug:
                          type: string
                        teamSlug:
                          type: string
                        teamHash:
                          type: string
                  page:
                    type: integer
                  pageSize:
                    type: integer
                  totalPage:
                    minimum: 1
                    type: integer
  /sitemap/profiles:
    get:
      tags:
        - Sitemap
      description: 'Get profile slugs for sitemap'
      operationId: getProfileSlugs
      parameters:
        -
          name: page
          in: query
          description: 'Page number'
          required: false
          schema:
            minimum: 1
            type: integer
            default: 1
        -
          name: pageSize
          in: query
          description: 'Page size number'
          required: false
          schema:
            minimum: 1
            type: integer
            default: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      type: object
                      properties:
                        nickname:
                          type: string
                        nicknameHash:
                          type: string
                  page:
                    type: integer
                  pageSize:
                    type: integer
                  totalPage:
                    minimum: 1
                    type: integer
  /sitemap/tournaments:
    get:
      tags:
        - Sitemap
      description: 'Get tournament slugs for sitemap'
      operationId: getTournamentSlugs
      parameters:
        -
          name: page
          in: query
          description: 'Page number'
          required: false
          schema:
            minimum: 1
            type: integer
            default: 1
        -
          name: pageSize
          in: query
          description: 'Page size number'
          required: false
          schema:
            minimum: 1
            type: integer
            default: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tournaments:
                    type: array
                    items:
                      type: object
                      properties:
                        tournamentSlug:
                          type: string
                        gameSlug:
                          type: string
                  page:
                    type: integer
                  pageSize:
                    type: integer
                  totalPage:
                    minimum: 1
                    type: integer
  '/encounters/{encounterId}/change-veto-advantage':
    patch:
      tags:
        - Encounters
      description: "Reset encounter's ban pick process. Veto starts with blue team. Only tournament admins can do that."
      operationId: changeVetoAdvantage
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/tournament-hub-admins':
    get:
      tags:
        - 'Organizing Tournament'
      description: 'Get tournament hub admins'
      operationId: getTournamentHubAdmins
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: 'user uuid'
                              format: uuid
                            nickname:
                              type: string
                            nicknameHash:
                              type: integer
                            logo:
                              type: string
                              example: 'https://'
                            isTournamentAdmin:
                              type: boolean
                  -
                    type: object
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  /stream-platforms:
    get:
      tags:
        - 'Stream Platforms'
      description: 'Get stream platform list'
      operationId: listStreamPlatforms
      responses:
        '200':
          description: 'Stream platforms'
          content:
            application/json:
              schema:
                type: object
                properties:
                  streamPlatforms:
                    type: array
                    items:
                      '0':
                        $ref: './public-api/stream-platforms/components.yaml#/components/schemas/StreamPlatform'
  '/encounters/{encounterId}/teams/{teamSlug}/sets/{setId}/rounds/{setRoundId}/report-round':
    post:
      tags:
        - Encounters
      description: 'Team captain reports set round result'
      operationId: reportSetRoundResult
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: teamSlug
          in: path
          description: "Team's slug"
          required: true
          schema:
            type: string
          example: esa-valorant-team
        -
          name: setId
          in: path
          description: 'Set Id'
          required: true
          schema:
            type: string
            format: ulid
          example: 01h5swkx6yshqpmera0v5d0nm5
        -
          name: setRoundId
          in: path
          description: 'Set Id'
          required: true
          schema:
            type: string
            format: ulid
          example: 01h5swkx6yshqpmera0v5d0nm5
      requestBody:
        content:
          application/json:
            schema:
              required:
                - ourScore
                - opponentScore
              type: object
              properties:
                ourScore:
                  type: string
                  example: 6
                  required: true
                opponentScore:
                  type: string
                  example: 3
                  required: true
                gameResultScreenshotUrl:
                  type: string
                  format: uri
                  example: 'https://cdn.ready2.gg/results/4490a740-59bb-4d25-a343-05e73e9acb6a.jpg'
                notes:
                  type: string
                  example: "We reject the opposing team's claims."
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  /advertisements/image:
    post:
      tags:
        - Advertisement
      description: 'Upload a new advertisement image'
      operationId: uploadAdvertisementImage
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: 'Advertisement image uploaded'
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: uuid
                      url:
                        type: string
                        format: uri
                        example: 'https://example'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                description: 'Bad Request'
                content:
                  application/problem+json:
                    schema:
                      type: object
                      properties:
                        type:
                          type: string
                          format: uri
                          description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                          default: 'about:blank'
                          example: 'https://zalando.github.io/problem/constraint-violation'
                        code:
                          type: string
                          description: "Unique string value within the project that can be used to issue's id\n"
                          example: identity-and-access/forbidden
                        title:
                          type: string
                          description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                        status:
                          type: integer
                          format: int32
                          description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                          minimum: 100
                          maximum: 600
                          exclusiveMaximum: true
                          example: 503
                        detail:
                          type: string
                          description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                          example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  '/advertisements/{advertisementId}':
    get:
      tags:
        - Advertisement
      description: 'Get advertisement details'
      operationId: getAdvertisementDetails
      parameters:
        -
          name: advertisementId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: uuid
      responses:
        '200':
          description: 'Advertisement details'
          content:
            application/json:
              schema:
                properties:
                  advertisement:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: uuid
                      advertisementType:
                        enum:
                          - banner
                        type: string
                        example: banner
                      url:
                        type: string
                        format: uri
                        nullable: true
                      desktopImageUrl:
                        type: string
                        format: uri
                      mobileImageUrl:
                        type: string
                        format: uri
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                        example: '2024-11-20 08:00:00'
                      updatedAt:
                        type: string
                        format: date-time
                        example: '2024-11-20 08:00:00'
      security:
        -
          bearerAuth: []
  /sliders:
    get:
      tags:
        - Slider
      description: 'List all sliders'
      operationId: getSliders
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
      responses:
        '200':
          description: 'List of sliders'
          content:
            application/json:
              schema:
                type: object
                properties:
                  sliders:
                    type: array
                    items:
                      required:
                        - id
                        - title
                        - description
                        - imageUrl
                        - status
                        - language
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                        imageUrl:
                          type: string
                          description: 'Image URL'
                        status:
                          enum:
                            - active
                            - passive
                            - pending
                          type: string
                        ctaButton:
                          type: object
                          properties:
                            text:
                              type: string
                            url:
                              type: string
                        language:
                          type: object
                          properties:
                            id:
                              type: string
                            code:
                              type: string
                            name:
                              type: string
  /user/change-onboarding-status:
    patch:
      tags:
        - Users
      description: 'Change the onboarding status of a user'
      operationId: changeOnboardingStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                isOnboarded:
                  type: boolean
                  example: true
        required: true
      responses:
        '204':
          description: 'No Content'
        '404':
          description: 'User not found'
      security:
        -
          bearerAuth: []
  /user-request-forms:
    post:
      tags:
        - 'User Request Forms'
      description: 'Create a new user request form'
      operationId: createNewUserRequestForm
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - surname
                - email
                - phoneNumber
                - message
              type: object
              properties:
                name:
                  type: string
                  example: Burak
                surname:
                  type: string
                  example: Sevinç
                email:
                  type: string
                  format: email
                  example: burak.sevinc@ready2.gg
                companyName:
                  type: string
                  nullable: true
                  example: Ready2
                phoneNumber:
                  type: object
                  properties:
                    countryCode:
                      type: integer
                      example: 90
                    phoneNumber:
                      type: string
                      example: '5555555555'
                message:
                  type: string
                  example: 'I want to create a hub'
      responses:
        '201':
          description: Created
      security:
        - {  }
        -
          bearerAuth: []
  /platform:
    get:
      tags:
        - Platform
      description: 'Get platform information'
      operationId: getPlatformInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  platform:
                    type: object
                    properties:
                      languages:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              type: string
                            name:
                              type: string
                            code:
                              type: string
                            isDefault:
                              type: boolean
      security:
        - {  }
        -
          bearerAuth: []
  '/hubs/{hubId}/accept-invitation':
    patch:
      tags:
        - Hub
      description: 'Approve hub member invitation'
      operationId: approveHubMemberInvitation
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'You have successfully invite user to hub.'
        '422':
          description: 'Something went wrong.'
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/reject-invitation':
    patch:
      tags:
        - Hub
      description: 'Reject hub member invitation'
      operationId: rejectHubMemberInvitation
      parameters:
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          schema:
            type: string
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'You have successfully invite user to hub.'
        '422':
          description: 'Something went wrong.'
      security:
        -
          bearerAuth: []
  '/direct-messages/{contactUserId}':
    post:
      tags:
        - 'Direct Messages'
      description: 'Creates a direct message'
      operationId: createDirectMessage
      parameters:
        -
          name: contactUserId
          in: path
          description: 'User id in UUID format'
          required: true
          schema:
            type: string
            format: uuid
          example: us2eec31-2b60-4fa5-a090-627b8597b0b6
      responses:
        '201':
          description: 'Tournament Created'
          content:
            application/json:
              schema:
                properties:
                  chatId:
                    type: string
                    description: 'Chat ID'
                    format: uuid
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
    delete:
      tags:
        - 'Direct Messages'
      description: 'Delete chat with contact'
      operationId: deleteChat
      parameters:
        -
          name: contactUserId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: OK
      security:
        -
          bearerAuth: []
  /direct-messages/unread-messages:
    get:
      tags:
        - 'Direct Messages'
      description: 'Unread messages of the user'
      operationId: getUnreadMessages
      responses:
        '200':
          description: 'Unread messages of the user'
          content:
            application/json:
              schema:
                type: object
                properties:
                  unreadMessages:
                    type: object
                    properties:
                      directMessages:
                        type: integer
                        example: 3
                      chatGroupMessages:
                        type: integer
                        example: 0
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  /announcements:
    post:
      tags:
        - 'Direct Messages'
      description: 'Send an announcement message to users'
      operationId: sendAnnouncementMessage
      requestBody:
        content:
          application/json:
            schema:
              required:
                - message
                - announcementType
              type: object
              properties:
                message:
                  type: string
                  example: 'Hello, this is an announcement message'
                announcementType:
                  enum:
                    - general
                    - tournament
                    - hub
                    - game
                  type: string
                  description: 'Type of announcement message. Default is general.'
                  default: general
                details:
                  oneOf:
                    -
                      title: 'General Announcement Details'
                      type: object
                    -
                      title: 'Tournament Announcement Details'
                      type: object
                      properties:
                        tournamentId:
                          type: string
                          format: uuid
                    -
                      title: 'Hub Announcement Details'
                      type: object
                      properties:
                        hubId:
                          type: string
                          format: uuid
                    -
                      title: 'Game Announcement Details'
                      type: object
                      properties:
                        gameId:
                          type: string
                          format: uuid
                  description: 'Details of the announcement message. If announcementType is general, details may be null.'
                  nullable: true
                announcementId:
                  type: string
                  description: 'If you want set a specific announcement id, you can set it here but it must be a valid ULID.'
                  nullable: true
                  example: null
        required: true
      responses:
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  /leaderboards:
    post:
      tags:
        - Leaderboards
      description: 'Create a leaderboard'
      operationId: createLeaderboard
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - gameId
                - ownerType
                - ownerId
                - isVisible
              type: object
              properties:
                name:
                  type: string
                  example: 'ESA Leaderboard'
                gameId:
                  type: string
                  format: uuid
                  example: uuid
                ownerType:
                  enum:
                    - hub
                    - user
                  type: string
                ownerId:
                  type: string
                  format: uuid
                  example: uuid
                isVisible:
                  type: boolean
                  example: true
      responses:
        '201':
          description: Created
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}':
    get:
      tags:
        - Leaderboards
      description: 'Get leaderboards settings details'
      operationId: getLeaderboardDetails
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                allOf:
                  -
                    type: object
                    properties:
                      leaderboard:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          name:
                            type: string
                          status:
                            enum:
                              - Draft
                              - Publish
                              - Deleted
                            type: string
                            description: '0- Draft 1- Publish 10- Deleted'
                          gamesConfig:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              name:
                                type: string
                              slug:
                                type: string
                                example: slug
                              logo:
                                type: string
                                example: 'https://'
                              defaultImages:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      description: 'Default image id'
                                      format: uuid
                                    imageId:
                                      type: string
                                      description: 'Tournament image id'
                                      format: uuid
                                    fileUrl:
                                      type: string
                                      example: 'https://'
                                    type:
                                      enum:
                                        - logo
                                        - banner
                                        - thumbnail
                                      type: string
                          description:
                            type: string
                            nullable: true
                          slug:
                            type: string
                          isVisible:
                            type: boolean
                          banner:
                            type: string
                            nullable: true
                          thumbnail:
                            type: string
                            nullable: true
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Leaderboards
      description: 'Change a leaderboard details'
      operationId: changeLeaderboard
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: false
                  example: 'ESA Leaderboard'
                description:
                  type: string
                  nullable: true
                  example: 'This is a leaderboard for the ESA community'
                bannerId:
                  type: string
                  description: 'If set null, the banner will be removed'
                  format: uuid
                  nullable: true
                  example: uuid
                thumbnailId:
                  type: string
                  description: 'If set null, the thumbnail will be removed'
                  format: uuid
                  nullable: true
                  example: uuid
                isVisible:
                  type: boolean
                  nullable: false
                  example: true
      responses:
        '204':
          description: 'Leaderboard updated successfully'
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/scoring':
    get:
      tags:
        - Leaderboards
      description: 'Get leaderboard scoring details'
      operationId: getLeaderboardScoring
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  scoringDetails:
                    required:
                      - name
                      - table
                    type: object
                    properties:
                      name:
                        type: string
                      table:
                        type: array
                        items:
                          required:
                            - from
                            - to
                            - points
                          type: object
                          properties:
                            from:
                              type: integer
                            to:
                              type: integer
                            points:
                              type: integer
      security:
        - {  }
        -
          bearerAuth: []
    patch:
      tags:
        - Leaderboards
      description: 'Change a leaderboard scoring'
      operationId: changeLeaderboardScoring
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - table
              type: object
              properties:
                name:
                  type: string
                  nullable: false
                  example: 'ESA Points'
                table:
                  type: array
                  items:
                    required:
                      - from
                      - to
                      - points
                    type: object
                    properties:
                      from:
                        type: integer
                        nullable: false
                        example: 1
                      to:
                        type: integer
                        nullable: false
                        example: 1
                      points:
                        type: integer
                        nullable: false
                        example: 100
                  nullable: false
      responses:
        '204':
          description: 'Leaderboard scoring updated successfully'
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/add-tournaments':
    patch:
      tags:
        - Leaderboards
      description: 'Add tournaments to a leaderboard'
      operationId: addTournamentsToLeaderboard
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tournamentIds:
                  type: array
                  items:
                    type: string
      responses:
        '204':
          description: 'Added tournaments to leaderboard successfully'
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/tournaments/{tournamentId}/remove-tournament':
    delete:
      tags:
        - Leaderboards
      description: 'Remove tournament from a leaderboard'
      operationId: removeTournamentFromLeaderboard
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
        -
          name: tournamentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: 'Tournament removed from leaderboard'
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/search-tournaments':
    get:
      tags:
        - Leaderboards
      description: 'Search tournaments for connect to leaderboard'
      operationId: searchTournamentsForLeaderboard
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
        -
          name: tournamentName
          in: query
          description: 'Name filter'
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          description: 'Page number'
          required: false
          schema:
            type: integer
            example: 1
        -
          name: pageSize
          in: query
          description: 'Page size maximum 50, minimum 1, default 20'
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tournaments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Tournament uuid'
                          format: uuid
                        name:
                          type: string
                        tournamentStartDate:
                          type: string
                          format: '2025-01-01 01:01:01'
                        timezone:
                          type: string
                        numberOfUsers:
                          type: integer
                          example: 3
                        totalSlots:
                          type: integer
                          example: 32
                        endDate:
                          type: string
                          format: '2025-01-01 01:01:01'
                          nullable: true
                        status:
                          enum:
                            - notStarted
                            - applicationOpen
                            - applicationClosed
                            - checkIn
                            - subCheckIn
                            - checkInClosed
                            - seeding
                            - stage
                            - tournamentStarted
                            - ongoing
                            - finished
                            - setup
                          type: string
                          description: 'Tournament status'
                        tournamentSlug:
                          type: string
                        gameConfig:
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                            logo:
                              type: string
                              nullable: true
                        thumbnail:
                          type: string
                          nullable: true
                  filter:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      pageSize:
                        type: integer
                        example: 10
                      totalPage:
                        type: integer
                        example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/connected-tournaments':
    get:
      tags:
        - Leaderboards
      description: "Leaderboards' connected tournaments"
      operationId: connectedTournamentsAtLeaderboard
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
        -
          name: tournamentName
          in: query
          description: 'Name filter'
          required: false
          schema:
            type: string
        -
          name: tournamentStatus
          in: query
          description: 'Status filter'
          required: false
          schema:
            enum:
              - past
              - ongoing
              - upcoming
            type: string
        -
          name: page
          in: query
          description: 'Page number'
          required: false
          schema:
            type: integer
            example: 1
        -
          name: pageSize
          in: query
          description: 'Page size maximum 50, minimum 1, default 20'
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tournaments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 'Tournament uuid'
                          format: uuid
                        name:
                          type: string
                        tournamentStartDate:
                          type: string
                          format: '2025-01-01 01:01:01'
                        timezone:
                          type: string
                        numberOfUsers:
                          type: integer
                          example: 3
                        totalSlots:
                          type: integer
                          example: 32
                        endDate:
                          type: string
                          format: '2025-01-01 01:01:01'
                          nullable: true
                        status:
                          enum:
                            - notStarted
                            - applicationOpen
                            - applicationClosed
                            - checkIn
                            - subCheckIn
                            - checkInClosed
                            - seeding
                            - stage
                            - tournamentStarted
                            - ongoing
                            - finished
                            - setup
                          type: string
                          description: 'Tournament status'
                        tournamentSlug:
                          type: string
                        gameConfig:
                          type: object
                          properties:
                            name:
                              type: string
                            slug:
                              type: string
                            logo:
                              type: string
                              nullable: true
                        thumbnail:
                          type: string
                          nullable: true
                  filter:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      pageSize:
                        type: integer
                        example: 10
                      totalPage:
                        type: integer
                        example: 1
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/change-status':
    patch:
      tags:
        - Leaderboards
      description: 'Change leaderboard status.'
      operationId: changeLeaderboardStatus
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  enum:
                    - draft
                    - publish
                  type: string
      responses:
        '204':
          description: 'Added tournaments to leaderboard successfully'
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/scoring/clear':
    patch:
      tags:
        - Leaderboards
      description: 'Clear a leaderboard scoring'
      operationId: clearLeaderboardScoring
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '204':
          description: 'Leaderboard scoring cleared successfully'
      security:
        -
          bearerAuth: []
  '/leaderboards/owner/{ownerType}/{ownerId}':
    get:
      tags:
        - Leaderboards
      description: 'Get leaderboards by owner'
      operationId: getLeaderboardsByOwner
      parameters:
        -
          name: ownerType
          in: path
          description: 'Owner type'
          required: true
          schema:
            enum:
              - hub
              - user
            type: string
        -
          name: ownerId
          in: path
          description: 'Owner id'
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
        -
          name: page
          in: query
          description: 'Page number'
          required: false
          schema:
            type: integer
            example: 1
        -
          name: pageSize
          in: query
          description: 'Page size maximum 50, minimum 1, default 20'
          required: false
          schema:
            type: integer
            example: 10
        -
          name: leaderboardStatus
          in: query
          description: 'Leaderboard status'
          required: false
          schema:
            enum:
              - publish
              - draft
            type: string
        -
          name: gameSlug
          in: query
          description: 'Game slug'
          required: false
          schema:
            type: string
            example: valorant
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  leaderboards:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        status:
                          enum:
                            - Draft
                            - Publish
                            - Deleted
                          type: string
                          description: '0- Draft 1- Publish 10- Deleted'
                        gamesConfig:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                              example: slug
                            logo:
                              type: string
                              example: 'https://'
                        description:
                          type: string
                          nullable: true
                        slug:
                          type: string
                        isVisible:
                          type: boolean
                        banner:
                          type: string
                          nullable: true
                        thumbnail:
                          type: string
                          nullable: true
                        teamCount:
                          type: integer
                          example: 3
                        prizeCount:
                          type: integer
                          example: 2
                    nullable: true
                  filter:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      pageSize:
                        type: integer
                        example: 10
                      totalPage:
                        type: integer
                        example: 1
      security:
        - {  }
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/leaderboards':
    get:
      tags:
        - 'Organizing Tournament'
      description: 'Get leaderboards by tournament'
      operationId: getTournamentLeaderboards
      parameters:
        -
          name: tournamentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        -
          name: searchTerm
          in: query
          description: 'Search term'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  leaderboards:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        status:
                          enum:
                            - Draft
                            - Publish
                            - Deleted
                          type: string
                          description: '0- Draft 1- Publish 10- Deleted'
                        gamesConfig:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                              example: slug
                            logo:
                              type: string
                              example: 'https://'
                        description:
                          type: string
                          nullable: true
                        slug:
                          type: string
                        isVisible:
                          type: boolean
                        banner:
                          type: string
                          nullable: true
                        thumbnail:
                          type: string
                          nullable: true
                    nullable: true
      security:
        - {  }
        -
          bearerAuth: []
    patch:
      tags:
        - 'Organizing Tournament'
      description: 'Add leaderboards to a tournament'
      operationId: addLeaderboardsToTournament
      parameters:
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                leaderboardIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                    example: uuid
      responses:
        '204':
          description: 'Added leaderboards to tournament successfully'
      security:
        -
          bearerAuth: []
  '/tournaments/{tournamentId}/leaderboards/{leaderboardId}':
    delete:
      tags:
        - 'Organizing Tournament'
      description: 'Remove leaderboard from a tournament'
      operationId: removeLeaderboardFromTournament
      parameters:
        -
          name: leaderboardId
          in: path
          description: 'Leaderboard UUID'
          required: true
          schema:
            type: string
            format: uuid
        -
          name: tournamentId
          in: path
          description: 'Tournament UUID'
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'Leaderboard removed from tournament'
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/prizes':
    get:
      tags:
        - Leaderboards
      description: "Get leaderboards' prizes"
      operationId: getLeaderboardPrizes
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  prizes:
                    type: array
                    items:
                      type: object
                      properties:
                        from:
                          type: integer
                        to:
                          type: integer
                        prize:
                          type: string
                          example: 'Notebook, 1000'
                        prizeType:
                          enum:
                            - custom
                            - currency
                          type: string
                        currency:
                          type: string
                          nullable: true
                          example: $
                        currencyId:
                          type: string
                          format: uuid
                          nullable: true
        '401':
          description: Unauthenticated
        '403':
          description: Forbidden
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Leaderboards
      description: "Change leaderboards' prizes"
      operationId: changeLeaderboardPrizes
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              required:
                - prizes
              type: object
              properties:
                prizes:
                  type: array
                  items:
                    required:
                      - from
                      - to
                      - prize
                      - prizeType
                    type: object
                    properties:
                      from:
                        type: integer
                        nullable: false
                        example: 1
                      to:
                        type: integer
                        nullable: false
                        example: 1
                      prize:
                        type:
                          - integer
                          - string
                        nullable: false
                        example: 100
                      prizeType:
                        enum:
                          - custom
                          - currency
                        type: string
                        default: custom
                      currencyId:
                        type: string
                        format: uuid
                        nullable: true
                  nullable: false
      responses:
        '204':
          description: 'Leaderboard prizes updated successfully'
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/clear-prizes':
    delete:
      tags:
        - Leaderboards
      description: 'Remove a leaderboard prizes'
      operationId: removeLeaderboardPrizes
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '204':
          description: 'Leaderboard prizes removed successfully'
      security:
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/hero':
    get:
      tags:
        - Leaderboards
      description: "Leaderboards' hero"
      operationId: getLeaderboardsHero
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  hero:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      slug:
                        type: string
                      status:
                        enum:
                          - status
                          - draft
                        type: string
                      thumbnail:
                        type: string
                        nullable: true
                      banner:
                        type: string
                        nullable: true
                      ownerType:
                        enum:
                          - user
                          - hub
                        type: string
                      gameId:
                        type: string
                        format: uuid
                      gameName:
                        type: string
                      gameSlug:
                        type: string
                      gameLogo:
                        type: string
                        nullable: true
        '403':
          description: Forbidden
      security:
        - {  }
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/overview':
    get:
      tags:
        - Leaderboards
      description: "Leaderboards' overview"
      operationId: getLeaderboardsOverview
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  hero:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      slug:
                        type: string
                      status:
                        enum:
                          - status
                          - draft
                        type: string
                      thumbnail:
                        type: string
                        nullable: true
                      banner:
                        type: string
                        nullable: true
                      description:
                        type: string
                        nullable: true
                      ownerType:
                        enum:
                          - user
                          - hub
                        type: string
                      gameId:
                        type: string
                        format: uuid
                      gameName:
                        type: string
                      gameSlug:
                        type: string
                      gameLogo:
                        type: string
                        nullable: true
                      prizes:
                        type: array
                        items:
                          type: object
                          properties:
                            from:
                              type: integer
                            to:
                              type: integer
                            prize:
                              type: string
                            prizeType:
                              enum:
                                - custom
                                - currency
                              type: string
                            currency:
                              type: string
                              nullable: true
                            currencyId:
                              type: string
                              format: uuid
                              nullable: true
                      teams:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            hash:
                              type: integer
                            logo:
                              type: string
                              nullable: true
                            score:
                              type: integer
                      scoring:
                        type: object
                        properties:
                          name:
                            type: string
                          table:
                            type: array
                            items:
                              type: object
                              properties:
                                from:
                                  type: integer
                                to:
                                  type: integer
                                points:
                                  type: integer
                        nullable: true
                      ownerDetails:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          category:
                            enum:
                              - organization
                              - brand
                            type: string
                          name:
                            type: string
                          slug:
                            type: string
                          memberCount:
                            type: integer
                          avatar:
                            type: string
                            nullable: true
                      admins:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            nickname:
                              type: string
                            avatar:
                              type: string
                              nullable: true
                            role:
                              enum:
                                - owner
                                - admin
                              type: string
        '403':
          description: Forbidden
      security:
        - {  }
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/team/{teamId}/score-details':
    get:
      tags:
        - Leaderboards
      description: "Leaderboard teams' score details"
      operationId: getLeaderboardTeamsScoreDetails
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
        -
          name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  scores:
                    type: object
                    properties:
                      position:
                        type: integer
                      totalScore:
                        type: integer
                      tournaments:
                        type: array
                        items:
                          type: object
                          properties:
                            score:
                              type: integer
                            id:
                              type: string
                              description: 'Tournament Uuid'
                              format: uuid
                            name:
                              type: string
                            slug:
                              type: string
                            startDate:
                              type: string
                              nullable: true
                              example: '2025-02-27 12:00:00'
                            thumbnail:
                              type: string
                              nullable: true
                            ranking:
                              type: integer
                      team:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          name:
                            type: string
                          slug:
                            type: string
                          hash:
                            type: integer
                          logo:
                            type: string
                            nullable: true
                          members:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: 'User uuid'
                                  format: uuid
                                nickname:
                                  type: string
                                nicknameHash:
                                  type: integer
                                friendStatus:
                                  enum:
                                    - friend
                                    - not-friend
                                  type: string
                                gameName:
                                  type: string
                                avatar:
                                  type: string
                                  nullable: true
                                createdAt:
                                  type: string
                                  example: '2025-01-01 01:01:01'
                                role:
                                  enum:
                                    - Founder
                                    - Member
                                    - Coach
                                    - Substitute
                                  type: string
        '403':
          description: Forbidden
      security:
        - {  }
        -
          bearerAuth: []
  '/leaderboards/{leaderboardId}/tournament-details':
    get:
      tags:
        - Leaderboards
      description: "Leaderboard tournaments' details"
      operationId: getLeaderboardTournamentsDetails
      parameters:
        -
          name: leaderboardId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
        -
          name: tournamentStatus
          in: query
          description: 'Status filter'
          required: false
          schema:
            enum:
              - past
              - ongoing
              - upcoming
            type: string
        -
          name: page
          in: query
          description: 'Page number'
          required: false
          schema:
            type: integer
            example: 1
        -
          name: pageSize
          in: query
          description: 'Page size maximum 50, minimum 1, default 20'
          required: false
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  tournaments:
                    type: array
                    items:
                      type: object
                      properties:
                        tournamentId:
                          type: string
                          format: uuid
                        tournamentName:
                          type: string
                        tournamentSlug:
                          type: string
                        tournamentThumbnail:
                          type: string
                          nullable: true
                        startDate:
                          type: string
                          format: '2025-01-01 01:01:01'
                        timezone:
                          type: string
                        numberOfUser:
                          type: integer
                        totalSlot:
                          type: integer
                        endDate:
                          type: string
                          format: '2025-01-01 01:01:01'
                          nullable: true
                        gameName:
                          type: string
                        gameSlug:
                          type: string
                        gameLogo:
                          type: string
                          nullable: true
                        tournamentStatus:
                          enum:
                            - notStarted
                            - applicationOpen
                            - applicationClosed
                            - checkIn
                            - subCheckIn
                            - checkInClosed
                            - seeding
                            - tournamentStarted
                            - ongoing
                            - finished
                          type: string
                  filter:
                    type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      pageSize:
                        type: integer
                        example: 10
                      totalPage:
                        type: integer
                        example: 1
        '403':
          description: Forbidden
      security:
        - {  }
        -
          bearerAuth: []
  '/leaderboards/find-id-by-slug/{slug}':
    get:
      tags:
        - Leaderboards
      description: 'Find leaderboard id by slug'
      operationId: findLeaderboardIdBySlug
      parameters:
        -
          name: slug
          in: query
          description: 'Leaderboard slug'
          required: false
          schema:
            type: string
            example: esa-esports
      responses:
        '200':
          description: 'Leaderboard id'
          content:
            application/json:
              schema:
                properties:
                  leaderboardId:
                    type: string
                    description: 'Leaderboard id'
  '/gamer-profile/{nickname}/activities':
    get:
      tags:
        - 'Gamer Profile'
      description: 'This endpoint retrieves the activities of a gamer. Cached for 1 minute. Sorted by happenedAt descending. The activities are paginated. The page size is dynamic and can be set using the pageSize parameter. The maximum page size is 50. The pageSize parameter is optional and defaults to 50 if not provided. The pageSize parameter must be between 1 and 50. If the pageSize parameter is greater than 50, it will be set to 50.'
      operationId: getGamerActivities
      parameters:
        -
          name: nickname
          in: path
          description: 'The nickname of the user'
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number'
          required: false
          schema:
            type: integer
        -
          name: pageSize
          in: query
          description: 'Between 1 and 50. Dynamic page size. Max limit is 50.'
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: 'Gamer activities'
          content:
            application/json:
              schema:
                required:
                  - activities
                type: object
                properties:
                  activities:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: 'Unique identifier for the activity.'
                          format: uuid
                        actorType:
                          enum:
                            - User
                            - Team
                            - Hub
                          type: string
                          description: 'Type of the actor.'
                        activityType:
                          enum:
                            - accepted-friend-request
                            - team-joined
                            - team-member-added
                            - team-member-left
                            - team-created
                            - team-tournament-joined
                            - tournament-joined
                            - tournament-positioned
                            - profile-picture-updated
                            - social-media-updated
                            - hub-joined
                            - hub-left
                            - user-commented
                            - platform-joined
                            - game-stat-reached
                          type: string
                          description: 'Type of the activity.'
                        targetType:
                          enum:
                            - User
                            - Hub
                            - Team
                            - Tournament
                            - Game
                            - Comment
                          type: string
                          description: 'Type of the target.'
                        isHidden:
                          type: boolean
                          description: 'Indicates if the activity is hidden.'
                        extraData:
                          oneOf:
                            -
                              nullable: true
                            -
                              title: Team
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'Unique identifier for the team.'
                                name:
                                  type: string
                                  description: 'Name of the team.'
                                slug:
                                  type: string
                                  description: 'Slug of the team.'
                                avatar:
                                  type: string
                                  description: "URL of the team's avatar."
                                  format: uri
                                  nullable: true
                                gameName:
                                  type: string
                                  description: 'Name of the game.'
                                gameSlug:
                                  type: string
                                  description: 'Slug of the game.'
                                gameLogo:
                                  type: string
                                  description: "URL of the game's logo."
                                  format: uri
                                  nullable: true
                              description: 'Extra data for tournament-joined, tournament-positioned activities.'
                          description: 'Extra data for the activity.'
                        happenedAt:
                          type: string
                          description: 'When the activity happened.'
                          format: date-time
                        createdAt:
                          type: string
                          description: 'When the activity was created.'
                          format: date-time
                        updatedAt:
                          type: string
                          description: 'When the activity was last updated.'
                          format: date-time
                        target:
                          oneOf:
                            -
                              title: Tournament
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'Unique identifier for the target.'
                                name:
                                  type: string
                                  description: 'Name of the target.'
                                slug:
                                  type: string
                                  description: 'Slug of the target.'
                                logo:
                                  type: string
                                  description: "URL of the target's logo."
                                  format: uri
                                  nullable: true
                                banner:
                                  type: string
                                  description: "URL of the target's banner."
                                  format: uri
                                  nullable: true
                                thumbnail:
                                  type: string
                                  description: "URL of the target's thumbnail."
                                  format: uri
                                  nullable: true
                                gameName:
                                  type: string
                                  description: 'Name of the game.'
                                gameSlug:
                                  type: string
                                  description: 'Slug of the game.'
                                gameLogo:
                                  type: string
                                  description: "URL of the game's logo."
                                  format: uri
                                  nullable: true
                            -
                              title: Hub
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'Unique identifier for the target.'
                                name:
                                  type: string
                                  description: 'Name of the target.'
                                slug:
                                  type: string
                                  description: 'Slug of the target.'
                                avatar:
                                  type: string
                                  description: "URL of the target's avatar."
                                  format: uri
                                  nullable: true
                                banner:
                                  type: string
                                  description: "URL of the target's banner."
                                  format: uri
                                  nullable: true
                            -
                              title: Team
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'Unique identifier for the target.'
                                name:
                                  type: string
                                  description: 'Name of the target.'
                                slug:
                                  type: string
                                  description: 'Slug of the target.'
                                avatar:
                                  type: string
                                  description: "URL of the target's avatar."
                                  format: uri
                                  nullable: true
                                gameName:
                                  type: string
                                  description: 'Name of the game.'
                                gameSlug:
                                  type: string
                                  description: 'Slug of the game.'
                                gameLogo:
                                  type: string
                                  description: "URL of the game's logo."
                                  format: uri
                                  nullable: true
                            -
                              title: User
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'Unique identifier for the target.'
                                nickname:
                                  type: string
                                  description: 'The nickname of the target.'
                                avatar:
                                  type: string
                                  description: "URL of the target's avatar."
                                  format: uri
                                  nullable: true
                                createdAt:
                                  type: string
                                  description: 'When the target was created.'
                                  format: date
                                  example: 1735689600
                            -
                              title: Game
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  description: 'Unique identifier for the target.'
                                name:
                                  type: string
                                  description: 'Name of the target.'
                                slug:
                                  type: string
                                  description: 'Slug of the target.'
                                logo:
                                  type: string
                                  description: "URL of the target's logo."
                                  format: uri
                                  nullable: true
                        message:
                          type: string
                          description: 'Message associated with the activity.'
                  pagination:
                    required:
                      - page
                      - pageSize
                      - total
                    type: object
                    properties:
                      page:
                        type: integer
                        description: 'The current page number.'
                      perPage:
                        type: integer
                        description: 'The number of items per page.'
                      totalPage:
                        type: integer
                        description: 'The total number of pages.'
        '404':
          description: 'Gamer not found'
          content:
            application/json:
              schema:
                required:
                  - success
                  - code
                  - message
                  - data
                  - type
                  - title
                  - status
                  - detail
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: undefined
                  nickname:
                    type: string
                  type:
                    type: string
                  title:
                    type: string
                  status:
                    type: number
                  detail:
                    type: string
      security:
        - {  }
        -
          bearerAuth: []
  '/encounters/{encounterId}/sets/{setId}/reset-set-lobby':
    patch:
      tags:
        - Encounters
      description: 'Admin can re-set lobby details to encounter set'
      operationId: resetEncounterSetLobby
      parameters:
        -
          name: encounterId
          in: path
          description: 'Encounter uuid'
          required: true
          schema:
            type: string
            format: uuid
          example: 4f2eec31-2b60-4fa5-a090-627b8597b0b6
        -
          name: setId
          in: path
          description: 'Set Id'
          required: true
          schema:
            type: string
          example: match-1234
      responses:
        '204':
          description: 'No Content'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n"
                    format: uri
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                  code:
                    type: string
                    description: "Unique string value within the project that can be used to issue's id\n"
                    example: identity-and-access/forbidden
                  title:
                    type: string
                    description: "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n"
                  status:
                    maximum: 600
                    exclusiveMaximum: true
                    minimum: 100
                    type: integer
                    description: "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n"
                    format: int32
                    example: 503
                  detail:
                    type: string
                    description: "A human readable explanation specific to this occurrence of the\nproblem.\n"
                    example: 'Connection to database timed out'
      security:
        -
          bearerAuth: []
  /ladders:
    post:
      tags:
        - Ladders
      description: 'Create a ladder'
      operationId: createLadder
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - gameId
                - ownerType
                - ownerId
                - isVisible
              type: object
              properties:
                name:
                  type: string
                  example: 'ESA Ladder'
                gameId:
                  type: string
                  format: uuid
                  example: uuid
                ownerType:
                  enum:
                    - hub
                    - user
                  type: string
                ownerId:
                  type: string
                  format: uuid
                  example: uuid
                isVisible:
                  type: boolean
                  example: true
      responses:
        '201':
          description: Created
      security:
        -
          bearerAuth: []
  '/ladders/{ladderId}':
    get:
      tags:
        - Ladders
      description: 'Get ladder details.'
      operationId: getLadderDetails
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  ladder:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      slug:
                        type: string
                      isVisible:
                        type: boolean
                      status:
                        enum:
                          - draft
                          - publish
                        type: string
                      description:
                        type: string
                        nullable: true
                      thumbnail:
                        type: string
                        nullable: true
                      banner:
                        type: string
                        nullable: true
                      game:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          name:
                            type: string
                          slug:
                            type: string
                          logo:
                            type: string
                            nullable: true
                          defaultImages:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: 'The ID of the Ladder Game Default Image'
                                  format: uuid
                                imageId:
                                  type: string
                                  description: 'In files table image uuid (You can use this for change image)'
                                  format: uuid
                                url:
                                  type: string
                                type:
                                  enum:
                                    - thumbnail
                                    - banner
                                  type: string
        '404':
          description: 'Ladder not found.'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Ladders
      description: "Change a ladder's settings."
      operationId: changeLadderDetails
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  nullable: false
                  example: 'ESA Ladder'
                description:
                  type: string
                  nullable: true
                  example: 'This is a ladder description'
                bannerId:
                  type: string
                  description: 'If set null, the banner will be removed'
                  format: uuid
                  nullable: true
                  example: uuid
                thumbnailId:
                  type: string
                  description: 'If set null, the thumbnail will be removed'
                  format: uuid
                  nullable: true
                  example: uuid
                isVisible:
                  type: boolean
                  nullable: false
                  example: true
                rankingGameCount:
                  type: integer
                  description: 'Number of games to be ranked'
                  nullable: false
                  example: 1
      responses:
        '204':
          description: 'Ladder updated successfully.'
      security:
        -
          bearerAuth: []
  '/ladders/{ladderId}/schedule':
    get:
      tags:
        - Ladders
      description: 'Get ladder schedule details.'
      operationId: getLadderSchedule
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  ladder:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      status:
                        enum:
                          - draft
                          - publish
                        type: string
                      startedAt:
                        type: string
                        description: 'Start date calculated with ladder timezone.'
                        format: 'Y-m-d H:i:s'
                      timezone:
                        type: string
                        example: UTC
                      gameCount:
                        type: integer
                      duration:
                        type: integer
                      durationType:
                        enum:
                          - seconds
                          - minutes
                          - hours
                          - days
                          - weeks
                          - months
                          - years
                        type: string
                      durationTypes:
                        type: array
                        items:
                          enum:
                            - seconds
                            - minutes
                            - hours
                            - days
                            - weeks
                            - months
                            - years
                          type: string
                      game:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          name:
                            type: string
                          slug:
                            type: string
                          logo:
                            type: string
                            nullable: true
        '404':
          description: 'Ladder not found.'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Ladders
      description: "Change a ladder's schedule."
      operationId: changeLadderSchedule
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  required:
                    - startDate
                    - durationType
                    - duration
                    - timezone
                  type: object
                  properties:
                    startDate:
                      type: string
                      description: 'Start date of the ladder in Y-m-d H:i:s format. Must be in the future.'
                      example: '2025-01-01 00:00:00'
                    timezone:
                      type: string
                      description: 'Timezone of the ladder.'
                      nullable: true
                      example: UTC
                    durationType:
                      enum:
                        - seconds
                        - minutes
                        - hours
                        - days
                        - weeks
                        - months
                        - years
                      type: string
                      description: 'Duration type (with plural).'
                      example: seconds
                    duration:
                      type: integer
                      description: 'Duration of the ladder.'
                      example: 10
                  description: 'Change ladder start date and duration.'
                gameCount:
                  type: integer
                  description: 'Number of games to be ranked'
                  example: 1
      responses:
        '204':
          description: 'Ladder schedule updated'
      security:
        -
          bearerAuth: []
  '/ladders/{ladderId}/prizes':
    get:
      tags:
        - Ladders
      description: 'Get ladder prize details.'
      operationId: getLadderPrizes
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  ladder:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      status:
                        enum:
                          - draft
                          - publish
                        type: string
                      prizes:
                        type: array
                        items:
                          type: object
                          properties:
                            from:
                              type: integer
                            to:
                              type: integer
                            prize:
                              type: string
                            prizeType:
                              enum:
                                - custom
                                - currency
                              type: string
                            currency:
                              type: string
                              nullable: true
                              example: $
                            currencyId:
                              type: string
                              format: uuid
                              nullable: true
                      game:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          name:
                            type: string
                          slug:
                            type: string
                          logo:
                            type: string
                            nullable: true
        '404':
          description: 'Ladder not found.'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Ladders
      description: 'Change ladder prizes'
      operationId: changeLadderPrizes
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              required:
                - prizes
              type: object
              properties:
                prizes:
                  type: array
                  items:
                    required:
                      - from
                      - to
                      - prize
                      - prizeType
                    type: object
                    properties:
                      from:
                        type: integer
                        nullable: false
                        example: 1
                      to:
                        type: integer
                        nullable: false
                        example: 1
                      prize:
                        type:
                          - integer
                          - string
                        nullable: false
                        example: 100
                      prizeType:
                        enum:
                          - custom
                          - currency
                        type: string
                        default: custom
                      currencyId:
                        type: string
                        format: uuid
                        nullable: true
                  nullable: false
      responses:
        '204':
          description: 'Ladder prizes updated successfully'
      security:
        -
          bearerAuth: []
  '/ladders/{ladderId}/rank-restriction':
    get:
      tags:
        - Ladders
      description: 'Get ladder rank restriction.'
      operationId: getLadderRankRestriction
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                properties:
                  ladder:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      isVisible:
                        type: boolean
                      status:
                        enum:
                          - draft
                          - publish
                        type: string
                      rankRestriction:
                        type: object
                        properties:
                          minRankId:
                            type: string
                            format: uuid
                            nullable: true
                          maxRankId:
                            type: string
                            format: uuid
                            nullable: true
                          gameRanks:
                            type: array
                            items:
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  format: uuid
                                name:
                                  type: string
                                rankOrder:
                                  type: integer
                                isSelected:
                                  type: boolean
                      game:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          name:
                            type: string
                          slug:
                            type: string
                          logo:
                            type: string
                            nullable: true
        '404':
          description: 'Ladder not found.'
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - Ladders
      description: 'Change the rank restriction for a ladder.'
      operationId: changeLadderRankRestriction
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              required:
                - minRankId
                - maxRankId
              type: object
              properties:
                minRankId:
                  type: string
                  description: 'Optional. If set null, the min rank will be removed.'
                  format: uuid
                  nullable: true
                  example: uuid
                maxRankId:
                  type: string
                  description: 'Optional. If set null, the max rank will be removed.'
                  format: uuid
                  nullable: true
                  example: uuid
              description: 'Min rank must be lower than max rank.'
      responses:
        '204':
          description: 'No Content'
      security:
        -
          bearerAuth: []
  '/ladders/{ladderId}/game-ranks':
    get:
      tags:
        - Ladders
      description: 'Get game ranks for a ladder'
      operationId: getGameRanksForLadder
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
        -
          name: Accept-Language
          in: header
          description: 'Language code for the response'
          required: false
          schema:
            type: string
            example: en
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  ranks:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: 'UUID of the game rank'
                        name:
                          type: string
                          description: 'Name of the game rank (translated)'
                        rankOrder:
                          type: integer
                          description: 'Rank order of the game rank'
                        isSelected:
                          type: boolean
                          description: 'Whether the game rank is selected for the ladder'
        '404':
          description: 'Ladder not found'
      security:
        - {  }
        -
          bearerAuth: []
  '/ladders/{ladderId}/join':
    post:
      tags:
        - Ladders
      description: 'Join a ladder'
      operationId: joinLadder
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
        -
          name: Accept-Language
          in: header
          description: 'Language code'
          required: false
          schema:
            type: string
            example: en-US
      responses:
        '201':
          description: 'Successfully joined the ladder'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Joined ladder successfully'
                  code:
                    type: integer
                    example: 201
                  success:
                    type: boolean
                    example: true
        '400':
          description: 'Bad Request - Invalid input or business rule violation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: integer
                    example: 400
                  success:
                    type: boolean
                    example: false
      security:
        -
          bearerAuth: []
  '/hubs/{hubId}/ladders':
    get:
      tags:
        - Hub
      description: 'Get the ladders of a hub'
      operationId: getHubLadders
      parameters:
        -
          name: hubId
          in: path
          description: "The hub's uuid"
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          description: 'The page number to retrieve (default is 1)'
          required: false
          schema:
            type: integer
            default: 1
        -
          name: pageSize
          in: query
          description: 'The number of items per page (default is 20). Minimum is 1 and maximum is 100.'
          required: false
          schema:
            type: integer
            default: 20
        -
          name: status
          in: query
          description: 'The status of the ladders to retrieve (default is all). Possible values are "draft", "publish". Only ladder admins can see ladders with status "draft".'
          required: false
          schema:
            enum:
              - all
              - draft
              - publish
            type: string
            default: all
        -
          name: game
          in: query
          description: 'Game slug to filter ladders by. If not provided, all ladders will be returned.'
          required: false
          schema:
            type: string
            example: valorant
        -
          name: search
          in: query
          description: 'Search term to filter ladders by name. If not provided, all ladders will be returned.'
          required: false
          schema:
            type: string
            example: 'ladder name'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ladders:
                    type: array
                    items:
                      '0':
                        $ref: './public-api/ladder/components.yaml#/components/schemas/LadderCard'
                  filter:
                    type: object
                    properties:
                      page:
                        type: integer
                        description: 'The current page of the paginated response'
                      pageSize:
                        type: integer
                        description: 'The number of items per page'
                      status:
                        enum:
                          - draft
                          - publish
                        type: string
                        description: 'The status of the ladders'
                        nullable: true
                      game:
                        type: string
                        description: 'The game slug used to filter ladders'
                      search:
                        type: string
                        description: 'The search term used to filter ladders by name'
                      totalPages:
                        type: integer
                        description: 'The total number of pages available'
        '404':
          description: 'Hub not found'
        '401':
          description: Unauthorized
      security:
        - {  }
        -
          bearerAuth: []
  '/ladders/{ladderId}/overview':
    get:
      tags:
        - Ladders
      description: 'Get ladders overview details'
      operationId: getLadderOverview
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  hero:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'ESA Ladder'
                      slug:
                        type: string
                        example: esa-ladder
                      bannerUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      thumbnailUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      status:
                        enum:
                          - publish
                          - draft
                        type: string
                      isHubMember:
                        type: boolean
                        example: true
                  yourPosition:
                    type: object
                    properties:
                      nickname:
                        type: string
                        example: GoodPlayer
                      nicknameHash:
                        type: integer
                        example: 10
                      imageUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                      gameNickname:
                        type: string
                        example: GoodPlayerInValorant
                      position:
                        type: integer
                        example: 1
                      playedGames:
                        type: integer
                        example: 10
                      kda:
                        type: string
                        example: 10/3/2
                      score:
                        type: number
                        format: float
                        example: 100.25
                    description: 'Your position in the ladder, if you are not in the ladder, this will be null.'
                    nullable: true
                  standings:
                    type: array
                    items:
                      type: object
                      properties:
                        rank:
                          type: integer
                          example: 1
                        nickname:
                          type: string
                          example: GoodPlayer
                        nicknameHash:
                          type: integer
                          example: 10
                        imageUrl:
                          type: string
                          example: 'https://cdn.ready2.gg/...'
                        score:
                          type: number
                          format: float
                          example: 100.25
                  about:
                    type: string
                    example: 'This is a ladder description'
                  game:
                    type: object
                    properties:
                      uuid:
                        type: string
                        format: uuid
                        example: uuid
                      name:
                        type: string
                        example: Valorant
                      slug:
                        type: string
                        example: valorant
                      imageUrl:
                        type: string
                        example: 'https://cdn.ready2.gg/...'
                  general:
                    type: object
                    properties:
                      players:
                        type: integer
                        example: 10
                      length:
                        type: object
                        properties:
                          startDate:
                            type: string
                            example: '2025-01-01 00:00:00'
                          endDate:
                            type: string
                            example: '2025-01-05 00:00:00'
                          timezone:
                            type: string
                            example: UTC
                      rank:
                        type: object
                        properties:
                          minRank:
                            type: object
                            properties:
                              uuid:
                                type: string
                                format: uuid
                                example: uuid
                              name:
                                type: string
                                example: 'Iron 1'
                            nullable: true
                          maxRank:
                            type: object
                            properties:
                              uuid:
                                type: string
                                format: uuid
                                example: uuid
                              name:
                                type: string
                                example: Radiant
                            nullable: true
                      rankingGameCount:
                        type: integer
                        example: 10
                  prizes:
                    type: array
                    items:
                      required:
                        - from
                        - to
                        - prize
                        - prizeType
                      type: object
                      properties:
                        from:
                          type: integer
                          nullable: false
                          example: 1
                        to:
                          type: integer
                          nullable: false
                          example: 1
                        prize:
                          type:
                            - integer
                            - string
                          nullable: false
                          example: 100
                        prizeType:
                          enum:
                            - custom
                            - currency
                          type: string
                          default: custom
                        currency:
                          type: string
                          nullable: true
                          example: $
                        currencyId:
                          type: string
                          format: uuid
                          nullable: true
                  scoring:
                    type: object
                    properties:
                      title:
                        type: string
                        example: ACS
                      description:
                        type: string
                        example: '0-500 points. Your average combat score (ACS) in the game determines your score.'
                  admins:
                    type: array
                    items:
                      type: object
                      properties:
                        nickname:
                          type: string
                          example: 'John Doe'
                        nicknameHash:
                          type: integer
                          example: 10
                        imageUrl:
                          type: string
                          example: 'https://cdn.ready2.gg/...'
                        role:
                          enum:
                            - owner
                            - admin
                          type: string
                  owner:
                    type: object
                    oneOf:
                      -
                        title: 'Ladder Owner Hub'
                        type: object
                        properties:
                          uuid:
                            type: string
                            format: uuid
                            example: uuid
                          name:
                            type: string
                            example: 'ESA Hub'
                          slug:
                            type: string
                            example: esa-hub
                          imageUrl:
                            type: string
                            example: 'https://cdn.ready2.gg/...'
                          memberCount:
                            type: integer
                            example: 10
                        description: 'If the ladder owner is a hub, this object will be returned.'
        '404':
          description: 'Ladder not found'
      security:
        - {  }
        -
          bearerAuth: []
  '/ladders/{ladderId}/standings':
    get:
      tags:
        - Ladders
      description: 'Ladder standings'
      operationId: getLadderStandings
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
        -
          name: Accept-Language
          in: header
          description: 'Language code for the response'
          required: false
          schema:
            type: string
            example: en
        -
          name: page
          in: query
          description: 'The page number to retrieve (default is 1)'
          required: false
          schema:
            type: integer
            default: 1
        -
          name: pageSize
          in: query
          description: 'The number of items per page (default is 20). Minimum is 1 and maximum is 100.'
          required: false
          schema:
            type: integer
            default: 20
        -
          name: search
          in: query
          description: 'Search term to filter ladder participants'
          required: false
          schema:
            type: string
            example: goodPlayer
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  standings:
                    type: array
                    items:
                      type: object
                      properties:
                        rank:
                          type: integer
                          example: 1
                        nickname:
                          type: string
                          example: GoodPlayer
                        nicknameHash:
                          type: integer
                          example: 10
                        imageUrl:
                          type: string
                          example: 'https://cdn.ready2.gg/...'
                        score:
                          type: number
                          format: float
                          example: 100.25
                  filter:
                    type: object
                    properties:
                      page:
                        type: integer
                        description: 'The current page of the paginated response'
                      pageSize:
                        type: integer
                        description: 'The number of items per page'
                      search:
                        type: string
                        description: 'The search term used to filter ladders participants'
                      totalPages:
                        type: integer
                        description: 'The total number of pages available'
        '404':
          description: 'Ladder not found'
      security:
        - {  }
        -
          bearerAuth: []
  '/ladders/{ladderId}/status':
    patch:
      tags:
        - Ladders
      description: 'Change ladder status'
      operationId: changeLadderStatus
      parameters:
        -
          name: ladderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  enum:
                    - publish
                    - draft
                  type: string
                  example: publish
      responses:
        '204':
          description: 'Ladder status changed'
      security:
        -
          bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      description: 'JWT Authorization header using the Bearer scheme.'
      scheme: bearer
      bearerFormat: JWT
tags:
  -
    name: Authentication
  -
    name: Hub
  -
    name: 'Organizing Tournament'
  -
    name: Tournaments
  -
    name: 'Tournament Teams'
  -
    name: Encounters
  -
    name: 'Encounter Chat'
  -
    name: 'Tournament Invitations'
  -
    name: Wallet
  -
    name: Store
  -
    name: Definition
  -
    name: Users
  -
    name: 'Direct Messages'
  -
    name: 'Team Chat'
  -
    name: Upload
  -
    name: Platform
  -
    name: Platform/Events
  -
    name: Test
